[{"short_id":"2tk1en","short_id_url":"https://lobste.rs/s/2tk1en","created_at":"2024-12-30T11:02:47.000-06:00","title":"lmno.lol - Drag and drop blogging minus the yucky bits of the modern web","url":"https://lmno.lol","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2tk1en/lmno_lol_drag_drop_blogging_minus_yucky","submitter_user":"xenodium","user_is_author":true,"tags":["show","web"]},{"short_id":"33rhfe","short_id_url":"https://lobste.rs/s/33rhfe","created_at":"2024-12-30T10:59:58.000-06:00","title":"Software Design is Knowledge Building","url":"https://olano.dev/blog/software-design-is-knowledge-building/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/33rhfe/software_design_is_knowledge_building","submitter_user":"facundoolano","user_is_author":true,"tags":["practices"]},{"short_id":"csfbtr","short_id_url":"https://lobste.rs/s/csfbtr","created_at":"2024-12-30T10:42:50.000-06:00","title":"Jido – Run 10k agents at 25KB each","url":"https://github.com/agentjido/jido","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eI’m Mike Hostetler and I built Jido, an Agent SDK in Elixir that lets you run thousands of agents without heavy infrastructure.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRepo: \u003ca href=\"https://github.com/agentjido/jido\" rel=\"ugc\"\u003ehttps://github.com/agentjido/jido\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGetting Started: \u003ca href=\"https://hexdocs.pm/jido/getting-started.html\" rel=\"ugc\"\u003ehttps://hexdocs.pm/jido/getting-started.html\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhy another framework?\u003c/p\u003e\n\u003cp\u003eAfter using several popular Agent frameworks and platforms, I had two key challenges:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eRunning multiple agents required process-heavy infrastructure like Docker or K8s. Running 50,000 agents in parallel was costly and diminished the benefits of agentic programming.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eToday’s agents require too much human intervention when building workflows. Why couldn’t agents manage their own WDLC (Workflow Design Life Cycle)? This felt like a major missing piece.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAgentic frameworks were written for humans. LLMs working with this code were constantly working around human work-style assumptions. So, I wrote a framework specifically for LLMs to code and operate their own agentic flows.\u003c/p\u003e\n\u003cp\u003eElixir was a natural choice because of it’s functional nature, rock-solid concurrency primitives and “let-it-crash” philosophy with dynamic error compensation. Hot code reloading was a bonus.\u003c/p\u003e\n\u003cp\u003eAgents in Jido use 25Kb of memory at rest and can easily serialize then hibernate for long-lived access. Agents possess the APIs to dynamically start and manage their own sub-agents or any other Elixir process utilizing Elixir’s OTP architecture.\u003c/p\u003e\n\u003cp\u003eJido Actions are functional primitives that Agents can dynamically orchestrate into workflows. Generated code can either run in a separate process in the current VM or in another BEAM VM that’s linked and hardened before introduction into the Agent VM.\u003c/p\u003e\n\u003cp\u003eI’m excited to help enable a world where thousands of agents work seamlessly on behalf of their human operators.\u003c/p\u003e\n","description_plain":"I'm Mike Hostetler and I built Jido, an Agent SDK in Elixir that lets you run thousands of agents without heavy infrastructure.\r\n\r\n- Repo: https://github.com/agentjido/jido \r\n- Getting Started: https://hexdocs.pm/jido/getting-started.html\r\n\r\nWhy another framework?\r\n\r\nAfter using several popular Agent frameworks and platforms, I had two key challenges:\r\n\r\n- Running multiple agents required process-heavy infrastructure like Docker or K8s. Running 50,000 agents in parallel was costly and diminished the benefits of agentic programming.\r\n\r\n- Today's agents require too much human intervention when building workflows. Why couldn't agents manage their own WDLC (Workflow Design Life Cycle)? This felt like a major missing piece.\r\n\r\nAgentic frameworks were written for humans. LLMs working with this code were constantly working around human work-style assumptions. So, I wrote a framework specifically for LLMs to code and operate their own agentic flows.\r\n\r\nElixir was a natural choice because of it's functional nature, rock-solid concurrency primitives and \"let-it-crash\" philosophy with dynamic error compensation. Hot code reloading was a bonus.\r\n\r\nAgents in Jido use 25Kb of memory at rest and can easily serialize then hibernate for long-lived access. Agents possess the APIs to dynamically start and manage their own sub-agents or any other Elixir process utilizing Elixir's OTP architecture.\r\n\r\nJido Actions are functional primitives that Agents can dynamically orchestrate into workflows. Generated code can either run in a separate process in the current VM or in another BEAM VM that's linked and hardened before introduction into the Agent VM.\r\n\r\nI'm excited to help enable a world where thousands of agents work seamlessly on behalf of their human operators.","comments_url":"https://lobste.rs/s/csfbtr/jido_run_10k_agents_at_25kb_each","submitter_user":"mikehostetler","user_is_author":true,"tags":["ai","elixir"]},{"short_id":"v95gm5","short_id_url":"https://lobste.rs/s/v95gm5","created_at":"2024-12-30T10:28:40.000-06:00","title":"My thoughts on the new NVIDIA Jetson Orin Nano","url":"https://www.jeremymorgan.com/blog/tech/nvidia-jetson-orin-nano/","score":3,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/v95gm5/my_thoughts_on_new_nvidia_jetson_orin_nano","submitter_user":"JeremyMorgan","user_is_author":true,"tags":["ai"]},{"short_id":"3ytoab","short_id_url":"https://lobste.rs/s/3ytoab","created_at":"2024-12-30T08:56:26.000-06:00","title":"Collection of insane and fun facts about SQLite","url":"https://avi.im/blag/2024/sqlite-facts","score":20,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3ytoab/collection_insane_fun_facts_about_sqlite","submitter_user":"av","user_is_author":true,"tags":["databases","historical"]},{"short_id":"pyfrdt","short_id_url":"https://lobste.rs/s/pyfrdt","created_at":"2024-12-30T08:50:28.000-06:00","title":"The Curious Case of Quentell","url":"https://blog.startifact.com/posts/the-curious-case-of-quentell/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pyfrdt/curious_case_quentell","submitter_user":"fancybone","user_is_author":false,"tags":["ai"]},{"short_id":"y62lgp","short_id_url":"https://lobste.rs/s/y62lgp","created_at":"2024-12-30T07:57:23.000-06:00","title":"Flame graphs can hide small overheads with big overall impact","url":"https://ankush.dev/p/flamegraph-missing-forest-for-trees","score":10,"flags":0,"comment_count":0,"description":"\u003cp\u003eI wanted to share this not-so-popular flag \u003ccode\u003e--reverse\u003c/code\u003e on \u003ccode\u003eflamegraph.pl\u003c/code\u003e and how it helped uncover a performance problem that was otherwise not so visible in default flame graphs.\u003c/p\u003e\n\u003cp\u003eThe post is just listing 1 major example but I did find quite a few other overheads that were on its own \u0026lt;10us but in biger picture contributed ~1%.\u003c/p\u003e\n","description_plain":"I wanted to share this not-so-popular flag `--reverse` on `flamegraph.pl` and how it helped uncover a performance problem that was otherwise not so visible in default flame graphs.\r\n\r\nThe post is just listing 1 major example but I did find quite a few other overheads that were on its own \u003c10us but in biger picture contributed ~1%.","comments_url":"https://lobste.rs/s/y62lgp/flame_graphs_can_hide_small_overheads","submitter_user":"ankush","user_is_author":true,"tags":["performance"]},{"short_id":"3ycwuq","short_id_url":"https://lobste.rs/s/3ycwuq","created_at":"2024-12-30T07:39:06.000-06:00","title":"GitHub GraphQL API and TypeScript","url":"https://medv.io/blog/github-graphql-api-and-typescript","score":2,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3ycwuq/github_graphql_api_typescript","submitter_user":"antonmedv","user_is_author":true,"tags":["javascript"]},{"short_id":"5srkwz","short_id_url":"https://lobste.rs/s/5srkwz","created_at":"2024-12-30T06:16:43.000-06:00","title":"Fabrice Bellard's ts_sms: Short Message Compression using LLM","url":"https://bellard.org/ts_sms/","score":20,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5srkwz/fabrice_bellard_s_ts_sms_short_message","submitter_user":"BiteCode","user_is_author":false,"tags":["ai"]},{"short_id":"enfhri","short_id_url":"https://lobste.rs/s/enfhri","created_at":"2024-12-30T05:25:41.000-06:00","title":"Exported for tests only: Precise control over API visibility with custom warnings","url":"https://tech.scrive.com/exported-for-tests-only-precise-control-over-api-visibility-with-custom-warnings/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/enfhri/exported_for_tests_only_precise_control","submitter_user":"Hecate","user_is_author":false,"tags":["haskell"]},{"short_id":"h4udgl","short_id_url":"https://lobste.rs/s/h4udgl","created_at":"2024-12-30T05:19:35.000-06:00","title":"Installing NetBSD on the Nintendo Wii","url":"https://youtu.be/KO9bNwE3Vps","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h4udgl/installing_netbsd_on_nintendo_wii","submitter_user":"jaypatelani","user_is_author":false,"tags":["netbsd","video"]},{"short_id":"68xmon","short_id_url":"https://lobste.rs/s/68xmon","created_at":"2024-12-30T05:12:50.000-06:00","title":"What are you doing this week?","url":"","score":4,"flags":0,"comment_count":4,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/68xmon/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"vnogpe","short_id_url":"https://lobste.rs/s/vnogpe","created_at":"2024-12-30T04:56:29.000-06:00","title":"Legacy Train Control System Stabilisation (2012)","url":"https://www.equicon.de/images/Virtualisierung/LegacyTrainControlSystemStabilization.pdf","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vnogpe/legacy_train_control_system","submitter_user":"bitfield","user_is_author":false,"tags":["hardware","pdf","retrocomputing","virtualization"]},{"short_id":"ewqoyx","short_id_url":"https://lobste.rs/s/ewqoyx","created_at":"2024-12-30T02:12:25.000-06:00","title":"Systems Ideas that Sound Good But Almost Never Work—\"Let's just…\"","url":"https://hardcoresoftware.learningbyshipping.com/p/225-systems-ideas-that-sound-good","score":6,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ewqoyx/systems_ideas_sound_good_almost_never","submitter_user":"freetonik","user_is_author":false,"tags":["programming"]},{"short_id":"sfnhhe","short_id_url":"https://lobste.rs/s/sfnhhe","created_at":"2024-12-29T20:55:58.000-06:00","title":"The web is too big, or scaling down","url":"https://scottrichmond.me/the-web-is-too-big/","score":33,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sfnhhe/web_is_too_big_scaling_down","submitter_user":"dustyweb","user_is_author":false,"tags":["web"]},{"short_id":"j4c0d0","short_id_url":"https://lobste.rs/s/j4c0d0","created_at":"2024-12-29T20:00:48.000-06:00","title":"How webcams with focus control work (Razer Kiyo Pro repair)","url":"https://www.downtowndougbrown.com/2024/12/how-webcams-with-focus-control-work-razer-kiyo-pro-repair/","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j4c0d0/how_webcams_with_focus_control_work_razer","submitter_user":"calvin","user_is_author":false,"tags":["hardware","reversing"]},{"short_id":"aeatxh","short_id_url":"https://lobste.rs/s/aeatxh","created_at":"2024-12-29T19:34:55.000-06:00","title":"I still believe in the bicycle for your mind, and this is my ride","url":"https://exple.tive.org/blarg/2024/12/29/idiosyncra/","score":38,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aeatxh/i_still_believe_bicycle_for_your_mind_this","submitter_user":"carlana","user_is_author":false,"tags":["linux"]},{"short_id":"631ful","short_id_url":"https://lobste.rs/s/631ful","created_at":"2024-12-29T17:34:29.000-06:00","title":"How to use AI to help brainstorming and exploring architecture before building","url":"https://docs.chatuml.com/blog/build-your-own-startup-with-chatuml","score":3,"flags":3,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/631ful/how_use_ai_help_brainstorming_exploring","submitter_user":"huytd","user_is_author":true,"tags":["ai","show"]},{"short_id":"5qtis7","short_id_url":"https://lobste.rs/s/5qtis7","created_at":"2024-12-29T17:08:42.000-06:00","title":"200 000","url":"https://vermaden.wordpress.com/2024/12/29/200-000/","score":0,"flags":9,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5qtis7/200_000","submitter_user":"vermaden","user_is_author":true,"tags":["freebsd","illumos","linux","unix"]},{"short_id":"xypp5u","short_id_url":"https://lobste.rs/s/xypp5u","created_at":"2024-12-29T17:03:00.000-06:00","title":"The Cody Computer homebrew 6502 system","url":"https://www.codycomputer.org/","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xypp5u/cody_computer_homebrew_6502_system","submitter_user":"classichasclass","user_is_author":false,"tags":["retrocomputing"]},{"short_id":"yas6et","short_id_url":"https://lobste.rs/s/yas6et","created_at":"2024-12-29T16:06:06.000-06:00","title":"How Multi-User Dungeons Taught Me To Code","url":"https://tashian.com/articles/how-i-learned-to-program/","score":15,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yas6et/how_multi_user_dungeons_taught_me_code","submitter_user":"calvin","user_is_author":false,"tags":["historical"]},{"short_id":"3swfc9","short_id_url":"https://lobste.rs/s/3swfc9","created_at":"2024-12-29T15:49:09.000-06:00","title":"FAQ | FixBrowser # FixProxy","url":"https://www.fixbrowser.org/faq#proxy","score":6,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3swfc9/faq_fixbrowser_fixproxy","submitter_user":"k749gtnc9l3w","user_is_author":false,"tags":["browsers","networking","web"]},{"short_id":"agzhzy","short_id_url":"https://lobste.rs/s/agzhzy","created_at":"2024-12-29T15:39:36.000-06:00","title":"blsforme: BLS compatible distro kernel management","url":"https://github.com/serpent-os/blsforme","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/agzhzy/blsforme_bls_compatible_distro_kernel","submitter_user":"tris","user_is_author":false,"tags":["linux"]},{"short_id":"moajj8","short_id_url":"https://lobste.rs/s/moajj8","created_at":"2024-12-29T15:35:39.000-06:00","title":"booster: Fast and secure initramfs generator","url":"https://github.com/anatol/booster","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/moajj8/booster_fast_secure_initramfs_generator","submitter_user":"tris","user_is_author":false,"tags":["linux"]},{"short_id":"p7teg4","short_id_url":"https://lobste.rs/s/p7teg4","created_at":"2024-12-29T14:19:30.000-06:00","title":"How I’m trying to use BlueSky without getting burned again","url":"https://chrisholdgraf.com/blog/2024/bluesky","score":21,"flags":11,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p7teg4/how_i_m_trying_use_bluesky_without_getting","submitter_user":"emschwartz","user_is_author":false,"tags":["web"]}]