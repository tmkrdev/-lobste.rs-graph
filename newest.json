[{"short_id":"pdaqro","short_id_url":"https://lobste.rs/s/pdaqro","created_at":"2023-11-30T02:24:31.000-06:00","title":"xCurl, a cut-down fork of libcurl for the Microsoft Game Development Kit","url":"https://daniel.haxx.se/blog/2023/11/30/xcurl/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pdaqro/xcurl_cut_down_fork_libcurl_for_microsoft","submitter_user":{"username":"bomp","created_at":"2023-06-24T03:24:26.000-05:00","is_admin":false,"about":"interested (although not expert) in history of computing, programming language design and theory, and NixOS","is_moderator":false,"karma":241,"avatar_url":"/avatars/bomp-100.png","invited_by_user":"zimbatm"},"user_is_author":false,"tags":["cryptography","law"]},{"short_id":"wgrcj3","short_id_url":"https://lobste.rs/s/wgrcj3","created_at":"2023-11-30T00:47:48.000-06:00","title":"The Myth of Smart Pointers","url":"https://www.logikalsolutions.com/wordpress/information-technology/smart-pointers/","score":5,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wgrcj3/myth_smart_pointers","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":24373,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"user_is_author":false,"tags":["c++"]},{"short_id":"4xxkbs","short_id_url":"https://lobste.rs/s/4xxkbs","created_at":"2023-11-30T00:14:04.000-06:00","title":"Linear Matching of JavaScript Regular Expressions","url":"https://arxiv.org/abs/2311.17620","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4xxkbs/linear_matching_javascript_regular","submitter_user":{"username":"asb","created_at":"2014-04-01T04:39:53.000-05:00","is_admin":false,"about":"Compiler engineer at Igalia (https://igalia.com). Previously co-founded lowRISC CIC (https://www.lowrisc.org) and served as its CTO for many years.\r\n\r\nWrites LLVM Weekly (https://llvmweekly.org).","is_moderator":false,"karma":406,"avatar_url":"/avatars/asb-100.png","invited_by_user":"kev009","github_username":"asb"},"user_is_author":false,"tags":["compsci","javascript"]},{"short_id":"p6oek6","short_id_url":"https://lobste.rs/s/p6oek6","created_at":"2023-11-29T22:31:22.000-06:00","title":"GDlog: A GPU-Accelerated Deductive Engine","url":"https://arxiv.org/pdf/2311.02206.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eModern deductive database engines (e.g., LogicBlox and Souffl√©) enable their users to write declarative queries which compute recursive deductions over extensional data, leaving their high-performance operationalization (query planning, semi-na√Øve evaluation, and parallelization) to the engine. Such engines form the backbone of modern high-throughput applications in static analysis, security auditing, social-media mining, and business analytics. State-of-the-art engines are built upon nested loop joins over explicit representations (e.g., BTrees and tries) and ubiquitously employ range indexing to accelerate iterated joins. In this work, we present GDlog: a GPU-based deductive analytics engine (implemented as a CUDA library) which achieves significant performance improvements (5‚Äì10x or more) versus prior systems. GDlog is powered by a novel range-indexed SIMD datastructure: the hash-indexed sorted array (HISA). We perform extensive evaluation on GDlog, comparing it against both CPU and GPU-based hash tables and Datalog engines, and using it to support a range of large-scale deductive queries including reachability, same generation, and context-sensitive program analysis. Our experiments show that GDlog achieves performance competitive with modern SIMD hash tables and beats prior work by an order of magnitude in runtime while offering more favorable memory footprint.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2311.02206\" rel=\"ugc\"\u003earXiv\u003c/a\u003e, \u003ca href=\"https://github.com/harp-lab/gdlog\" rel=\"ugc\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Modern deductive database engines (e.g., LogicBlox and Souffl√©) enable their users to write declarative queries which compute recursive deductions over extensional data, leaving their high-performance operationalization (query planning, semi-na√Øve evaluation, and parallelization) to the engine. Such engines form the backbone of modern high-throughput applications in static analysis, security auditing, social-media mining, and business analytics. State-of-the-art engines are built upon nested loop joins over explicit representations (e.g., BTrees and tries) and ubiquitously employ range indexing to accelerate iterated joins. In this work, we present GDlog: a GPU-based deductive analytics engine (implemented as a CUDA library) which achieves significant performance improvements (5--10x or more) versus prior systems. GDlog is powered by a novel range-indexed SIMD datastructure: the hash-indexed sorted array (HISA). We perform extensive evaluation on GDlog, comparing it against both CPU and GPU-based hash tables and Datalog engines, and using it to support a range of large-scale deductive queries including reachability, same generation, and context-sensitive program analysis. Our experiments show that GDlog achieves performance competitive with modern SIMD hash tables and beats prior work by an order of magnitude in runtime while offering more favorable memory footprint.\r\n\r\n[arXiv](https://arxiv.org/abs/2311.02206), [Source](https://github.com/harp-lab/gdlog)","comments_url":"https://lobste.rs/s/p6oek6/gdlog_gpu_accelerated_deductive_engine","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":100597,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"user_is_author":false,"tags":["compsci","pdf"]},{"short_id":"q26ap9","short_id_url":"https://lobste.rs/s/q26ap9","created_at":"2023-11-29T20:55:06.000-06:00","title":"NixOS/nixpkgs 23.11","url":"https://github.com/NixOS/nixpkgs/tree/23.11","score":21,"flags":0,"comment_count":6,"description":"\u003cp\u003eAlternative URLs:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://nixos.org/manual/nixos/stable/release-notes#sec-release-23.11\" rel=\"ugc\"\u003eRelease notes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://nixos.org/blog/announcements.html#nixos-23.11\" rel=\"ugc\"\u003eAnnouncement\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NixOS/nixpkgs/releases/tag/23.11\" rel=\"ugc\"\u003eTag description\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NixOS/nixpkgs/issues/258640\" rel=\"ugc\"\u003eRelease schedule\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"Alternative URLs:\r\n\r\n- [Release notes](https://nixos.org/manual/nixos/stable/release-notes#sec-release-23.11)\r\n- [Announcement](https://nixos.org/blog/announcements.html#nixos-23.11)\r\n- [Tag description](https://github.com/NixOS/nixpkgs/releases/tag/23.11)\r\n- [Release schedule](https://github.com/NixOS/nixpkgs/issues/258640)","comments_url":"https://lobste.rs/s/q26ap9/nixos_nixpkgs_23_11","submitter_user":{"username":"l0b0","created_at":"2022-02-14T02:54:31.000-06:00","is_admin":false,"about":"Open source developer.","is_moderator":false,"karma":1526,"avatar_url":"/avatars/l0b0-100.png","invited_by_user":"gerikson","github_username":"l0b0"},"user_is_author":false,"tags":["nix","release"]},{"short_id":"piyykx","short_id_url":"https://lobste.rs/s/piyykx","created_at":"2023-11-29T20:51:25.000-06:00","title":"Browsing the Eastern Side of the Personal Web","url":"https://www.bikobatanari.art/posts/2023/east-west-website-culture","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/piyykx/browsing_eastern_side_personal_web","submitter_user":{"username":"classichasclass","created_at":"2018-11-05T18:45:47.000-06:00","is_admin":false,"about":"no you're off topic","is_moderator":false,"karma":3527,"avatar_url":"/avatars/classichasclass-100.png","invited_by_user":"sevan"},"user_is_author":false,"tags":["web"]},{"short_id":"3nqxpa","short_id_url":"https://lobste.rs/s/3nqxpa","created_at":"2023-11-29T20:06:56.000-06:00","title":"Nonblocking cycle detection and iterator invalidation","url":"https://outerproduct.net/trivial/2023-11-29_nonblocking-cycles.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3nqxpa/nonblocking_cycle_detection_iterator","submitter_user":{"username":"Moonchild","created_at":"2018-04-01T12:28:59.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":3242,"avatar_url":"/avatars/Moonchild-100.png","invited_by_user":"pushcx"},"user_is_author":true,"tags":["api"]},{"short_id":"fooexk","short_id_url":"https://lobste.rs/s/fooexk","created_at":"2023-11-29T18:08:06.000-06:00","title":"On the same platform directly opposite?","url":"https://stuebinm.eu/posts/am-selben-bahnsteig-gegen%C3%BCber.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fooexk/on_same_platform_directly_opposite","submitter_user":{"username":"LeahNeukirchen","created_at":"2012-11-15T17:05:29.000-06:00","is_admin":false,"about":"https://leahneukirchen.org\r\nhttps://blahaj.social/@leah","is_moderator":false,"karma":1548,"avatar_url":"/avatars/LeahNeukirchen-100.png","invited_by_user":"MSch"},"user_is_author":false,"tags":["databases"]},{"short_id":"eoltwv","short_id_url":"https://lobste.rs/s/eoltwv","created_at":"2023-11-29T18:00:11.000-06:00","title":"Scalable Extraction of Training Data from (Production) Language Models","url":"https://arxiv.org/abs/2311.17035","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eoltwv/scalable_extraction_training_data_from","submitter_user":{"username":"fcbsd","created_at":"2014-01-15T14:55:15.000-06:00","is_admin":false,"about":"**Fred Crowson**\r\n\r\n*BSD user, sys admin, BMX \u0026 MTB Coach*\r\n\r\nRunning on an [OpenBSD](https://www.openbsd.org/) Desktop since 2001 :~)\r\n","is_moderator":false,"karma":5148,"avatar_url":"/avatars/fcbsd-100.png","invited_by_user":"jm"},"user_is_author":false,"tags":["ai"]},{"short_id":"fywoys","short_id_url":"https://lobste.rs/s/fywoys","created_at":"2023-11-29T17:28:17.000-06:00","title":"Introducing llamafile","url":"https://hacks.mozilla.org/2023/11/introducing-llamafile/","score":9,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fywoys/introducing_llamafile","submitter_user":{"username":"stevejalim","created_at":"2013-03-29T15:43:16.000-05:00","is_admin":false,"about":"Backend-leaning full-stack developer @ Mozilla, sorter-outer, starter-upper, trail runner, parent. ","is_moderator":false,"karma":408,"avatar_url":"/avatars/stevejalim-100.png","invited_by_user":"hugorodgerbrown","github_username":"stevejalim","keybase_signatures":[{"kb_username":"stevejalim","sig_hash":"194747212e198be6a7f4b9798109039322702ea1e2a39c5c20321d29534a79b60f"}]},"user_is_author":false,"tags":["ai"]},{"short_id":"bqxzru","short_id_url":"https://lobste.rs/s/bqxzru","created_at":"2023-11-29T17:21:09.000-06:00","title":"Building your own bookmark launcher","url":"https://xenodium.com/building-your-own-bookmark-launcher","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bqxzru/building_your_own_bookmark_launcher","submitter_user":{"username":"xenodium","created_at":"2021-05-30T13:15:40.000-05:00","is_admin":false,"about":"I live in Emacs somewhere in London.","is_moderator":false,"karma":686,"avatar_url":"/avatars/xenodium-100.png","invited_by_user":"GeoffWozniak"},"user_is_author":true,"tags":["browsers","emacs","mac"]},{"short_id":"al2gox","short_id_url":"https://lobste.rs/s/al2gox","created_at":"2023-11-29T15:57:12.000-06:00","title":"Infinite Mac","url":"https://infinitemac.org/","score":22,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/al2gox/infinite_mac","submitter_user":{"username":"fcbsd","created_at":"2014-01-15T14:55:15.000-06:00","is_admin":false,"about":"**Fred Crowson**\r\n\r\n*BSD user, sys admin, BMX \u0026 MTB Coach*\r\n\r\nRunning on an [OpenBSD](https://www.openbsd.org/) Desktop since 2001 :~)\r\n","is_moderator":false,"karma":5148,"avatar_url":"/avatars/fcbsd-100.png","invited_by_user":"jm"},"user_is_author":false,"tags":["mac","virtualization"]},{"short_id":"xcgvgk","short_id_url":"https://lobste.rs/s/xcgvgk","created_at":"2023-11-29T15:35:04.000-06:00","title":"Compiler Error Messages Considered Unhelpful: Text-Based Programming Error Message Research (2019)","url":"https://www.brettbecker.com/wp-content/uploads/2019/12/becker2019compiler.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eAbstract:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDiagnostic messages generated by compilers and interpreters such as syntax error messages have been researched for over half of a century. Unfortunately, these messages which include error, warning, and run-time messages, present substantial difficulty and could be more effective, particularly for novices. Recent years have seen an increased number of papers in the area including studies on the effectiveness of these messages, improving or enhancing them, and their usefulness as a part of programming process data that can be used to predict student performance, track student progress, and tailor learning plans. Despite this increased interest, the long history of literature is quite scattered and has not been brought together in any digestible form.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn order to help the computing education community (and related communities) to further advance work on programming error messages, we present a comprehensive, historical and state-of-the-art report on research in the area. In addition, we synthesise and present the existing evidence for these messages including the difficulties they present and their effectiveness. We finally present a set of guidelines, curated from the literature, classified on the type of evidence supporting each one (historical, anecdotal, and empirical). This work can serve as a starting point for those who wish to conduct research on compiler error messages, runtime errors, and warnings. We also make the bibtex file of our 300+ reference corpus publicly available. Collectively this report and the bibliography will be useful to those who wish to design better messages or those that aim to measure their effectiveness, more effectively.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"Abstract:\r\n\r\n\u003e Diagnostic messages generated by compilers and interpreters such as syntax error messages have been researched for over half of a century. Unfortunately, these messages which include error, warning, and run-time messages, present substantial difficulty and could be more effective, particularly for novices. Recent years have seen an increased number of papers in the area including studies on the effectiveness of these messages, improving or enhancing them, and their usefulness as a part of programming process data that can be used to predict student performance, track student progress, and tailor learning plans. Despite this increased interest, the long history of literature is quite scattered and has not been brought together in any digestible form.\r\n\r\n\u003e In order to help the computing education community (and related communities) to further advance work on programming error messages, we present a comprehensive, historical and state-of-the-art report on research in the area. In addition, we synthesise and present the existing evidence for these messages including the difficulties they present and their effectiveness. We finally present a set of guidelines, curated from the literature, classified on the type of evidence supporting each one (historical, anecdotal, and empirical). This work can serve as a starting point for those who wish to conduct research on compiler error messages, runtime errors, and warnings. We also make the bibtex file of our 300+ reference corpus publicly available. Collectively this report and the bibliography will be useful to those who wish to design better messages or those that aim to measure their effectiveness, more effectively.","comments_url":"https://lobste.rs/s/xcgvgk/compiler_error_messages_considered","submitter_user":{"username":"mjn","created_at":"2015-02-11T16:45:32.000-06:00","is_admin":false,"about":"I'm an academic in artificial intelligence. My research has mostly been on AI \u0026 games, both games as a testbed for AI and AI for game design. I'm also interested in other kinds of human/machine co-creation, computationally modeling design spaces, and history of technology. Currently an academic in Washington, D.C. (previously: Cornwall, Copenhagen, Santa Cruz, Atlanta, ...).\r\n\r\nWebsite: [kmjn.org](http://www.kmjn.org/)","is_moderator":false,"karma":6862,"avatar_url":"/avatars/mjn-100.png","invited_by_user":"itistoday","twitter_username":"mm_jj_nn"},"user_is_author":false,"tags":["compilers","debugging","pdf"]},{"short_id":"8cdhtt","short_id_url":"https://lobste.rs/s/8cdhtt","created_at":"2023-11-29T14:35:41.000-06:00","title":"errtrace: An alternative to stack traces for your Go errors","url":"https://github.com/bracesdev/errtrace","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8cdhtt/errtrace_alternative_stack_traces_for","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":8335,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"user_is_author":false,"tags":["go"]},{"short_id":"m5notg","short_id_url":"https://lobste.rs/s/m5notg","created_at":"2023-11-29T14:33:54.000-06:00","title":"Turbo 8 in 8 minutes","url":"https://fly.io/ruby-dispatch/turbo-8-in-8-minutes/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/m5notg/turbo_8_8_minutes","submitter_user":{"username":"soulcutter","created_at":"2014-02-18T10:29:29.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":3599,"avatar_url":"/avatars/soulcutter-100.png","invited_by_user":"gabriel"},"user_is_author":false,"tags":["ruby"]},{"short_id":"orgjzy","short_id_url":"https://lobste.rs/s/orgjzy","created_at":"2023-11-29T14:16:38.000-06:00","title":"10 Weird HTML Hacks That Shaped The Internet","url":"https://tedium.co/2023/11/24/weird-html-hacks-history/","score":12,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/orgjzy/10_weird_html_hacks_shaped_internet","submitter_user":{"username":"carlana","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carlana Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":15298,"avatar_url":"/avatars/carlana-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson"},"user_is_author":false,"tags":["css","historical","web"]},{"short_id":"xqzl1v","short_id_url":"https://lobste.rs/s/xqzl1v","created_at":"2023-11-29T12:14:51.000-06:00","title":"KON \u0026 BAL's Puzzle Page: QuickTime Quandary [1996?]","url":"http://preserve.mactech.com/articles/develop/issue_27/puzzle.html","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xqzl1v/kon_bal_s_puzzle_page_quicktime_quandary","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":10088,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"user_is_author":false,"tags":["debugging","mac"]},{"short_id":"gmzkjj","short_id_url":"https://lobste.rs/s/gmzkjj","created_at":"2023-11-29T11:39:15.000-06:00","title":"A Deep Dive Into Sending With librdkafka","url":"https://www.confluent.io/blog/how-to-send-messages-with-librdkafka/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gmzkjj/deep_dive_into_sending_with_librdkafka","submitter_user":{"username":"rmoff","created_at":"2018-09-19T03:24:42.000-05:00","is_admin":false,"about":"https://rmoff.info","is_moderator":false,"karma":23,"avatar_url":"/avatars/rmoff-100.png","invited_by_user":"vrthra","github_username":"rmoff"},"user_is_author":false,"tags":["distributed"]},{"short_id":"yqj3ae","short_id_url":"https://lobste.rs/s/yqj3ae","created_at":"2023-11-29T10:23:14.000-06:00","title":"My $500M Mars Rover Mistake: A Failure Story","url":"https://www.chrislewicki.com/articles/failurestory","score":34,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yqj3ae/my_500m_mars_rover_mistake_failure_story","submitter_user":{"username":"pmdj","created_at":"2014-04-16T23:10:07.000-05:00","is_admin":false,"about":"Phil Dennis-Jordan (aka Phil Jordan/pmjordan)\r\n\r\nFull stack programmer: from OS kernel to web/UI. Available for contract work, mainly macOS systems/kernel/device driver programming, virtualisation, realtime graphics and GPGPU, network protocols, reverse engineering, etc. \r\n\r\nhttp://philjordan.eu/\r\n\r\nFediverse: @pmdj@mstdn.social\r\n\r\nhttp://twitter.com/pmjordan (legacy)","is_moderator":false,"karma":383,"avatar_url":"/avatars/pmdj-100.png","invited_by_user":"silentbicycle","github_username":"pmj","twitter_username":"pmjordan"},"user_is_author":false,"tags":["historical","practices","science"]},{"short_id":"sppsfx","short_id_url":"https://lobste.rs/s/sppsfx","created_at":"2023-11-29T10:15:01.000-06:00","title":"A Touch of Pwn - Part I","url":"https://blackwinghq.com/blog/posts/a-touch-of-pwn-part-i/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sppsfx/touch_pwn_part_i","submitter_user":{"username":"unlobito","created_at":"2021-01-21T09:28:26.000-06:00","is_admin":false,"about":"(it/she)\r\n\r\nthrough psychological safety, we can build high performing teams that trust in each other and believe in the value of their work","is_moderator":false,"karma":136,"avatar_url":"/avatars/unlobito-100.png","invited_by_user":"soatok","github_username":"unlobito","keybase_signatures":[{"kb_username":"unlobito","sig_hash":"f78c5437427c1e04d3d8e1dd92459e29efe233412e659630bb8e24caf3f1981d0f"}]},"user_is_author":false,"tags":["security","windows"]},{"short_id":"ntn2yq","short_id_url":"https://lobste.rs/s/ntn2yq","created_at":"2023-11-29T09:35:50.000-06:00","title":"jaq: A jq clone focussed on correctness, speed, and simplicity","url":"https://github.com/01mf02/jaq","score":28,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ntn2yq/jaq_jq_clone_focussed_on_correctness","submitter_user":{"username":"andyc","created_at":"2016-11-29T12:37:37.000-06:00","is_admin":false,"about":"Working on http://www.oilshell.org/\r\n","is_moderator":false,"karma":10319,"avatar_url":"/avatars/andyc-100.png","invited_by_user":"flyingfisch"},"user_is_author":false,"tags":["unix"]},{"short_id":"xawt3e","short_id_url":"https://lobste.rs/s/xawt3e","created_at":"2023-11-29T09:14:44.000-06:00","title":"Reexamining FizzBuzz Step by Step ‚Äì and allowing for more varied rules","url":"https://pragtob.wordpress.com/2023/11/28/reexamining-fizzbuzz-step-by-step-and-allowing-for-more-varied-rules/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xawt3e/reexamining_fizzbuzz_step_by_step","submitter_user":{"username":"PragTob","created_at":"2014-10-25T16:27:06.000-05:00","is_admin":false,"about":"software development + open source + web + agile + learning + teaching + pragmatism + clean code + ruby + community + philosophy + music = passion\r\n\r\nYou can find me at http://www.pragtob.info/","is_moderator":false,"karma":200,"avatar_url":"/avatars/PragTob-100.png","invited_by_user":"skade","github_username":"PragTob","twitter_username":"PragTob"},"user_is_author":true,"tags":["programming","ruby"]},{"short_id":"bx9ss7","short_id_url":"https://lobste.rs/s/bx9ss7","created_at":"2023-11-29T08:21:31.000-06:00","title":"The diminishing half-life of knowledge","url":"https://rednafi.com/misc/diminishing_half_life_of_knowledge/","score":10,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bx9ss7/diminishing_half_life_knowledge","submitter_user":{"username":"rednafi","created_at":"2023-08-07T16:57:40.000-05:00","is_admin":false,"about":"https://rednafi.com/about","is_moderator":false,"karma":73,"avatar_url":"/avatars/rednafi-100.png","invited_by_user":"polyrand","github_username":"rednafi"},"user_is_author":true,"tags":["programming"]},{"short_id":"i23rvs","short_id_url":"https://lobste.rs/s/i23rvs","created_at":"2023-11-29T07:50:51.000-06:00","title":"Edge Case Poisoning (2020)","url":"https://buttondown.email/hillelwayne/archive/edge-case-poisoning/","score":19,"flags":1,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/i23rvs/edge_case_poisoning_2020","submitter_user":{"username":"Jrmurr","created_at":"2023-04-05T00:28:18.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":58,"avatar_url":"/avatars/Jrmurr-100.png","invited_by_user":"bsandro","github_username":"JRMurr","twitter_username":"JRMurrCodes"},"user_is_author":false,"tags":["api","design"]},{"short_id":"hjxd80","short_id_url":"https://lobste.rs/s/hjxd80","created_at":"2023-11-29T06:48:48.000-06:00","title":"Rust std fs slower than Python!? No, it's hardware","url":"https://xuanwo.io/2023/04-rust-std-fs-slower-than-python/","score":105,"flags":0,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hjxd80/rust_std_fs_slower_than_python_no_it_s","submitter_user":{"username":"pims","created_at":"2014-06-18T21:28:29.000-05:00","is_admin":false,"about":"Curious mind. https://blog.pims.me/","is_moderator":false,"karma":945,"avatar_url":"/avatars/pims-100.png","invited_by_user":"lau"},"user_is_author":false,"tags":["hardware","python","rust"]}]