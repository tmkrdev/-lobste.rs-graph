[{"short_id":"eqprlz","short_id_url":"https://lobste.rs/s/eqprlz","created_at":"2023-03-08T01:55:03.000-06:00","title":"Dynamic host configuration, please","url":"https://sha256.net/dynamic_host_configuration_please.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eqprlz/dynamic_host_configuration_please","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95787,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["networking","openbsd"]},{"short_id":"skrkxp","short_id_url":"https://lobste.rs/s/skrkxp","created_at":"2023-03-08T01:30:59.000-06:00","title":"Irregular expressions - tavianator.com","url":"https://tavianator.com/2023/irregex.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/skrkxp/irregular_expressions_tavianator_com","submitter_user":{"username":"tumdum","created_at":"2017-07-22T16:33:49.000-05:00","is_admin":false,"about":"A mystery...","is_moderator":false,"karma":1436,"avatar_url":"/avatars/tumdum-100.png","invited_by_user":"friendlysock","github_username":"tumdum"},"tags":["rust"]},{"short_id":"sgt4fc","short_id_url":"https://lobste.rs/s/sgt4fc","created_at":"2023-03-07T23:05:21.000-06:00","title":"Sumplete","url":"https://sumplete.com/about/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sgt4fc/sumplete","submitter_user":{"username":"df","created_at":"2019-12-17T11:43:16.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":1377,"avatar_url":"/avatars/df-100.png","invited_by_user":"roshanravan"},"tags":["ai"]},{"short_id":"jvs2ze","short_id_url":"https://lobste.rs/s/jvs2ze","created_at":"2023-03-07T20:53:41.000-06:00","title":"ANSI colours aren't consistent across X terminal programs","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/TerminalColoursNotTheSame","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jvs2ze/ansi_colours_aren_t_consistent_across_x","submitter_user":{"username":"Vaelatern","created_at":"2017-11-21T12:33:02.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":2943,"avatar_url":"/avatars/Vaelatern-100.png","invited_by_user":"duncaen"},"tags":["a11y"]},{"short_id":"zmnv0b","short_id_url":"https://lobste.rs/s/zmnv0b","created_at":"2023-03-07T17:37:47.000-06:00","title":"Why Cloud Security is a Coasian Hell","url":"https://ioc.exchange/@invisv/109984592344963986","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zmnv0b/why_cloud_security_is_coasian_hell","submitter_user":{"username":"barathr","created_at":"2022-08-11T12:50:36.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":143,"avatar_url":"/avatars/barathr-100.png","invited_by_user":"maxb"},"tags":["privacy","security"]},{"short_id":"mdgbzd","short_id_url":"https://lobste.rs/s/mdgbzd","created_at":"2023-03-07T17:28:09.000-06:00","title":"How we deploy faster with warm Docker containers and Pex files","url":"https://dagster.io/blog/fast-deploys-with-pex-and-docker","score":3,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mdgbzd/how_we_deploy_faster_with_warm_docker","submitter_user":{"username":"shalabh","created_at":"2018-11-14T19:08:00.000-06:00","is_admin":false,"about":"[shalabh.com/programmable-systems](https://shalabh.com/programmable-systems)","is_moderator":false,"karma":140,"avatar_url":"/avatars/shalabh-100.png","invited_by_user":"kivikakk"},"tags":["devops","distributed","python"]},{"short_id":"0cpsdb","short_id_url":"https://lobste.rs/s/0cpsdb","created_at":"2023-03-07T16:05:29.000-06:00","title":"Full screen triangle optimization","url":"https://30fps.net/pages/twotris/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0cpsdb/full_screen_triangle_optimization","submitter_user":{"username":"pekkavaa","created_at":"2018-06-26T00:46:17.000-05:00","is_admin":false,"about":"Graphics coder","is_moderator":false,"karma":583,"avatar_url":"/avatars/pekkavaa-100.png","invited_by_user":"mikejsavage"},"tags":["graphics"]},{"short_id":"sdttgb","short_id_url":"https://lobste.rs/s/sdttgb","created_at":"2023-03-07T14:50:40.000-06:00","title":"How Discord Stores Trillions of Messages","url":"https://discord.com/blog/how-discord-stores-trillions-of-messages","score":36,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sdttgb/how_discord_stores_trillions_messages","submitter_user":{"username":"j11g","created_at":"2017-07-17T09:39:28.000-05:00","is_admin":false,"about":"I am Jan van den Berg (numeronym: j11g). \r\n\r\nI blog here https://j11g.com (English) \r\n\r\nand here https://janvandenberg.blog (Dutch)","is_moderator":false,"karma":5186,"avatar_url":"/avatars/j11g-100.png","invited_by_user":"mischa","twitter_username":"loginn"},"tags":["databases","performance"]},{"short_id":"xrchxs","short_id_url":"https://lobste.rs/s/xrchxs","created_at":"2023-03-07T14:28:48.000-06:00","title":"Signal is for everyone, and everyone is different","url":"https://signal.org/blog/signal-is-for-everyone/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xrchxs/signal_is_for_everyone_everyone_is","submitter_user":{"username":"pgr0ss","created_at":"2012-09-06T17:06:14.000-05:00","is_admin":false,"about":"http://www.pgrs.net","is_moderator":false,"karma":270,"avatar_url":"/avatars/pgr0ss-100.png","invited_by_user":"kGb8RNFtg6"},"tags":["culture"]},{"short_id":"5jzng0","short_id_url":"https://lobste.rs/s/5jzng0","created_at":"2023-03-07T14:24:40.000-06:00","title":"When Zig is safer and faster than Rust","url":"https://zackoverflow.dev/writing/unsafe-rust-vs-zig/","score":31,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5jzng0/when_zig_is_safer_faster_than_rust","submitter_user":{"username":"technetium","created_at":"2020-02-06T19:52:39.000-06:00","is_admin":false,"about":"A sentient lump of a certain high-density material.\r\n\r\nI'm working on a traditional roguelike: [GitHub](https://github.com/kiedtl/roguelike)","is_moderator":false,"karma":5082,"avatar_url":"/avatars/technetium-100.png","invited_by_user":"ngoldbaum","github_username":"kiedtl"},"tags":["rust","zig"]},{"short_id":"69qu6p","short_id_url":"https://lobste.rs/s/69qu6p","created_at":"2023-03-07T14:22:05.000-06:00","title":"Your Client Side State is a Lie","url":"https://marcellerusu.com/your_client_side_state_is_a_lie.html","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/69qu6p/your_client_side_state_is_lie","submitter_user":{"username":"marcellerusu","created_at":"2018-12-14T13:32:39.000-06:00","is_admin":false,"about":"UIs \u0026 programming languages\r\n\r\nthey/them","is_moderator":false,"karma":321,"avatar_url":"/avatars/marcellerusu-100.png","invited_by_user":"yfjd01","github_username":"marcellerusu"},"tags":["javascript","web"]},{"short_id":"youqj3","short_id_url":"https://lobste.rs/s/youqj3","created_at":"2023-03-07T14:06:55.000-06:00","title":"Neural Networks, Manifolds, and Topology","url":"https://colah.github.io/posts/2014-03-NN-Manifolds-Topology/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/youqj3/neural_networks_manifolds_topology","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5219,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["ai"]},{"short_id":"nbdkuf","short_id_url":"https://lobste.rs/s/nbdkuf","created_at":"2023-03-07T13:26:54.000-06:00","title":"If you have a public dotfiles repo, do you hide some of your configs? How?","url":"","score":3,"flags":0,"comment_count":10,"description":"\u003cp\u003eMy dotfiles are publicly accessible at \u003ca href=\"https://github.com/stig/dotfiles\" rel=\"ugc\"\u003ehttps://github.com/stig/dotfiles\u003c/a\u003e, and for the most part I’m happy with that. These days my config is managed with Nix’s home-manager.\u003c/p\u003e\n\u003cp\u003eI’ve been using my current email address for about 20 years, and over the years have used it with lots of public mailing lists. Now I get \u003cem\u003eso much\u003c/em\u003e spam, and am in the process of changing my primary mail address \u0026amp; email hosting to address this.\u003c/p\u003e\n\u003cp\u003eSo the first question is: does it make sense to \u003cem\u003enot\u003c/em\u003e put the new address in a publicly available GitHub repository? Or is that unlikely to be a place spammers harvest email addresses from?\u003c/p\u003e\n\u003cp\u003eAssuming the answer to the first question is “yes”, the next question is \u003cem\u003ehow\u003c/em\u003e do you hide some of the config (e.g. anything under home-manager’s \u003ccode\u003eaccounts.email\u003c/code\u003e) with Nix?\u003c/p\u003e\n","description_plain":"My dotfiles are publicly accessible at https://github.com/stig/dotfiles, and for the most part I'm happy with that. These days my config is managed with Nix's home-manager.\r\n\r\nI've been using my current email address for about 20 years, and over the years have used it with lots of public mailing lists. Now I get _so much_ spam, and am in the process of changing my primary mail address \u0026 email hosting to address this. \r\n\r\nSo the first question is: does it make sense to *not* put the new address in a publicly available GitHub repository? Or is that unlikely to be a place spammers harvest email addresses from?\r\n\r\nAssuming the answer to the first question is \"yes\", the next question is _how_ do you hide some of the config (e.g. anything under home-manager's `accounts.email`) with Nix?","comments_url":"https://lobste.rs/s/nbdkuf/if_you_have_public_dotfiles_repo_do_you","submitter_user":{"username":"stig","created_at":"2014-01-16T11:53:22.000-06:00","is_admin":false,"about":"Multilingual software developer. Author of SBJson. Husband. Dad. Feminist. Guitarist. Remote work enthusiast. ","is_moderator":false,"karma":2537,"avatar_url":"/avatars/stig-100.png","invited_by_user":"kellogh","github_username":"stig"},"tags":["ask","nix"]},{"short_id":"8c7dx6","short_id_url":"https://lobste.rs/s/8c7dx6","created_at":"2023-03-07T12:14:25.000-06:00","title":"RustPython: A Python (CPython \u003e= 3.11.0) interpreter written in Rust","url":"https://github.com/RustPython/RustPython","score":13,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8c7dx6/rustpython_python_cpython_3_11_0","submitter_user":{"username":"usrme","created_at":"2021-10-05T04:34:58.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":406,"avatar_url":"/avatars/usrme-100.png","invited_by_user":"gerikson"},"tags":["python"]},{"short_id":"aysgrx","short_id_url":"https://lobste.rs/s/aysgrx","created_at":"2023-03-07T11:46:30.000-06:00","title":"Investing in RSS","url":"https://timkadlec.com/remembers/2023-02-23-investing-in-rss/","score":11,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aysgrx/investing_rss","submitter_user":{"username":"eBPF","created_at":"2023-01-25T09:58:16.000-06:00","is_admin":false,"about":"[ersei.net](https://ersei.net)","is_moderator":false,"karma":175,"avatar_url":"/avatars/eBPF-100.png","invited_by_user":"oats"},"tags":["web"]},{"short_id":"9q6rnm","short_id_url":"https://lobste.rs/s/9q6rnm","created_at":"2023-03-07T11:23:45.000-06:00","title":"Fast byte searching with SIMD without a ton of boilerplate?","url":"","score":7,"flags":0,"comment_count":6,"description":"\u003cp\u003eTL;DR: I’m looking for a SIMD abstraction layer that will let me do some high-speed byte searching without having to worry about a dozen different instruction sets. Not having luck finding such.\u003c/p\u003e\n\u003cp\u003eI’m optimizing some JSON-parsing code, and by far the biggest bottleneck is string searching, specifically searching for the next occurrence of one of \u003cem\u003etwo or more\u003c/em\u003e characters. For example, when scanning a string I search for both double-quote and backslash. (Plus 00 if the JSON has not been validated.)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eC has a function to do this, strcspn, but it’s slow.\u003c/li\u003e\n\u003cli\u003eA naive loop testing every char with several == comparisons is faster.\u003c/li\u003e\n\u003cli\u003eindexing each byte in a 256-item lookup table is still faster.\u003c/li\u003e\n\u003cli\u003eUnrolling the loop to look at 4 bytes in sequence is even faster (stole this from sa-json.)\u003c/li\u003e\n\u003cli\u003e“Homemade SIMD” by reading a uint32 or uint64 and doing bitwise tricks to detect any of those bytes is significantly slower, sadly.\u003c/li\u003e\n\u003cli\u003e[Goldilocks solution goes here]\u003c/li\u003e\n\u003cli\u003eThe SIMDJSON library is super fast but has a whole bunch of complex code — it has to implement the core loops six or seven times for specific instruction sets, and then figure out at runtime which of those to call. I would rather avoid dragging all that in.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYesterday I was experimenting with Apple’s “simd” library, which is based on Clang vector extensions, and it does pretty well, but I am not sure if this is portable to non-Apple systems or non-Clang compilers. (GCC has its own extensions, which Clang partially supports, but when I tried those Clang generated slow non-SIMD code.)\u003c/p\u003e\n","description_plain":"TL;DR: I’m looking for a SIMD abstraction layer that will let me do some high-speed byte searching without having to worry about a dozen different instruction sets. Not having luck finding such.\r\n\r\nI’m optimizing some JSON-parsing code, and by far the biggest bottleneck is string searching, specifically searching for the next occurrence of one of _two or more_ characters. For example, when scanning a string I search for both double-quote and backslash. (Plus 00 if the JSON has not been validated.)\r\n\r\n- C has a function to do this, strcspn, but it’s slow.\r\n- A naive loop testing every char with several == comparisons is faster.\r\n- indexing each byte in a 256-item lookup table is still faster.\r\n- Unrolling the loop to look at 4 bytes in sequence is even faster (stole this from sa-json.)\r\n- “Homemade SIMD” by reading a uint32 or uint64 and doing bitwise tricks to detect any of those bytes is significantly slower, sadly.\r\n- [Goldilocks solution goes here]\r\n- The SIMDJSON library is super fast but has a whole bunch of complex code — it has to implement the core loops six or seven times for specific instruction sets, and then figure out at runtime which of those to call. I would rather avoid dragging all that in.\r\n\r\nYesterday I was experimenting with Apple's “simd” library, which is based on Clang vector extensions, and it does pretty well, but I am not sure if this is portable to non-Apple systems or non-Clang compilers. (GCC has its own extensions, which Clang partially supports, but when I tried those Clang generated slow non-SIMD code.)","comments_url":"https://lobste.rs/s/9q6rnm/fast_byte_searching_with_simd_without_ton","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":7911,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"tags":["ask","c++","performance"]},{"short_id":"pk0ztk","short_id_url":"https://lobste.rs/s/pk0ztk","created_at":"2023-03-07T09:38:37.000-06:00","title":"Zellij terminal multiplexer Stacked Panes and Swap Layouts","url":"https://zellij.dev/news/stacked-panes-swap-layouts/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pk0ztk/zellij_terminal_multiplexer_stacked","submitter_user":{"username":"UkiahSmith","created_at":"2014-03-23T06:16:41.000-05:00","is_admin":false,"about":"Software engineer using Go and other tools. https://ukiahsmith.com","is_moderator":false,"karma":1329,"avatar_url":"/avatars/UkiahSmith-100.png","invited_by_user":"kev009"},"tags":["unix","vim"]},{"short_id":"b5rmwh","short_id_url":"https://lobste.rs/s/b5rmwh","created_at":"2023-03-07T08:23:13.000-06:00","title":"Some possible reasons for 8-bit bytes","url":"https://jvns.ca/blog/2023/03/06/possible-reasons-8-bit-bytes/","score":40,"flags":0,"comment_count":27,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/b5rmwh/some_possible_reasons_for_8_bit_bytes","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95787,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["historical"]},{"short_id":"dnbfnj","short_id_url":"https://lobste.rs/s/dnbfnj","created_at":"2023-03-07T08:22:13.000-06:00","title":"Adding parameterized goals to makesure","url":"https://maximullaris.com/parameterized_goals.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dnbfnj/adding_parameterized_goals_makesure","submitter_user":{"username":"xonix","created_at":"2021-09-21T05:23:26.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":96,"avatar_url":"/avatars/xonix-100.png","invited_by_user":"benhoyt","github_username":"xonixx"},"tags":["programming"]},{"short_id":"pdqpaz","short_id_url":"https://lobste.rs/s/pdqpaz","created_at":"2023-03-07T08:17:02.000-06:00","title":"How to use the http.ResponseController type","url":"https://www.alexedwards.net/blog/how-to-use-the-http-responsecontroller-type","score":5,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pdqpaz/how_use_http_responsecontroller_type","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":8708,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["go"]},{"short_id":"xbbuuu","short_id_url":"https://lobste.rs/s/xbbuuu","created_at":"2023-03-07T08:10:54.000-06:00","title":"compis: contemporary systems programming language in the spirit of C","url":"https://github.com/rsms/compis","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xbbuuu/compis_contemporary_systems","submitter_user":{"username":"eskin","created_at":"2023-03-07T08:05:24.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":5,"avatar_url":"/avatars/eskin-100.png","invited_by_user":"knl","github_username":"jpe90"},"tags":["programming"]},{"short_id":"4f9tec","short_id_url":"https://lobste.rs/s/4f9tec","created_at":"2023-03-07T07:32:22.000-06:00","title":"In-browser demonstration of TPMs","url":"https://google.github.io/tpm-js/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4f9tec/browser_demonstration_tpms","submitter_user":{"username":"Foxboron","created_at":"2019-11-06T05:54:41.000-06:00","is_admin":false,"about":"F/OSS Developer and Arch Linux Developer doing packaging and security.\r\n\r\nInterested in Golang, development and supply chain security.","is_moderator":false,"karma":1292,"avatar_url":"/avatars/Foxboron-100.png","invited_by_user":"jelly","github_username":"Foxboron","twitter_username":"MortenLinderud"},"tags":["hardware","javascript","security"]},{"short_id":"1dnzgl","short_id_url":"https://lobste.rs/s/1dnzgl","created_at":"2023-03-07T07:29:15.000-06:00","title":"A Vulnerability in Implementations of SHA-3, SHAKE, EdDSA, and Other NIST-Approved Algorithms","url":"https://eprint.iacr.org/2023/331","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1dnzgl/vulnerability_implementations_sha_3","submitter_user":{"username":"atoponce","created_at":"2018-05-27T14:17:15.000-05:00","is_admin":false,"about":"Security researcher, amateur cryptographer, password enthusiast, Linux system administrator. I'm the one who what3words threatened with legal action for sharing the WhatFreeWords JavaScript source code.","is_moderator":false,"karma":1003,"avatar_url":"/avatars/atoponce-100.png","invited_by_user":"355E3B","github_username":"atoponce","keybase_signatures":[{"kb_username":"atoponce","sig_hash":"c88adc48e09b4c5b8763ff77cf8c207dda6dde0419561cc7f6253efc061ba9c40f"}]},"tags":["cryptography"]},{"short_id":"mjay79","short_id_url":"https://lobste.rs/s/mjay79","created_at":"2023-03-07T07:21:11.000-06:00","title":"Remote Code Execution as a Service","url":"https://earthly.dev/blog/remote-code-execution/","score":7,"flags":1,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mjay79/remote_code_execution_as_service","submitter_user":{"username":"adamgordonbell","created_at":"2019-05-19T13:57:16.000-05:00","is_admin":false,"about":"I'm Adam.  Software developer and have a [podcast](https://corecursive.com).","is_moderator":false,"karma":1058,"avatar_url":"/avatars/adamgordonbell-100.png","invited_by_user":"jonhoo"},"tags":["go","security"]},{"short_id":"iccnhk","short_id_url":"https://lobste.rs/s/iccnhk","created_at":"2023-03-07T06:41:09.000-06:00","title":"Building A Jank UART to USB Cable From Scavenged Parts","url":"https://github.com/francisrstokes/githublog/blob/main/2023/3/1/building-a-jank-uart-cable-from-scavenged-parts.md","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iccnhk/building_jank_uart_usb_cable_from","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":6265,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["hardware"]}]