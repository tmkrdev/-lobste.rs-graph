[{"short_id":"bvypaa","short_id_url":"https://lobste.rs/s/bvypaa","created_at":"2023-09-21T16:34:07.000-05:00","title":"buzz - A small/lightweight statically typed scripting language","url":"https://buzz-lang.dev","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bvypaa/buzz_small_lightweight_statically_typed","submitter_user":{"username":"g-w1","created_at":"2021-03-13T20:03:22.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":706,"avatar_url":"/avatars/g-w1-100.png","invited_by_user":"vaibhavsagar","github_username":"g-w1"},"tags":["plt","zig"]},{"short_id":"cjyajl","short_id_url":"https://lobste.rs/s/cjyajl","created_at":"2023-09-21T16:21:53.000-05:00","title":"SCUDO Hardened Allocator — Unofficial Internals Documentation","url":"https://trenchant.io/scudo-hardened-allocator-unofficial-internals-documentation/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cjyajl/scudo_hardened_allocator_unofficial","submitter_user":{"username":"fro","created_at":"2016-04-13T15:27:31.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1893,"avatar_url":"/avatars/fro-100.png","invited_by_user":"xero"},"tags":["security"]},{"short_id":"iovz9o","short_id_url":"https://lobste.rs/s/iovz9o","created_at":"2023-09-21T16:00:24.000-05:00","title":"The State of Async Rust","url":"https://corrode.dev/blog/async/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iovz9o/state_async_rust","submitter_user":{"username":"robey","created_at":"2013-12-19T22:12:04.000-06:00","is_admin":false,"about":"Hi, I'm Robey. Generally interested in crypto, programming languages, and distributed systems.\r\n\r\n- fediverse: @robey@messydesk.social\r\n- gitea: https://code.lag.net/robey/\r\n","is_moderator":false,"karma":1913,"avatar_url":"/avatars/robey-100.png","invited_by_user":"seldo","github_username":"robey"},"tags":["rust"]},{"short_id":"hx8vjb","short_id_url":"https://lobste.rs/s/hx8vjb","created_at":"2023-09-21T15:01:58.000-05:00","title":"The WebP 0day","url":"https://blog.isosceles.com/the-webp-0day/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hx8vjb/webp_0day","submitter_user":{"username":"nwf","created_at":"2023-07-14T10:31:17.000-05:00","is_admin":false,"about":"Computer architecture, operating systems, and programming languages weenie.","is_moderator":false,"karma":8,"avatar_url":"/avatars/nwf-100.png","invited_by_user":"david_chisnall"},"tags":["security"]},{"short_id":"fvalqf","short_id_url":"https://lobste.rs/s/fvalqf","created_at":"2023-09-21T14:53:41.000-05:00","title":"AWK for Exploratory Data Analysis of Humanities Data","url":"https://awk.dev/eda.html","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fvalqf/awk_for_exploratory_data_analysis","submitter_user":{"username":"benhoyt","created_at":"2020-05-20T17:24:04.000-05:00","is_admin":false,"about":"Software engineer at Canonical. Author of [GoAWK](https://github.com/benhoyt/goawk), a POSIX-compatible AWK interpreter written in Go. Author of Python's [`os.scandir()`](https://peps.python.org/pep-0471/). Husband, father, Christian. See my website at [BenHoyt.com](https://benhoyt.com/).","is_moderator":false,"karma":1641,"avatar_url":"/avatars/benhoyt-100.png","invited_by_user":"mvdan"},"tags":["education"]},{"short_id":"psdmso","short_id_url":"https://lobste.rs/s/psdmso","created_at":"2023-09-21T14:53:12.000-05:00","title":"Matrix 2.0: The Future of Matrix","url":"https://matrix.org/blog/2023/09/matrix-2-0/","score":16,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/psdmso/matrix_2_0_future_matrix","submitter_user":{"username":"ptman","created_at":"2017-06-07T09:22:20.000-05:00","is_admin":false,"about":"https://paul.totterman.name/","is_moderator":false,"karma":1386,"avatar_url":"/avatars/ptman-100.png","invited_by_user":"lau","github_username":"ptman","twitter_username":"ptotterm"},"tags":["networking"]},{"short_id":"tkzyme","short_id_url":"https://lobste.rs/s/tkzyme","created_at":"2023-09-21T14:19:03.000-05:00","title":"How do databases execute expressions?","url":"https://notes.eatonphil.com/2023-09-21-how-do-databases-execute-expressions.html","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tkzyme/how_do_databases_execute_expressions","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Info at eatonphil.com.\r\n\r\nphil@eatonphil.com","is_moderator":false,"karma":5160,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"tags":["compilers","databases"]},{"short_id":"yst7r6","short_id_url":"https://lobste.rs/s/yst7r6","created_at":"2023-09-21T12:59:11.000-05:00","title":"Behind the scenes with FawltyDeps v0.13.0: Matching imports with dependencies","url":"https://www.tweag.io/blog/2023-09-21-fawltydeps-mapping-strategy/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yst7r6/behind_scenes_with_fawltydeps_v0_13_0","submitter_user":{"username":"myme","created_at":"2019-04-12T15:15:36.000-05:00","is_admin":false,"about":"Software developer by trade and passion: https://myme.no / https://mastodon.social/@myme","is_moderator":false,"karma":269,"avatar_url":"/avatars/myme-100.png","invited_by_user":"dlowe","github_username":"myme","twitter_username":"ubermyme"},"tags":["python"]},{"short_id":"xr24nd","short_id_url":"https://lobste.rs/s/xr24nd","created_at":"2023-09-21T12:58:59.000-05:00","title":"Memories of a really goofy phone from the late 80s","url":"https://rachelbythebay.com/w/2023/09/20/fv1000/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xr24nd/memories_really_goofy_phone_from_late_80s","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":13027,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["hardware","historical"]},{"short_id":"rtepnw","short_id_url":"https://lobste.rs/s/rtepnw","created_at":"2023-09-21T12:26:55.000-05:00","title":"Most UI Applications are Broken Real-time Applications","url":"https://thelig.ht/ui-apps-are-broken/","score":17,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rtepnw/most_ui_applications_are_broken_real_time","submitter_user":{"username":"herbalmist","created_at":"2023-08-18T11:56:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":38,"avatar_url":"/avatars/herbalmist-100.png","invited_by_user":"sujayakar"},"tags":["graphics","linux","mac","windows"]},{"short_id":"rlkuts","short_id_url":"https://lobste.rs/s/rlkuts","created_at":"2023-09-21T10:52:34.000-05:00","title":"The CHERI Instruction-Set Architecture, Version 9","url":"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-987.html","score":5,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis technical report describes CHERI ISAv9, the ninth version of the CHERI architecture being developed by SRI International and the University of Cambridge. This design captures thirteen years of research, development, experimentation, refinement, formal analysis, and validation through hardware and software implementation.\u003c/p\u003e\n\u003cp\u003eCHERI introduces an architecture-neutral capability-based protection model, which has been instantiated in various commodity base architectures to give CHERI-RISC-V, Arm’s prototype Morello architecture, and (sketched) CHERI-x86-64. It enables software to efficiently implement fine-grained memory protection and scalable software compartmentalization, by providing strong, deterministic, efficient mechanisms to support the principles of least privilege and intentional use in the execution of software at multiple levels of abstraction, preventing and mitigating vulnerabilities. Design goals include incremental adoptability from current ISAs and software stacks, low performance overhead for memory protection, significant performance improvements for software compartmentalization, formal grounding, and programmer-friendly underpinnings.\u003c/p\u003e\n\u003cp\u003eCHERI blends traditional paged virtual memory with an in-address-space capability model that includes capability values in registers, capability instructions, and tagged memory to enforce capability integrity. This hybrid approach addresses the performance and robustness issues that arise when trying to express more secure, privilege minimising programming models, above conventional architectures that provide only MMU-based protection. CHERI builds on the C-language fat-pointer literature: its capabilities can describe fine-grained regions of memory, and can be substituted for data or code pointers in generated code, protecting data and improving control-flow robustness. Strong capability integrity and monotonicity properties allow CHERI to express a variety of protection idioms, from enforcing valid C-language pointer provenance and bounds checking to implementing the isolation and controlled communication structures required for software compartmentalization.\u003c/p\u003e\n\u003cp\u003eCHERI’s hybrid approach allows incremental adoption of capability-oriented design: critical components can be ported and recompiled to use capabilities throughout, providing finegrain memory protection, or be largely unmodified but encapsulated in ways that permit only controlled interaction. Potential early deployment scenarios include low-level software Trusted Computing Bases (TCBs) such as separation kernels, hypervisors, and operating-system kernels, userspace TCBs such as language runtimes and web browsers, and particularly high-risk software libraries such as data compression, protocol parsing, and image processing (which are concentrations of both complex and historically vulnerability-prone code exposed to untrustworthy data sources).\u003c/p\u003e\n\u003cp\u003eCHERI ISAv9 is a substantial enhancement to prior ISA versions. CHERI-RISC-V has replaced CHERI-MIPS as the primary reference platform, and CHERI-MIPS has been removed from the specification. CHERI architectures now always use merged register files where existing general-purpose registers are extended to support capabilities. CHERI architectures have adopted two design decisions from Arm Morello: 1) CHERI architectures now clear tags rather than raising exceptions if an instruction attempts a non-monotonic modification of a capability; and 2) DDC and PCC no longer relocate legacy memory accesses by default. CHERI-RISC-V has received numerous updates to serve as a better baseline for an upstream standard proposal including a more mature definition of compressed instructions in capability mode. CHERI-x86- 64 now includes details of extensions to existing x86 instructions and proposed new instructions in a separate ISA reference chapter along with various other updates.\u003c/p\u003e\n","description_plain":"This technical report describes CHERI ISAv9, the ninth version of the CHERI architecture being developed by SRI International and the University of Cambridge. This design captures thirteen years of research, development, experimentation, refinement, formal analysis, and validation through hardware and software implementation.\r\n\r\nCHERI introduces an architecture-neutral capability-based protection model, which has been instantiated in various commodity base architectures to give CHERI-RISC-V, Arm’s prototype Morello architecture, and (sketched) CHERI-x86-64. It enables software to efficiently implement fine-grained memory protection and scalable software compartmentalization, by providing strong, deterministic, efficient mechanisms to support the principles of least privilege and intentional use in the execution of software at multiple levels of abstraction, preventing and mitigating vulnerabilities. Design goals include incremental adoptability from current ISAs and software stacks, low performance overhead for memory protection, significant performance improvements for software compartmentalization, formal grounding, and programmer-friendly underpinnings.\r\n\r\nCHERI blends traditional paged virtual memory with an in-address-space capability model that includes capability values in registers, capability instructions, and tagged memory to enforce capability integrity. This hybrid approach addresses the performance and robustness issues that arise when trying to express more secure, privilege minimising programming models, above conventional architectures that provide only MMU-based protection. CHERI builds on the C-language fat-pointer literature: its capabilities can describe fine-grained regions of memory, and can be substituted for data or code pointers in generated code, protecting data and improving control-flow robustness. Strong capability integrity and monotonicity properties allow CHERI to express a variety of protection idioms, from enforcing valid C-language pointer provenance and bounds checking to implementing the isolation and controlled communication structures required for software compartmentalization.\r\n\r\nCHERI’s hybrid approach allows incremental adoption of capability-oriented design: critical components can be ported and recompiled to use capabilities throughout, providing finegrain memory protection, or be largely unmodified but encapsulated in ways that permit only controlled interaction. Potential early deployment scenarios include low-level software Trusted Computing Bases (TCBs) such as separation kernels, hypervisors, and operating-system kernels, userspace TCBs such as language runtimes and web browsers, and particularly high-risk software libraries such as data compression, protocol parsing, and image processing (which are concentrations of both complex and historically vulnerability-prone code exposed to untrustworthy data sources).\r\n\r\nCHERI ISAv9 is a substantial enhancement to prior ISA versions. CHERI-RISC-V has replaced CHERI-MIPS as the primary reference platform, and CHERI-MIPS has been removed from the specification. CHERI architectures now always use merged register files where existing general-purpose registers are extended to support capabilities. CHERI architectures have adopted two design decisions from Arm Morello: 1) CHERI architectures now clear tags rather than raising exceptions if an instruction attempts a non-monotonic modification of a capability; and 2) DDC and PCC no longer relocate legacy memory accesses by default. CHERI-RISC-V has received numerous updates to serve as a better baseline for an upstream standard proposal including a more mature definition of compressed instructions in capability mode. CHERI-x86- 64 now includes details of extensions to existing x86 instructions and proposed new instructions in a separate ISA reference chapter along with various other updates.","comments_url":"https://lobste.rs/s/rlkuts/cheri_instruction_set_architecture","submitter_user":{"username":"nwf","created_at":"2023-07-14T10:31:17.000-05:00","is_admin":false,"about":"Computer architecture, operating systems, and programming languages weenie.","is_moderator":false,"karma":8,"avatar_url":"/avatars/nwf-100.png","invited_by_user":"david_chisnall"},"tags":["hardware","pdf","release"]},{"short_id":"dkfkva","short_id_url":"https://lobste.rs/s/dkfkva","created_at":"2023-09-21T10:45:06.000-05:00","title":"State of HTML 2023","url":"https://survey.devographics.com/en-US/survey/state-of-html/2023","score":-1,"flags":2,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dkfkva/state_html_2023","submitter_user":{"username":"dz4k","created_at":"2022-12-21T15:27:51.000-06:00","is_admin":false,"about":"I'm https://denizaksimsek.com","is_moderator":false,"karma":472,"avatar_url":"/avatars/dz4k-100.png","invited_by_user":"1cg","github_username":"dz4k"},"tags":["web"]},{"short_id":"ph57od","short_id_url":"https://lobste.rs/s/ph57od","created_at":"2023-09-21T10:42:32.000-05:00","title":"Mastodon 4.2","url":"https://blog.joinmastodon.org/2023/09/mastodon-4.2/","score":31,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ph57od/mastodon_4_2","submitter_user":{"username":"andypiper","created_at":"2023-04-05T06:52:37.000-05:00","is_admin":false,"about":"[maker](https://github.com/andypiper), [tinkerer](https://forgeandcraft.co.uk), [podcaster](https://gamesatwork.biz)","is_moderator":false,"karma":43,"avatar_url":"/avatars/andypiper-100.png","invited_by_user":"edent","github_username":"andypiper"},"tags":["release"]},{"short_id":"bu9mfy","short_id_url":"https://lobste.rs/s/bu9mfy","created_at":"2023-09-21T09:58:40.000-05:00","title":"Supply Chain Issues in PyPI","url":"https://stiankri.substack.com/p/supply-chain-issues-in-pypi","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bu9mfy/supply_chain_issues_pypi","submitter_user":{"username":"wayphinder","created_at":"2023-07-25T14:12:49.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2,"avatar_url":"/avatars/wayphinder-100.png","invited_by_user":"Foxboron"},"tags":["python","security"]},{"short_id":"vn7dqp","short_id_url":"https://lobste.rs/s/vn7dqp","created_at":"2023-09-21T08:22:54.000-05:00","title":"Few different ways to run wordpress","url":"https://github.com/geekodour/xrunsWordpress","score":-1,"flags":2,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vn7dqp/few_different_ways_run_wordpress","submitter_user":{"username":"geekodour","created_at":"2018-07-02T05:16:19.000-05:00","is_admin":false,"about":"p2p systems and network programming","is_moderator":false,"karma":31,"avatar_url":"/avatars/geekodour-100.png","invited_by_user":"romanzolotarev","github_username":"geekodour","twitter_username":"geekodour"},"tags":["browsers","wasm","web"]},{"short_id":"wieu1x","short_id_url":"https://lobste.rs/s/wieu1x","created_at":"2023-09-21T07:21:57.000-05:00","title":"SeaGOAT: local-first semantic code search engine (\"AI based grep\")","url":"https://github.com/kantord/SeaGOAT","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wieu1x/seagoat_local_first_semantic_code_search","submitter_user":{"username":"kantord","created_at":"2023-09-14T10:10:04.000-05:00","is_admin":false,"about":"I am Dániel, a full stack-developer living in Barcelona, originally from Hungary. I work mainly with Typescript, React, Python and Node.\r\n\r\nI have several open source personal projects on my GitHub page: https://github.com/kantord","is_moderator":false,"karma":3,"avatar_url":"/avatars/kantord-100.png","invited_by_user":"underyx","github_username":"kantord"},"tags":["ai","programming","python"]},{"short_id":"fu1pir","short_id_url":"https://lobste.rs/s/fu1pir","created_at":"2023-09-21T06:44:32.000-05:00","title":"A Heat Map Reporter for Minitest","url":"https://garrettdimon.com/journal/posts/a-heat-map-reporter-for-minitest","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fu1pir/heat_map_reporter_for_minitest","submitter_user":{"username":"pushcx","created_at":"2012-08-14T20:25:08.000-05:00","is_admin":true,"about":"Hi, I'm [Peter Bhat Harkins](https://malaprop.org), a programmer and entrepreneur from Chicago. From June 2014 to winter of 2015 I typically posted a dozen stories per day to [help](https://lobste.rs/s/9pm09z/what_is_on_topic_what_is_not/comments/nie0yn#c_nie0yn) the site reach a critical mass of regular visitors. In October 2017 I became the site administrator after the site creator @jcs stepped down.\r\n\r\n * Please don’t message me for an invitation if we're complete strangers; check \u003ca href=\"https://lobste.rs/u\"\u003ethe user list\u003c/a\u003e for someone you know or ask [in chat](https://lobste.rs/chat).\r\n * Submit a [`meta`](https://lobste.rs/t/meta) post for feature requests (including new tags) to let the community discuss. Bug reports and \"is this a bug?\" should go to [the issue tracker](https://github.com/lobsters/lobsters/issues).\r\n * [Message me](https://lobste.rs/messages?to=pushcx) for administrative and moderator things. I don't see everything and I gotta sleep sometime.\r\n * E-mail my first name @malaprop.org regarding site security or if you can't log in to message me. If I've posted or commented about something here or in the chat room, I'd almost certainly love to talk more about it.\r\n","is_moderator":true,"avatar_url":"/avatars/pushcx-100.png","invited_by_user":"jcs","github_username":"pushcx","twitter_username":"pushcx","keybase_signatures":[{"kb_username":"pushcx","sig_hash":"de6fb28b501c211e88fabddeacc834c6b922d738efd6b4108ce871879d039e510f"}]},"tags":["design","ruby","testing"]},{"short_id":"1rgw6s","short_id_url":"https://lobste.rs/s/1rgw6s","created_at":"2023-09-21T06:30:59.000-05:00","title":"Achieving High Availability with HAProxy and Keepalived: Building a Redundant Load Balancer","url":"https://sysadmins.co.za/achieving-high-availability-with-haproxy-and-keepalived-building-a-redundant-load-balancer/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1rgw6s/achieving_high_availability_with","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":23193,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["devops","networking"]},{"short_id":"c9jjwl","short_id_url":"https://lobste.rs/s/c9jjwl","created_at":"2023-09-21T05:24:05.000-05:00","title":"Grouping digits in SQL","url":"https://peter.eisentraut.org/blog/2023/09/20/grouping-digits-in-sql","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/c9jjwl/grouping_digits_sql","submitter_user":{"username":"Tenzer","created_at":"2019-06-24T12:19:29.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1161,"avatar_url":"/avatars/Tenzer-100.png","invited_by_user":"jamesog"},"tags":["databases"]},{"short_id":"8ognw7","short_id_url":"https://lobste.rs/s/8ognw7","created_at":"2023-09-21T05:03:09.000-05:00","title":"GitHub Actions for C++ and Qt","url":"https://www.kdab.com/github-actions-for-cpp-and-qt/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8ognw7/github_actions_for_c_qt","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":23193,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"sz49qc","short_id_url":"https://lobste.rs/s/sz49qc","created_at":"2023-09-21T04:39:02.000-05:00","title":"The Hidden Origins of Lisp","url":"https://lfe.io/books/sicp/fm/preface-3/origins.html","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sz49qc/hidden_origins_lisp","submitter_user":{"username":"WilhelmVonWeiner","created_at":"2018-11-18T13:58:20.000-06:00","is_admin":false,"about":"\"Give me a problem with 1,000,000 lines of C. But don't expect me to read the C, I couldn't. And don't think I'll have to write 10,000 lines of Forth. Just give me the specs of the problem, and documentation of the interface.\"\r\n\r\n\\- Charles \"Chuck\" H. Moore","is_moderator":false,"karma":5619,"avatar_url":"/avatars/WilhelmVonWeiner-100.png","invited_by_user":"rocx"},"tags":["erlang","lisp"]},{"short_id":"tg2giw","short_id_url":"https://lobste.rs/s/tg2giw","created_at":"2023-09-21T03:54:10.000-05:00","title":"Why Kakoune","url":"https://andreyor.st/posts/2023-09-20-why-kakoune/","score":27,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tg2giw/why_kakoune","submitter_user":{"username":"TeddyDD","created_at":"2019-03-05T16:08:51.000-06:00","is_admin":false,"about":"visual artist / programmer","is_moderator":false,"karma":294,"avatar_url":"/avatars/TeddyDD-100.png","invited_by_user":"nomto","github_username":"TeddyDD"},"tags":["emacs","vim"]},{"short_id":"3fyo9u","short_id_url":"https://lobste.rs/s/3fyo9u","created_at":"2023-09-21T03:25:19.000-05:00","title":"The first arm64 CPU launch","url":"https://ioc.exchange/@shac/111099766302290499","score":25,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3fyo9u/first_arm64_cpu_launch","submitter_user":{"username":"saaramar","created_at":"2022-03-22T06:41:55.000-05:00","is_admin":false,"about":"My name is Saar Amar. I'm a security researcher, passionate and focused on reverse engineering, mitigations, exploit development, computer architecture, and everything low level.\r\n\r\nMetadata:\r\nSecurity researcher.\r\nTwitter: @AmarSaar, @amarsaar@infosec.exchange","is_moderator":false,"karma":132,"avatar_url":"/avatars/saaramar-100.png","invited_by_user":"david_chisnall"},"tags":["historical"]},{"short_id":"3syk0k","short_id_url":"https://lobste.rs/s/3syk0k","created_at":"2023-09-21T02:46:27.000-05:00","title":"Data Contract Specification","url":"https://datacontract.com","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3syk0k/data_contract_specification","submitter_user":{"username":"jochen","created_at":"2022-03-04T03:50:37.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":6,"avatar_url":"/avatars/jochen-100.png","invited_by_user":"youngbrioche"},"tags":["api","databases"]},{"short_id":"iulxmq","short_id_url":"https://lobste.rs/s/iulxmq","created_at":"2023-09-20T21:18:04.000-05:00","title":"Learning resources for efficient GPU computation?","url":"","score":9,"flags":0,"comment_count":2,"description":"\u003cp\u003eI’ve always been curious about how to program GPUs, not really for games but for 2D generative art and numerical computing. I’ve looked around and there’s an odd blog post here and there, but the only thing I’ve found that really goes into depth is this Nvidia book from the early 2000s and I’m assuming things have changed significantly since then: \u003ca href=\"https://developer.nvidia.com/gpugems/gpugems2/part-iv-general-purpose-computation-gpus-primer\" rel=\"ugc\"\u003eGPU Gems 2\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf it makes a difference I’ll be targeting WebGPU via \u003ccode\u003ewgpu\u003c/code\u003e in Rust.\u003c/p\u003e\n","description_plain":"I’ve always been curious about how to program GPUs, not really for games but for 2D generative art and numerical computing. I’ve looked around and there’s an odd blog post here and there, but the only thing I’ve found that really goes into depth is this Nvidia book from the early 2000s and I’m assuming things have changed significantly since then: [GPU Gems 2](https://developer.nvidia.com/gpugems/gpugems2/part-iv-general-purpose-computation-gpus-primer).\r\n\r\nIf it makes a difference I’ll be targeting WebGPU via `wgpu` in Rust.","comments_url":"https://lobste.rs/s/iulxmq/learning_resources_for_efficient_gpu","submitter_user":{"username":"zmitchell","created_at":"2018-12-05T13:37:17.000-06:00","is_admin":false,"about":"Ultrafast spectroscopy by day, programming by night","is_moderator":false,"karma":857,"avatar_url":"/avatars/zmitchell-100.png","invited_by_user":"btbytes","github_username":"zmitchell"},"tags":["ask","performance"]}]