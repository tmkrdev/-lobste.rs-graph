[{"short_id":"jhb1xn","short_id_url":"https://lobste.rs/s/jhb1xn","created_at":"2023-03-13T04:05:38.000-05:00","title":"Building a flatpak app without the flatpak cli","url":"https://ranfdev.com/blog/building-a-flatpak-app-without-the-flatpak-cli/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jhb1xn/building_flatpak_app_without_flatpak_cli","submitter_user":{"username":"ranfdev","created_at":"2022-07-31T08:48:52.000-05:00","is_admin":false,"about":"Computer engineering student","is_moderator":false,"karma":2,"avatar_url":"/avatars/ranfdev-100.png","invited_by_user":"julienxx","github_username":"ranfdev"},"tags":["linux"]},{"short_id":"ibticd","short_id_url":"https://lobste.rs/s/ibticd","created_at":"2023-03-13T03:51:47.000-05:00","title":"Repeat yourself, do more than one thing, and rewrite everything","url":"https://programmingisterrible.com/post/176657481103/repeat-yourself-do-more-than-one-thing-and","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ibticd/repeat_yourself_do_more_than_one_thing","submitter_user":{"username":"Sietsebb","created_at":"2017-01-03T08:32:51.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":2979,"avatar_url":"/avatars/Sietsebb-100.png","invited_by_user":"asthasr"},"tags":["practices","programming"]},{"short_id":"9nrrvl","short_id_url":"https://lobste.rs/s/9nrrvl","created_at":"2023-03-13T01:23:21.000-05:00","title":"Hygienic Resugaring of Compositional Desugaring","url":"https://cs.brown.edu/~sk/Publications/Papers/Published/pk-hyg-resugaring-comp-desugaring/","score":2,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9nrrvl/hygienic_resugaring_compositional","submitter_user":{"username":"5d22b","created_at":"2022-07-28T00:02:54.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":256,"avatar_url":"/avatars/5d22b-100.png","invited_by_user":"est31"},"tags":["plt"]},{"short_id":"fqvscn","short_id_url":"https://lobste.rs/s/fqvscn","created_at":"2023-03-12T23:35:48.000-05:00","title":"Augmenting Human Intellect: A Conceptual Framework","url":"https://www.dougengelbart.org/pubs/papers/scanned/Doug_Engelbart-AugmentingHumanIntellect.pdf","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fqvscn/augmenting_human_intellect_conceptual","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96011,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["pdf","philosophy"]},{"short_id":"bvqtad","short_id_url":"https://lobste.rs/s/bvqtad","created_at":"2023-03-12T22:34:48.000-05:00","title":"Cobalt RaQ:  This Web Server Changed The Internet","url":"https://www.youtube.com/watch?v=PJ6AvtV3Ya4","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bvqtad/cobalt_raq_this_web_server_changed","submitter_user":{"username":"Hail_Spacecake","created_at":"2016-06-07T16:07:14.000-05:00","is_admin":false,"about":"Programmer by trade and avocation in the SF Bay Area. ","is_moderator":false,"karma":5040,"avatar_url":"/avatars/Hail_Spacecake-100.png","invited_by_user":"awal"},"tags":["hardware","historical","video"]},{"short_id":"czi8ku","short_id_url":"https://lobste.rs/s/czi8ku","created_at":"2023-03-12T19:06:57.000-05:00","title":"Policy on util packages","url":"https://brandur.org/fragments/policy-on-util-packages","score":6,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/czi8ku/policy_on_util_packages","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":8773,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["go","programming"]},{"short_id":"lbbd2b","short_id_url":"https://lobste.rs/s/lbbd2b","created_at":"2023-03-12T18:44:05.000-05:00","title":"Generative Artistry Tutorials","url":"https://generativeartistry.com/tutorials/","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lbbd2b/generative_artistry_tutorials","submitter_user":{"username":"indigo","created_at":"2015-10-15T11:52:50.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":728,"avatar_url":"/avatars/indigo-100.png","invited_by_user":"tluyben2"},"tags":["art"]},{"short_id":"p6tkqj","short_id_url":"https://lobste.rs/s/p6tkqj","created_at":"2023-03-12T17:07:16.000-05:00","title":"Announcing easyNostr: Setup your Nostr NIP-05 ID under your own domain (or use one of ours)","url":"https://easydns.com/blog/2023/03/12/easynostr-setup-your-nip-05-id-under-your-own-domain-or-use-one-of-ours/","score":-5,"flags":6,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p6tkqj/announcing_easynostr_setup_your_nostr","submitter_user":{"username":"StuntPope","created_at":"2018-05-27T23:38:12.000-05:00","is_admin":false,"about":"easyDNS co-founder and CEO. Director, Internet Society Canadian Chapter. Guitar. Bookworm.","is_moderator":false,"karma":59,"avatar_url":"/avatars/StuntPope-100.png","invited_by_user":"indolering"},"tags":["distributed","networking"]},{"short_id":"ypbrf6","short_id_url":"https://lobste.rs/s/ypbrf6","created_at":"2023-03-12T16:13:25.000-05:00","title":"How virtual environments work","url":"https://snarky.ca/how-virtual-environments-work/","score":14,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ypbrf6/how_virtual_environments_work","submitter_user":{"username":"ubernostrum","created_at":"2019-04-03T22:00:38.000-05:00","is_admin":false,"about":"Python/Django guy. Unicode and security curmudgeon.","is_moderator":false,"karma":5104,"avatar_url":"/avatars/ubernostrum-100.png","invited_by_user":"isagalaev"},"tags":["python"]},{"short_id":"c8nqjz","short_id_url":"https://lobste.rs/s/c8nqjz","created_at":"2023-03-12T14:33:06.000-05:00","title":"[PADL'23] Modern Macros","url":"https://youtu.be/YMUCpx6vhZM","score":3,"flags":0,"comment_count":1,"description":"\u003cp\u003eDetails at \u003ca href=\"https://popl23.sigplan.org/details/PADL-2023-papers/20/Modern-Macros\" rel=\"ugc\"\u003ehttps://popl23.sigplan.org/details/PADL-2023-papers/20/Modern-Macros\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Details at https://popl23.sigplan.org/details/PADL-2023-papers/20/Modern-Macros","comments_url":"https://lobste.rs/s/c8nqjz/padl_23_modern_macros","submitter_user":{"username":"spdegabrielle","created_at":"2019-04-01T09:07:57.000-05:00","is_admin":false,"about":"Health Systems Integration developer. https://github.com/spdegabrielle https://www.linkedin.com/in/stephen-de-gabrielle/ https://twitter.com/spdegabrielle","is_moderator":false,"karma":270,"avatar_url":"/avatars/spdegabrielle-100.png","invited_by_user":"jkirchartz"},"tags":["lisp","video"]},{"short_id":"pi9lbg","short_id_url":"https://lobste.rs/s/pi9lbg","created_at":"2023-03-12T11:01:51.000-05:00","title":"Fact Check: the UK and its Online Safety Bill","url":"https://untidy.substack.com/p/fact-check-the-uk-and-its-online","score":3,"flags":2,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pi9lbg/fact_check_uk_its_online_safety_bill","submitter_user":{"username":"ehamberg","created_at":"2014-08-18T02:47:08.000-05:00","is_admin":false,"about":"https://keybase.io/eh","is_moderator":false,"karma":3638,"avatar_url":"/avatars/ehamberg-100.png","invited_by_user":"oleavr"},"tags":["law"]},{"short_id":"v9ugba","short_id_url":"https://lobste.rs/s/v9ugba","created_at":"2023-03-12T10:22:12.000-05:00","title":"Haiku Activity \u0026 Contract Report, February 2023","url":"https://www.haiku-os.org/blog/waddlesplash/2023-03-11_haiku_activity_contract_report_feburary_2023/","score":19,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/v9ugba/haiku_activity_contract_report_february","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96011,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["osdev"]},{"short_id":"ovdjo6","short_id_url":"https://lobste.rs/s/ovdjo6","created_at":"2023-03-12T07:07:44.000-05:00","title":"How To Set Default Fonts and Font Aliases on Linux","url":"https://jichu4n.com/posts/how-to-set-default-fonts-and-font-aliases-on-linux/","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ovdjo6/how_set_default_fonts_font_aliases_on","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5229,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["design"]},{"short_id":"q0w6fj","short_id_url":"https://lobste.rs/s/q0w6fj","created_at":"2023-03-12T06:22:35.000-05:00","title":"halp: A CLI tool to get help with CLI tools","url":"https://github.com/orhun/halp","score":10,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/q0w6fj/halp_cli_tool_get_help_with_cli_tools","submitter_user":{"username":"orhun","created_at":"2022-04-16T17:58:30.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":108,"avatar_url":"/avatars/orhun-100.png","invited_by_user":"extrawurst"},"tags":["rust","show"]},{"short_id":"q8yr0n","short_id_url":"https://lobste.rs/s/q8yr0n","created_at":"2023-03-12T06:05:46.000-05:00","title":"Scrcpy 2.0, with audio","url":"https://blog.rom1v.com/2023/03/scrcpy-2-0-with-audio/","score":18,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/q8yr0n/scrcpy_2_0_with_audio","submitter_user":{"username":"kngl","created_at":"2017-06-15T14:58:55.000-05:00","is_admin":false,"about":"Odoo Developer\r\n\r\n🦘/🦞","is_moderator":false,"karma":1049,"avatar_url":"/avatars/kngl-100.png","invited_by_user":"ngoldbaum","github_username":"KangOl"},"tags":["linux","mobile","release"]},{"short_id":"9nc3kq","short_id_url":"https://lobste.rs/s/9nc3kq","created_at":"2023-03-12T05:51:04.000-05:00","title":"How not to design a UI library","url":"http://lisyarus.github.io/blog/programming/2023/03/11/how-not-to-ui.html","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9nc3kq/how_not_design_ui_library","submitter_user":{"username":"werat","created_at":"2021-03-29T12:59:48.000-05:00","is_admin":false,"about":"Software engineer at Google (Stadia, devtools). Making your favorite games run in the cloud.","is_moderator":false,"karma":626,"avatar_url":"/avatars/werat-100.png","invited_by_user":"hoistbypetard"},"tags":["c++","programming"]},{"short_id":"ro3fq8","short_id_url":"https://lobste.rs/s/ro3fq8","created_at":"2023-03-12T04:54:47.000-05:00","title":"Building a Privacy-First Newsletter","url":"https://blog.kjamistan.com/building-a-privacy-first-newsletter.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ro3fq8/building_privacy_first_newsletter","submitter_user":{"username":"kjam","created_at":"2019-03-16T08:04:53.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":8,"avatar_url":"/avatars/kjam-100.png","invited_by_user":"gerikson"},"tags":["email","privacy","web"]},{"short_id":"ymtrc0","short_id_url":"https://lobste.rs/s/ymtrc0","created_at":"2023-03-12T04:00:07.000-05:00","title":"Most Popular lobste.rs Tags Fetched in 1 Month","url":"","score":14,"flags":0,"comment_count":10,"description":"\u003cp\u003eOn Sun Feb 12 05:51:29 CST 2023 (1 month ago) I started \u003ca href=\"https://ctrl-c.club/~lucic71/misc/lobsters-stats-parser.py\" rel=\"ugc\"\u003ethis script\u003c/a\u003e to discover what are the most popular tags on lobste.rs. I did this because I wanted to understand what are the hot topics in this community and what most people are interested in.\u003c/p\u003e\n\u003cp\u003eSome conclusions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe ‘programming’ tag is a bit awkward as it’s in the first place but does not say much about the trend of the articles. From what I saw most people couple this tag with another one when submitting new articles in the ‘programming’ category as you can see \u003ca href=\"https://lobste.rs/t/programming\" rel=\"ugc\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003elobste.rs loves ‘rust’, it’s on everyone’s lips.\u003c/li\u003e\n\u003cli\u003e‘security’ and ‘hardware’ have a considerable advantage from place 5.\u003c/li\u003e\n\u003cli\u003eFrom place 5 downward there is not very much difference between the score of two consecutive positions, the highest difference being 3 between ‘databases’ and ‘performance’, between ‘performance’ and ‘historical’, and between ‘plt’ and ‘python’.\u003c/li\u003e\n\u003cli\u003eThere are many interesting tags in the bottom of the list and I don’t know why they have such bad scores, for example: ‘java’, ‘lisp’, ‘formalmethods’, ‘philosophy’, ‘unix’, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe results are dumped below:\u003cbr\u003e\n97 programming\u003cbr\u003e\n80 rust\u003cbr\u003e\n74 security\u003cbr\u003e\n60 hardware\u003cbr\u003e\n47 web\u003cbr\u003e\n47 linux\u003cbr\u003e\n46 ai\u003cbr\u003e\n45 practices\u003cbr\u003e\n44 go\u003cbr\u003e\n43 databases\u003cbr\u003e\n40 performance\u003cbr\u003e\n38 historical\u003cbr\u003e\n37 pdf\u003cbr\u003e\n35 javascript\u003cbr\u003e\n33 networking\u003cbr\u003e\n32 video\u003cbr\u003e\n31 plt\u003cbr\u003e\n28 python\u003cbr\u003e\n27 c++\u003cbr\u003e\n26 release\u003cbr\u003e\n24 c\u003cbr\u003e\n23 compsci\u003cbr\u003e\n22 distributed\u003cbr\u003e\n20 cryptography\u003cbr\u003e\n20 compilers\u003cbr\u003e\n18 reversing\u003cbr\u003e\n18 devops\u003cbr\u003e\n18 ask\u003cbr\u003e\n16 openbsd\u003cbr\u003e\n16 culture\u003cbr\u003e\n15 assembly\u003cbr\u003e\n13 testing\u003cbr\u003e\n13 games\u003cbr\u003e\n12 ruby\u003cbr\u003e\n11 zig\u003cbr\u003e\n11 show\u003cbr\u003e\n11 nix\u003cbr\u003e\n10 vcs\u003cbr\u003e\n10 education\u003cbr\u003e\n9 osdev\u003cbr\u003e\n9 math\u003cbr\u003e\n9 lua\u003cbr\u003e\n9 graphics\u003cbr\u003e\n8 privacy\u003cbr\u003e\n8 mac\u003cbr\u003e\n8 haskell\u003cbr\u003e\n8 debugging\u003cbr\u003e\n8 browsers\u003cbr\u003e\n8 art\u003cbr\u003e\n8 api\u003cbr\u003e\n7 windows\u003cbr\u003e\n7 nodejs\u003cbr\u003e\n7 design\u003cbr\u003e\n6 unix\u003cbr\u003e\n6 rant\u003cbr\u003e\n6 philosophy\u003cbr\u003e\n6 mobile\u003cbr\u003e\n6 ios\u003cbr\u003e\n6 formalmethods\u003cbr\u003e\n6 email\u003cbr\u003e\n5 law\u003cbr\u003e\n5 freebsd\u003cbr\u003e\n5 erlang\u003cbr\u003e\n5 emacs\u003cbr\u003e\n5 book\u003cbr\u003e\n5 a11y\u003cbr\u003e\n4 wasm\u003cbr\u003e\n4 science\u003cbr\u003e\n4 scaling\u003cbr\u003e\n4 elixir\u003cbr\u003e\n4 d\u003cbr\u003e\n4 css\u003cbr\u003e\n4 android\u003cbr\u003e\n3 vim\u003cbr\u003e\n3 lisp\u003cbr\u003e\n3 java\u003cbr\u003e\n3 clojure\u003cbr\u003e\n3 audio\u003cbr\u003e\n2 visualization\u003cbr\u003e\n2 virtualization\u003cbr\u003e\n2 swift\u003cbr\u003e\n2 satire\u003cbr\u003e\n2 perl\u003cbr\u003e\n2 netbsd\u003cbr\u003e\n2 ml\u003cbr\u003e\n2 event\u003cbr\u003e\n2 elm\u003cbr\u003e\n2 dotnet\u003cbr\u003e\n1 slides\u003cbr\u003e\n1 scala\u003cbr\u003e\n1 person\u003cbr\u003e\n1 meta\u003cbr\u003e\n1 merkle-trees\u003cbr\u003e\n1 kotlin\u003cbr\u003e\n1 job\u003cbr\u003e\n1 illumos\u003cbr\u003e\n1 finance\u003cbr\u003e\n1 dragonflybsd\u003c/p\u003e\n","description_plain":"On Sun Feb 12 05:51:29 CST 2023 (1 month ago) I started [this script](https://ctrl-c.club/~lucic71/misc/lobsters-stats-parser.py) to discover what are the most popular tags on lobste.rs. I did this because I wanted to understand what are the hot topics in this community and what most people are interested in.\r\n\r\nSome conclusions:\r\n* The 'programming' tag is a bit awkward as it's in the first place but does not say much about the trend of the articles. From what I saw most people couple this tag with another one when submitting new articles in the 'programming' category as you can see [here](https://lobste.rs/t/programming).\r\n* lobste.rs loves 'rust', it's on everyone's lips.\r\n* 'security' and 'hardware' have a considerable advantage from place 5.\r\n* From place 5 downward there is not very much difference between the score of two consecutive positions, the highest difference being 3 between 'databases' and 'performance', between 'performance' and 'historical', and between 'plt' and 'python'.\r\n* There are many interesting tags in the bottom of the list and I don't know why they have such bad scores, for example: 'java', 'lisp', 'formalmethods', 'philosophy', 'unix', etc.\r\n\r\n\r\nThe results are dumped below:  \r\n97 programming  \r\n80 rust  \r\n74 security  \r\n60 hardware  \r\n47 web  \r\n47 linux  \r\n46 ai  \r\n45 practices  \r\n44 go  \r\n43 databases  \r\n40 performance  \r\n38 historical  \r\n37 pdf  \r\n35 javascript  \r\n33 networking  \r\n32 video  \r\n31 plt  \r\n28 python  \r\n27 c++  \r\n26 release  \r\n24 c  \r\n23 compsci  \r\n22 distributed  \r\n20 cryptography  \r\n20 compilers  \r\n18 reversing  \r\n18 devops  \r\n18 ask  \r\n16 openbsd  \r\n16 culture  \r\n15 assembly  \r\n13 testing  \r\n13 games  \r\n12 ruby  \r\n11 zig  \r\n11 show  \r\n11 nix  \r\n10 vcs  \r\n10 education  \r\n9 osdev  \r\n9 math  \r\n9 lua  \r\n9 graphics  \r\n8 privacy  \r\n8 mac  \r\n8 haskell  \r\n8 debugging  \r\n8 browsers  \r\n8 art  \r\n8 api  \r\n7 windows  \r\n7 nodejs  \r\n7 design  \r\n6 unix  \r\n6 rant  \r\n6 philosophy  \r\n6 mobile  \r\n6 ios  \r\n6 formalmethods  \r\n6 email  \r\n5 law  \r\n5 freebsd  \r\n5 erlang  \r\n5 emacs  \r\n5 book  \r\n5 a11y  \r\n4 wasm  \r\n4 science  \r\n4 scaling  \r\n4 elixir  \r\n4 d  \r\n4 css  \r\n4 android  \r\n3 vim  \r\n3 lisp  \r\n3 java  \r\n3 clojure  \r\n3 audio  \r\n2 visualization  \r\n2 virtualization  \r\n2 swift  \r\n2 satire  \r\n2 perl  \r\n2 netbsd  \r\n2 ml  \r\n2 event  \r\n2 elm  \r\n2 dotnet  \r\n1 slides  \r\n1 scala  \r\n1 person  \r\n1 meta  \r\n1 merkle-trees  \r\n1 kotlin  \r\n1 job  \r\n1 illumos  \r\n1 finance  \r\n1 dragonflybsd","comments_url":"https://lobste.rs/s/ymtrc0/most_popular_lobste_rs_tags_fetched_1","submitter_user":{"username":"lucic71","created_at":"2022-12-03T09:38:05.000-06:00","is_admin":false,"about":"student, engineer and philosopher","is_moderator":false,"karma":58,"avatar_url":"/avatars/lucic71-100.png","invited_by_user":"bsandro"},"tags":["meta"]},{"short_id":"h8wbhs","short_id_url":"https://lobste.rs/s/h8wbhs","created_at":"2023-03-12T03:02:49.000-05:00","title":"GHC 9.6.1 is now available","url":"https://www.haskell.org/ghc/blog/20230310-ghc-9.6.1-released.html","score":18,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h8wbhs/ghc_9_6_1_is_now_available","submitter_user":{"username":"ehamberg","created_at":"2014-08-18T02:47:08.000-05:00","is_admin":false,"about":"https://keybase.io/eh","is_moderator":false,"karma":3638,"avatar_url":"/avatars/ehamberg-100.png","invited_by_user":"oleavr"},"tags":["haskell","release"]},{"short_id":"rk8351","short_id_url":"https://lobste.rs/s/rk8351","created_at":"2023-03-12T01:10:01.000-06:00","title":"Stack Machines and Where To Find Them","url":"https://zdimension.fr/stack-machines-and-where-to-find-them/","score":7,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rk8351/stack_machines_where_find_them","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96011,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["programming"]},{"short_id":"1qeanq","short_id_url":"https://lobste.rs/s/1qeanq","created_at":"2023-03-11T23:30:06.000-06:00","title":"Lecture :pkgsrc - Package management for BSD, illumos, Linux and MacOS","url":"https://chemnitzer.linux-tage.de/2023/de/programm/beitrag/125","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1qeanq/lecture_pkgsrc_package_management_for","submitter_user":{"username":"jaypatelani","created_at":"2020-08-26T22:43:27.000-05:00","is_admin":false,"about":"BSD hobbyist. NetBSD/OS108 user","is_moderator":false,"karma":1049,"avatar_url":"/avatars/jaypatelani-100.png","invited_by_user":"qbit"},"tags":["dragonflybsd","freebsd","illumos","linux","mac","netbsd","openbsd"]},{"short_id":"wswo1k","short_id_url":"https://lobste.rs/s/wswo1k","created_at":"2023-03-11T21:58:40.000-06:00","title":"Macige - CI workflow generator for mobile app development","url":"https://github.com/tramlinehq/macige","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wswo1k/macige_ci_workflow_generator_for_mobile","submitter_user":{"username":"pratul","created_at":"2018-11-29T01:09:02.000-06:00","is_admin":false,"about":"I work on [tramline.app](https://tramline.app). \r\n","is_moderator":false,"karma":17,"avatar_url":"/avatars/pratul-100.png","invited_by_user":"abhin4v"},"tags":["android","devops","ios"]},{"short_id":"kthfvu","short_id_url":"https://lobste.rs/s/kthfvu","created_at":"2023-03-11T21:57:40.000-06:00","title":"A classification of S-boxes generated by Orthogonal Cellular Automata","url":"https://arxiv.org/pdf/2303.05228.pdf","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eMost of the approaches published in the literature to construct S-boxes via Cellular Automata (CA) work by either iterating a finite CA for several time steps, or by a one-shot application of the global rule. The main characteristic that brings together these works is that they employ a single CA rule to define the vectorial Boolean function of the S-box. In this work, we explore a different direction for the design of S-boxes that leverages on Orthogonal CA (OCA), i.e. pairs of CA rules giving rise to orthogonal Latin squares. The motivation stands on the facts that an OCA pair already defines a bijective transformation, and moreover the orthogonality property of the resulting Latin squares ensures a minimum amount of diffusion. We exhaustively enumerate all S-boxes generated by OCA pairs of diameter $4 \\le d \\le 6$, and measure their nonlinearity. Interestingly, we observe that for $d=4$ and $d=5$ all S-boxes are linear, despite the underlying CA local rules being nonlinear. The smallest nonlinear S-boxes emerges for $d=6$, but their nonlinearity is still too low to be used in practice. Nonetheless, we unearth an interesting structure of linear OCA S-boxes, proving that their Linear Components Space (LCS) is itself the image of a linear CA, or equivalently a polynomial code. We finally classify all linear OCA S-boxes in terms of their generator polynomials.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.05228\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Most of the approaches published in the literature to construct S-boxes via Cellular Automata (CA) work by either iterating a finite CA for several time steps, or by a one-shot application of the global rule. The main characteristic that brings together these works is that they employ a single CA rule to define the vectorial Boolean function of the S-box. In this work, we explore a different direction for the design of S-boxes that leverages on Orthogonal CA (OCA), i.e. pairs of CA rules giving rise to orthogonal Latin squares. The motivation stands on the facts that an OCA pair already defines a bijective transformation, and moreover the orthogonality property of the resulting Latin squares ensures a minimum amount of diffusion. We exhaustively enumerate all S-boxes generated by OCA pairs of diameter $4 \\le d \\le 6$, and measure their nonlinearity. Interestingly, we observe that for $d=4$ and $d=5$ all S-boxes are linear, despite the underlying CA local rules being nonlinear. The smallest nonlinear S-boxes emerges for $d=6$, but their nonlinearity is still too low to be used in practice. Nonetheless, we unearth an interesting structure of linear OCA S-boxes, proving that their Linear Components Space (LCS) is itself the image of a linear CA, or equivalently a polynomial code. We finally classify all linear OCA S-boxes in terms of their generator polynomials. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.05228)","comments_url":"https://lobste.rs/s/kthfvu/classification_s_boxes_generated_by","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96011,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["cryptography","pdf"]},{"short_id":"iqhb05","short_id_url":"https://lobste.rs/s/iqhb05","created_at":"2023-03-11T21:56:47.000-06:00","title":"Mark My Words: Dangers of Watermarked Images in ImageNet","url":"https://arxiv.org/pdf/2303.05498.pdf","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe utilization of pre-trained networks, especially those trained on ImageNet, has become a common practice in Computer Vision. However, prior research has indicated that a significant number of images in the ImageNet dataset contain watermarks, making pre-trained networks susceptible to learning artifacts such as watermark patterns within their latent spaces. In this paper, we aim to assess the extent to which popular pre-trained architectures display such behavior and to determine which classes are most affected. Additionally, we examine the impact of watermarks on the extracted features. Contrary to the popular belief that the Chinese logographic watermarks impact the “carton” class only, our analysis reveals that a variety of ImageNet classes, such as “monitor”, “broom”, “apron” and “safe” rely on spurious correlations. Finally, we propose a simple approach to mitigate this issue in fine-tuned networks by ignoring the encodings from the feature-extractor layer of ImageNet pre-trained networks that are most susceptible to watermark imprints.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.05498\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The utilization of pre-trained networks, especially those trained on ImageNet, has become a common practice in Computer Vision. However, prior research has indicated that a significant number of images in the ImageNet dataset contain watermarks, making pre-trained networks susceptible to learning artifacts such as watermark patterns within their latent spaces. In this paper, we aim to assess the extent to which popular pre-trained architectures display such behavior and to determine which classes are most affected. Additionally, we examine the impact of watermarks on the extracted features. Contrary to the popular belief that the Chinese logographic watermarks impact the \"carton\" class only, our analysis reveals that a variety of ImageNet classes, such as \"monitor\", \"broom\", \"apron\" and \"safe\" rely on spurious correlations. Finally, we propose a simple approach to mitigate this issue in fine-tuned networks by ignoring the encodings from the feature-extractor layer of ImageNet pre-trained networks that are most susceptible to watermark imprints. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.05498)","comments_url":"https://lobste.rs/s/iqhb05/mark_my_words_dangers_watermarked_images","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96011,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["ai","pdf"]},{"short_id":"0grcqx","short_id_url":"https://lobste.rs/s/0grcqx","created_at":"2023-03-11T21:55:00.000-06:00","title":"SALSA PICANTE: a machine learning attack on LWE with binary secrets","url":"https://eprint.iacr.org/2023/340.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe Learning With Errors (LWE) problem is one of the major hard problems in post-quantum cryptography. For example, 1) the only Key Exchange Mechanism KEM standardized by NIST [14] is based on LWE; and 2) current publicly available Homomorphic Encryption (HE) libraries are based on LWE. NIST KEM schemes use random secrets, but homomorphic encryption schemes use binary or ternary secrets, for efficiency reasons. In particular, sparse binary secrets have been proposed, but not standardized [2], for HE.\u003c/p\u003e\n\u003cp\u003ePrior work SALSA [49] demonstrated a new machine learning attack on sparse binary secrets for the LWE problem in small dimensions (up to n = 128) and low Hamming weights (up to h = 4). However, this attack assumed access to millions of LWE samples, and was not scaled to higher Hamming weights or dimensions.\u003c/p\u003e\n\u003cp\u003eOur attack, PICANTE, reduces the number of samples required to just m = 4n samples. Moreover, it can recover secrets with much larger dimensions (up to 350) and Hamming weights (roughly n/10, or h = 33 for n = 300). To achieve this, we introduce a preprocessing step which allows us to generate the training data from a linear number of samples and changes the distribution of the training data to improve transformer training. We also improve the distinguisher/secret recovery methods of SALSA and introduce a novel cross-attention recovery mechanism which allows us to read-off the secret directly from the trained models.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/340\" rel=\"ugc\"\u003eIACR\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The Learning With Errors (LWE) problem is one of the major hard problems in post-quantum cryptography. For example, 1) the only Key Exchange Mechanism KEM standardized by NIST [14] is based on LWE; and 2) current publicly available Homomorphic Encryption (HE) libraries are based on LWE. NIST KEM schemes use random secrets, but homomorphic encryption schemes use binary or ternary secrets, for efficiency reasons. In particular, sparse binary secrets have been proposed, but not standardized [2], for HE.\r\n\r\n  Prior work SALSA [49] demonstrated a new machine learning attack on sparse binary secrets for the LWE problem in small dimensions (up to n = 128) and low Hamming weights (up to h = 4). However, this attack assumed access to millions of LWE samples, and was not scaled to higher Hamming weights or dimensions.\r\n\r\n  Our attack, PICANTE, reduces the number of samples required to just m = 4n samples. Moreover, it can recover secrets with much larger dimensions (up to 350) and Hamming weights (roughly n/10, or h = 33 for n = 300). To achieve this, we introduce a preprocessing step which allows us to generate the training data from a linear number of samples and changes the distribution of the training data to improve transformer training. We also improve the distinguisher/secret recovery methods of SALSA and introduce a novel cross-attention recovery mechanism which allows us to read-off the secret directly from the trained models.\r\n\r\n[IACR](https://eprint.iacr.org/2023/340)","comments_url":"https://lobste.rs/s/0grcqx/salsa_picante_machine_learning_attack_on","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96011,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["ai","cryptography","pdf"]}]