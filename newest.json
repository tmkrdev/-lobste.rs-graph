[{"short_id":"2ttsfb","short_id_url":"https://lobste.rs/s/2ttsfb","created_at":"2023-04-08T15:34:10.000-05:00","title":"a 1.5GB string","url":"https://blog.backslasher.net/1.5GB-string.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2ttsfb/1_5gb_string","submitter_user":{"username":"gerikson","created_at":"2017-01-13T03:16:10.000-06:00","is_admin":false,"about":"https://gerikson.com/hnlo/\r\n\r\n@gerikson@mastodon.social\r\n","is_moderator":false,"karma":14653,"avatar_url":"/avatars/gerikson-100.png","invited_by_user":"varjag","github_username":"gustafe"},"tags":["java","performance"]},{"short_id":"mslnrz","short_id_url":"https://lobste.rs/s/mslnrz","created_at":"2023-04-08T15:13:36.000-05:00","title":"Modular Errors in Rust","url":"https://sabrinajewson.org/blog/errors","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mslnrz/modular_errors_rust","submitter_user":{"username":"msfjarvis","created_at":"2020-04-24T11:41:56.000-05:00","is_admin":false,"about":"Android and Kotlin developer\r\n","is_moderator":false,"karma":990,"avatar_url":"/avatars/msfjarvis-100.png","invited_by_user":"Amolith","github_username":"msfjarvis","twitter_username":"msfjarvis"},"tags":["rust"]},{"short_id":"qqee9r","short_id_url":"https://lobste.rs/s/qqee9r","created_at":"2023-04-08T14:10:14.000-05:00","title":"Reverse-engineering the division microcode in the Intel 8086 processor","url":"http://www.righto.com/2023/04/reverse-engineering-8086-divide-microcode.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qqee9r/reverse_engineering_division_microcode","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96540,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","historical","reversing"]},{"short_id":"l99vc3","short_id_url":"https://lobste.rs/s/l99vc3","created_at":"2023-04-08T13:20:20.000-05:00","title":"Testing Allocation Failures","url":"http://www.inspirel.com/articles/Testing_Allocation_Failures.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/l99vc3/testing_allocation_failures","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":20136,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++","testing"]},{"short_id":"rwkgso","short_id_url":"https://lobste.rs/s/rwkgso","created_at":"2023-04-08T12:46:13.000-05:00","title":"The Scoped Task trilemma","url":"https://without.boats/blog/the-scoped-task-trilemma/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rwkgso/scoped_task_trilemma","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":9258,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["plt","rust"]},{"short_id":"btmrvr","short_id_url":"https://lobste.rs/s/btmrvr","created_at":"2023-04-08T09:43:32.000-05:00","title":"Top 5 Fastest Programming Languages: Rust, C++, Swift, Java, and 90 more compared","url":"https://youtu.be/pSvSXBorw4A","score":9,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/btmrvr/top_5_fastest_programming_languages_rust","submitter_user":{"username":"cvoxel","created_at":"2016-07-22T08:13:56.000-05:00","is_admin":false,"about":"http://charlbotha.com/","is_moderator":false,"karma":94,"avatar_url":"/avatars/cvoxel-100.png","invited_by_user":"mjturner"},"tags":["c","c++","java","programming","rust","video","zig"]},{"short_id":"qle6hr","short_id_url":"https://lobste.rs/s/qle6hr","created_at":"2023-04-08T08:39:54.000-05:00","title":"Watchgha: Watch the progress of GitHub Actions on the command line","url":"https://nedbatchelder.com/blog/202303/watchgha.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qle6hr/watchgha_watch_progress_github_actions","submitter_user":{"username":"adaszko","created_at":"2015-02-03T15:01:47.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":1316,"avatar_url":"/avatars/adaszko-100.png","invited_by_user":"bobbywilson0"},"tags":["devops"]},{"short_id":"eybu4d","short_id_url":"https://lobste.rs/s/eybu4d","created_at":"2023-04-08T08:38:17.000-05:00","title":"PEP 711 ‚Äì PyBI: a standard format for distributing Python Binaries","url":"https://peps.python.org/pep-0711/","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eybu4d/pep_711_pybi_standard_format_for","submitter_user":{"username":"adaszko","created_at":"2015-02-03T15:01:47.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":1316,"avatar_url":"/avatars/adaszko-100.png","invited_by_user":"bobbywilson0"},"tags":["python"]},{"short_id":"bnuwyr","short_id_url":"https://lobste.rs/s/bnuwyr","created_at":"2023-04-08T08:25:25.000-05:00","title":"User-space shadow stacks (maybe) for Linux 6.4","url":"https://lwn.net/Articles/926649/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bnuwyr/user_space_shadow_stacks_maybe_for_linux_6","submitter_user":{"username":"jmillikin","created_at":"2021-07-22T09:39:26.000-05:00","is_admin":false,"about":"Currently semi-retired; formerly at Google (2011-2017) and Stripe (2017-2022)","is_moderator":false,"karma":1241,"avatar_url":"/avatars/jmillikin-100.png","invited_by_user":"pushcx"},"tags":["linux","security"]},{"short_id":"0ufevh","short_id_url":"https://lobste.rs/s/0ufevh","created_at":"2023-04-08T07:29:21.000-05:00","title":"Solving a machine-learning mystery","url":"https://news.mit.edu/2023/large-language-models-in-context-learning-0207","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0ufevh/solving_machine_learning_mystery","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5554,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["ai"]},{"short_id":"tnieit","short_id_url":"https://lobste.rs/s/tnieit","created_at":"2023-04-08T07:16:07.000-05:00","title":"Go 1.21 will (likely) have a static toolchain on Linux","url":"https://utcc.utoronto.ca/~cks/space/blog/programming/Go121LinuxStaticToolchain","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tnieit/go_1_21_will_likely_have_static_toolchain","submitter_user":{"username":"jmillikin","created_at":"2021-07-22T09:39:26.000-05:00","is_admin":false,"about":"Currently semi-retired; formerly at Google (2011-2017) and Stripe (2017-2022)","is_moderator":false,"karma":1241,"avatar_url":"/avatars/jmillikin-100.png","invited_by_user":"pushcx"},"tags":["go","linux"]},{"short_id":"9kpy8g","short_id_url":"https://lobste.rs/s/9kpy8g","created_at":"2023-04-08T06:46:59.000-05:00","title":"How to do distributed locking (2016)","url":"https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9kpy8g/how_do_distributed_locking_2016","submitter_user":{"username":"lcapaldo","created_at":"2014-02-25T10:56:12.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":533,"avatar_url":"/avatars/lcapaldo-100.png","invited_by_user":"ckolderup"},"tags":["distributed"]},{"short_id":"mflk1a","short_id_url":"https://lobste.rs/s/mflk1a","created_at":"2023-04-08T04:51:34.000-05:00","title":"The Parchment Path?","url":"https://queue.acm.org/detail.cfm?id=3587482","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mflk1a/parchment_path","submitter_user":{"username":"ciprian_craciun","created_at":"2022-02-14T13:47:43.000-06:00","is_admin":false,"about":"IT enthusiast, from programming to operating systems, from networking to cryptography, from cloud to hardware, from Erlang to Java.","is_moderator":false,"karma":924,"avatar_url":"/avatars/ciprian_craciun-100.png","invited_by_user":"syn-ack"},"tags":["education"]},{"short_id":"pvrcob","short_id_url":"https://lobste.rs/s/pvrcob","created_at":"2023-04-08T04:09:57.000-05:00","title":"On Endings: Why \u0026 How We Retired Elm at Culture Amp","url":"https://kevinyank.com/posts/on-endings-why-how-we-retired-elm-at-culture-amp/","score":40,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pvrcob/on_endings_why_how_we_retired_elm_at","submitter_user":{"username":"wezm","created_at":"2017-03-13T19:52:34.000-05:00","is_admin":false,"about":"Programmer originally from Melbourne, Australia, now living in the Sunshine Coast, Queensland. I'm interested in Rust and operating systems. Currently running Arch Linux on the desktop, Alpine Linux on the server. BSD observer, mechanical keyboard hoarder. Writes at [wezm.net](https://www.wezm.net/) and [bitcannon.net](https://bitcannon.net/).","is_moderator":false,"karma":3442,"avatar_url":"/avatars/wezm-100.png","invited_by_user":"alfiedotwtf","github_username":"wezm","twitter_username":"wezm"},"tags":["elm"]},{"short_id":"jaeyzk","short_id_url":"https://lobste.rs/s/jaeyzk","created_at":"2023-04-08T03:00:26.000-05:00","title":"bytebeat-rs: bytebeat written in rust","url":"https://github.com/chaosprint/bytebeat-rs","score":9,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jaeyzk/bytebeat_rs_bytebeat_written_rust","submitter_user":{"username":"chaosprint","created_at":"2022-06-09T14:52:34.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":34,"avatar_url":"/avatars/chaosprint-100.png","invited_by_user":"df"},"tags":["art","audio","c","plt","rust"]},{"short_id":"n95ptb","short_id_url":"https://lobste.rs/s/n95ptb","created_at":"2023-04-08T01:26:17.000-05:00","title":"WebAssembly tail calls","url":"https://v8.dev/blog/wasm-tail-call","score":15,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n95ptb/webassembly_tail_calls","submitter_user":{"username":"jado","created_at":"2019-08-06T03:14:15.000-05:00","is_admin":false,"about":"Software Engineer, CompSci Grad Student (researching ML)\r\n\r\nloves plt, compilers, ml, rust\r\n\r\n[Website](https://jadon.io) | [GitHub](https://github.com/phase) | [LinkedIn](https://www.linkedin.com/in/jado/)","is_moderator":false,"karma":1379,"avatar_url":"/avatars/jado-100.png","invited_by_user":"BruceM","github_username":"phase"},"tags":["compilers","performance","wasm"]},{"short_id":"kljwfv","short_id_url":"https://lobste.rs/s/kljwfv","created_at":"2023-04-07T17:46:05.000-05:00","title":"Release Nvim 0.9.0","url":"https://github.com/neovim/neovim/releases/tag/v0.9.0","score":27,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kljwfv/release_nvim_0_9_0","submitter_user":{"username":"cjoly","created_at":"2021-09-07T11:35:23.000-05:00","is_admin":false,"about":"###### Mastodon:\r\nhttps://fosstodon.org/@cjoly\r\n\r\nI [blog](https://cj.rs/blog?ref=lobsters-profile) mainly about [performance](https://cj.rs/tags/performance/?ref=lobsters-profile) and [tools I use](https://cj.rs/blog/my-setup?ref=lobsters-profile). You can find me in various [parts](https://cj.rs/contact/?ref=lobsters-profile#find-me-on) of the internet.\r\n\r\n------------------\r\n\r\nThis is an OpenPGP proof that connects my OpenPGP key to this Lobste.rs account. For details check out https://docs.keyoxide.org/advanced/openpgp-proofs/\r\n\r\n[Verifying my OpenPGP key: openpgp4fpr:bcc07bce9dd35b51c5b473f92ca0c9adb9747d20]\r\n\r\n","is_moderator":false,"karma":351,"avatar_url":"/avatars/cjoly-100.png","invited_by_user":"arh","github_username":"cljoly"},"tags":["release","vim"]},{"short_id":"9hiplp","short_id_url":"https://lobste.rs/s/9hiplp","created_at":"2023-04-07T16:36:32.000-05:00","title":"Stay mainline","url":"https://brandur.org/fragments/stay-mainline","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9hiplp/stay_mainline","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":9258,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["practices"]},{"short_id":"sg9b4g","short_id_url":"https://lobste.rs/s/sg9b4g","created_at":"2023-04-07T15:54:34.000-05:00","title":"LLVM: The middle-end optimization pipeline","url":"https://www.npopov.com/2023/04/07/LLVM-middle-end-pipeline.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sg9b4g/llvm_middle_end_optimization_pipeline","submitter_user":{"username":"fcambus","created_at":"2012-09-10T08:43:10.000-05:00","is_admin":false,"about":"System and Network engineer.\r\n\r\nInterests: ANSI Art, DNS, NetBSD, OpenBSD, Security, and Text Mode.\r\n\r\nSite: https://www.cambus.net","is_moderator":false,"karma":3902,"avatar_url":"/avatars/fcambus-100.png","invited_by_user":"gmcabrita","github_username":"fcambus","twitter_username":"fcambus"},"tags":["compilers"]},{"short_id":"aux2vz","short_id_url":"https://lobste.rs/s/aux2vz","created_at":"2023-04-07T15:34:00.000-05:00","title":"Modern cars, touch interfaces - Highway to Hell","url":"https://www.dedoimedo.com/life/cars-touch.html","score":6,"flags":1,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aux2vz/modern_cars_touch_interfaces_highway","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":20136,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["a11y","design","hardware"]},{"short_id":"hy8xw1","short_id_url":"https://lobste.rs/s/hy8xw1","created_at":"2023-04-07T14:53:06.000-05:00","title":"What code constructs express team processes or code transitions?","url":"","score":12,"flags":0,"comment_count":1,"description":"\u003cp\u003eAny snapshot of a codebase likely contains code-things at different stages of life. This becomes inevitable when the codebase is huge, or it‚Äôs deployed in many places, so changing everything in one go is intractable.\u003c/p\u003e\n\u003cp\u003eSometimes, code itself can express or enforce part of the path of transition. What libraries and language features do you know that let you express that code is new, or old, or changing, and provide the right behaviour to go with it? Examples and discussion are equally welcome.\u003c/p\u003e\n\u003cp\u003eSome examples to get you going:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRuby‚Äôs \u003ca href=\"https://github.com/github/scientist\" rel=\"ugc\"\u003eScientist\u003c/a\u003e gem lets you try out a new function side-by-side with using the old function, and record differences in timing and behaviour.\u003c/li\u003e\n\u003cli\u003eSimon H√∏rup Eskildsen‚Äôs article on \u003ca href=\"https://sirupsen.com/shitlists\" rel=\"ugc\"\u003eShitlist Driven Development\u003c/a\u003e gives a deprecated function a whitelist, so any new callers can be headed off at the pass.\u003c/li\u003e\n\u003cli\u003eStephan Boyer‚Äôs \u003ca href=\"Typical\"\u003ehttps://github.com/stepchowfun/typical\u003c/a\u003e: implements a field type \u003ccode\u003easymmetric\u003c/code\u003e that compiles to ‚Äòrequired‚Äô for producers, but ‚Äòoptional‚Äô for consumers. This intermediate stage lets you safely transition a field between ‚Äòoptional everywhere‚Äô to ‚Äòrequired everywhere‚Äô, without the careful staged rollouts that manual asymmetry requires.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://nitter.net/evinism/status/1338684345603657730#m\" rel=\"ugc\"\u003ethis Twitter thread on process in code\u003c/a\u003e between @evinism and \u003ca href=\"https://lobste.rs/u/hwayne\" rel=\"ugc\"\u003e@hwayne\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"Any snapshot of a codebase likely contains code-things at different stages of life. This becomes inevitable when the codebase is huge, or it's deployed in many places, so changing everything in one go is intractable.\r\n\r\nSometimes, code itself can express or enforce part of the path of transition. What libraries and language features do you know that let you express that code is new, or old, or changing, and provide the right behaviour to go with it? Examples and discussion are equally welcome.\r\n\r\nSome examples to get you going:\r\n- Ruby's [Scientist](https://github.com/github/scientist) gem lets you try out a new function side-by-side with using the old function, and record differences in timing and behaviour.\r\n- Simon H√∏rup Eskildsen's article on [Shitlist Driven Development](https://sirupsen.com/shitlists) gives a deprecated function a whitelist, so any new callers can be headed off at the pass.\r\n- Stephan Boyer's [https://github.com/stepchowfun/typical](Typical): implements a field type `asymmetric` that compiles to 'required' for producers, but 'optional' for consumers. This intermediate stage lets you safely transition a field between 'optional everywhere' to 'required everywhere', without the careful staged rollouts that manual asymmetry requires.\r\n- [this Twitter thread on process in code](https://nitter.net/evinism/status/1338684345603657730#m) between @evinism and @hwayne","comments_url":"https://lobste.rs/s/hy8xw1/what_code_constructs_express_team","submitter_user":{"username":"Sietsebb","created_at":"2017-01-03T08:32:51.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":3097,"avatar_url":"/avatars/Sietsebb-100.png","invited_by_user":"asthasr"},"tags":["ask","plt","practices"]},{"short_id":"eofxrg","short_id_url":"https://lobste.rs/s/eofxrg","created_at":"2023-04-07T14:34:38.000-05:00","title":"jank development update - Optimizing a ray tracer","url":"https://jank-lang.org/blog/2023-04-07-ray-tracing/","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eofxrg/jank_development_update_optimizing_ray","submitter_user":{"username":"jeaye","created_at":"2022-08-11T18:49:43.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":15,"avatar_url":"/avatars/jeaye-100.png","invited_by_user":"technomancy"},"tags":["clojure","compilers"]},{"short_id":"bhoj24","short_id_url":"https://lobste.rs/s/bhoj24","created_at":"2023-04-07T14:22:12.000-05:00","title":"Gephi Lite","url":"https://gephi.org/gephi-lite/","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bhoj24/gephi_lite","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":26431,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne","twitter_username":"Hillelogram"},"tags":["math","visualization","web"]},{"short_id":"llswt8","short_id_url":"https://lobste.rs/s/llswt8","created_at":"2023-04-07T14:19:38.000-05:00","title":"Database ‚Äúsharding‚Äù came from UO?","url":"https://www.raphkoster.com/2009/01/08/database-sharding-came-from-uo/","score":19,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/llswt8/database_sharding_came_from_uo","submitter_user":{"username":"fs111","created_at":"2017-01-04T07:51:28.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":5081,"avatar_url":"/avatars/fs111-100.png","invited_by_user":"drdoom","github_username":"fs111","twitter_username":"fs111"},"tags":["databases","historical"]},{"short_id":"2vtqgu","short_id_url":"https://lobste.rs/s/2vtqgu","created_at":"2023-04-07T14:12:27.000-05:00","title":"Building a database in the 2020s","url":"https://me.0xffff.me/build-database-in-2020s.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2vtqgu/building_database_2020s","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"eatonphil.com","is_moderator":false,"karma":4710,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"tags":["databases"]}]