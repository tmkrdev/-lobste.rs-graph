[{"short_id":"shsrhw","short_id_url":"https://lobste.rs/s/shsrhw","created_at":"2024-09-30T02:28:12.000-05:00","title":"Using undocumented Apple AI/ML instructions to get the average color of an image","url":"https://wunkolo.github.io/post/2024/09/vecint-average-color/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/shsrhw/using_undocumented_apple_ai_ml","submitter_user":"tumdum","user_is_author":false,"tags":["ai","graphics","performance"]},{"short_id":"rrs30d","short_id_url":"https://lobste.rs/s/rrs30d","created_at":"2024-09-30T02:19:18.000-05:00","title":"Any interesting tech blogs outside the usual software/web dev circle?","url":"","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eI follow many great personal tech blogs but I feel the overall theme is too monochrome at time. It is relatively focused on traditional software/web development, since that’s my circle. I feel there are entire categories I’m missing on and would like to mix things up in my feed.\u003c/p\u003e\n\u003cp\u003eI still follow some security researchers, SREs, and maybe some ux designers among others but even though the titles might be different, they’re still working in the same industry.\u003c/p\u003e\n\u003cp\u003eWhat I’m looking for is personal blogs that diverge a bit from the theme I mentioned:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSWE that works at a different industry or specialized in some niche like compilers or graphics\u003c/li\u003e\n\u003cli\u003eComputer scientist working on interesting research\u003c/li\u003e\n\u003cli\u003eIC design\u003c/li\u003e\n\u003cli\u003eEmbedded and Hardware\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI doesn’t have to be purely technical blog. In fact I’d prefer blog that are mixed with personal since technical stuff usually surface elsewhere anyway. I don’t want to put a lot of constraints or expectation since I’m trying to expand my feed surface and I don’t know what’s out there that I’m missing on.\u003c/p\u003e\n","description_plain":"I follow many great personal tech blogs but I feel the overall theme is too monochrome at time. It is relatively focused on traditional software/web development, since that's my circle. I feel there are entire categories I'm missing on and would like to mix things up in my feed.\r\n\r\nI still follow some security researchers, SREs, and maybe some ux designers among others but even though the titles might be different, they're still working in the same industry.\r\n\r\nWhat I'm looking for is personal blogs that diverge a bit from the theme I mentioned:\r\n- SWE that works at a different industry or specialized in some niche like compilers or graphics\r\n- Computer scientist working on interesting research\r\n- IC design\r\n- Embedded and Hardware\r\n\r\nI doesn't have to be purely technical blog. In fact I'd prefer blog that are mixed with personal since technical stuff usually surface elsewhere anyway. I don't want to put a lot of constraints or expectation since I'm trying to expand my feed surface and I don't know what's out there that I'm missing on.","comments_url":"https://lobste.rs/s/rrs30d/any_interesting_tech_blogs_outside_usual","submitter_user":"imadij","user_is_author":true,"tags":["ask","culture"]},{"short_id":"qcqcjp","short_id_url":"https://lobste.rs/s/qcqcjp","created_at":"2024-09-30T01:44:52.000-05:00","title":"We Have a Package for You! A Comprehensive Analysis of Package Hallucinations by Code Generating LLMs","url":"https://arxiv.org/abs/2406.10279","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe reliance of popular programming languages such as Python and JavaScript on centralized package repositories and open-source software, combined with the emergence of code-generating Large Language Models (LLMs), has created a new type of threat to the software supply chain: package hallucinations. These hallucinations, which arise from fact-conflicting errors when generating code using LLMs, represent a novel form of package confusion attack that poses a critical threat to the integrity of the software supply chain. This paper conducts a rigorous and comprehensive evaluation of package hallucinations across different programming languages, settings, and parameters, exploring how a diverse set of models and configurations affect the likelihood of generating erroneous package recommendations and identifying the root causes of this phenomenon. Using 16 popular LLMs for code generation and two unique prompt datasets, we generate 576,000 code samples in two programming languages that we analyze for package hallucinations. Our findings reveal that that the average percentage of hallucinated packages is at least 5.2% for commercial models and 21.7% for open-source models, including a staggering 205,474 unique examples of hallucinated package names, further underscoring the severity and pervasiveness of this threat. To overcome this problem, we implement several hallucination mitigation strategies and show that they are able to significantly reduce the number of package hallucinations while maintaining code quality. Our experiments and findings highlight package hallucinations as a persistent and systemic phenomenon while using state-of-the-art LLMs for code generation, and a significant challenge which deserves the research community’s urgent attention.\u003c/p\u003e\n","description_plain":"The reliance of popular programming languages such as Python and JavaScript on centralized package repositories and open-source software, combined with the emergence of code-generating Large Language Models (LLMs), has created a new type of threat to the software supply chain: package hallucinations. These hallucinations, which arise from fact-conflicting errors when generating code using LLMs, represent a novel form of package confusion attack that poses a critical threat to the integrity of the software supply chain. This paper conducts a rigorous and comprehensive evaluation of package hallucinations across different programming languages, settings, and parameters, exploring how a diverse set of models and configurations affect the likelihood of generating erroneous package recommendations and identifying the root causes of this phenomenon. Using 16 popular LLMs for code generation and two unique prompt datasets, we generate 576,000 code samples in two programming languages that we analyze for package hallucinations. Our findings reveal that that the average percentage of hallucinated packages is at least 5.2% for commercial models and 21.7% for open-source models, including a staggering 205,474 unique examples of hallucinated package names, further underscoring the severity and pervasiveness of this threat. To overcome this problem, we implement several hallucination mitigation strategies and show that they are able to significantly reduce the number of package hallucinations while maintaining code quality. Our experiments and findings highlight package hallucinations as a persistent and systemic phenomenon while using state-of-the-art LLMs for code generation, and a significant challenge which deserves the research community's urgent attention.","comments_url":"https://lobste.rs/s/qcqcjp/we_have_package_for_you_comprehensive","submitter_user":"kivikakk","user_is_author":false,"tags":["ai","pdf"]},{"short_id":"mielvi","short_id_url":"https://lobste.rs/s/mielvi","created_at":"2024-09-30T01:07:31.000-05:00","title":"go-sqlite3: Go bindings to SQLite using wazero","url":"https://github.com/ncruces/go-sqlite3","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mielvi/go_sqlite3_go_bindings_sqlite_using","submitter_user":"edoput","user_is_author":false,"tags":["databases","go","wasm"]},{"short_id":"bla7ts","short_id_url":"https://lobste.rs/s/bla7ts","created_at":"2024-09-29T20:29:54.000-05:00","title":"Varlink Now","url":"https://media.ccc.de/v/all-systems-go-2024-276-varlink-now-","score":4,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bla7ts/varlink_now","submitter_user":"janus","user_is_author":false,"tags":["systemd","video"]},{"short_id":"7chd37","short_id_url":"https://lobste.rs/s/7chd37","created_at":"2024-09-29T19:57:02.000-05:00","title":"Type-erased generic functions for C: A modest non-proposal","url":"https://duriansoftware.com/joe/type-erased-generic-functions-for-c:-a-modest-non-proposal","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7chd37/type_erased_generic_functions_for_c","submitter_user":"lorddimwit","user_is_author":false,"tags":["c","plt"]},{"short_id":"n0vg9z","short_id_url":"https://lobste.rs/s/n0vg9z","created_at":"2024-09-29T19:38:56.000-05:00","title":"On leaving my last job (leaving Apple)","url":"https://typesanitizer.com/blog/leaving-apple.html","score":32,"flags":2,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n0vg9z/on_leaving_my_last_job_leaving_apple","submitter_user":"Jackevansevo","user_is_author":false,"tags":["swift"]},{"short_id":"1kfzss","short_id_url":"https://lobste.rs/s/1kfzss","created_at":"2024-09-29T19:13:47.000-05:00","title":"Renderling Devlog, Implementing Frustum Culling using Rust-GPU","url":"https://renderling.xyz/devlog/index.html#sat_sep_28_2024","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1kfzss/renderling_devlog_implementing_frustum","submitter_user":"schell","user_is_author":true,"tags":["graphics","rust"]},{"short_id":"h4ij6z","short_id_url":"https://lobste.rs/s/h4ij6z","created_at":"2024-09-29T19:10:59.000-05:00","title":"Use of Prolog for developing a new programming language (1992)","url":"https://citeseerx.ist.psu.edu/document?repid=rep1\u0026type=pdf\u0026doi=5dbee7f876ccb6331d1fb4dcdc7f7a4744801804","score":7,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h4ij6z/use_prolog_for_developing_new","submitter_user":"surprisetalk","user_is_author":false,"tags":["pdf","plt"]},{"short_id":"91jmdx","short_id_url":"https://lobste.rs/s/91jmdx","created_at":"2024-09-29T17:16:47.000-05:00","title":"Prep: Golang comptime. Pure blasphemy","url":"https://github.com/pijng/prep","score":19,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/91jmdx/prep_golang_comptime_pure_blasphemy","submitter_user":"gamache","user_is_author":false,"tags":["go","zig"]},{"short_id":"cj0iwx","short_id_url":"https://lobste.rs/s/cj0iwx","created_at":"2024-09-29T15:03:30.000-05:00","title":"What brings an upgrade to GCC 14 from GCC 13?","url":"https://www.meetingcpp.com/blog/items/What-brings-an-upgrade-to-GCC-14-from-GCC-13-.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cj0iwx/what_brings_upgrade_gcc_14_from_gcc_13","submitter_user":"raymii","user_is_author":false,"tags":["c","c++"]},{"short_id":"sbti5w","short_id_url":"https://lobste.rs/s/sbti5w","created_at":"2024-09-29T15:02:41.000-05:00","title":"std::initializer_list in C++  - Caveats and Improvements","url":"https://www.cppstories.com/2023/initializer_list_improvements/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sbti5w/std_initializer_list_c_caveats","submitter_user":"raymii","user_is_author":false,"tags":["c++"]},{"short_id":"w6dqph","short_id_url":"https://lobste.rs/s/w6dqph","created_at":"2024-09-29T14:35:48.000-05:00","title":"Build a serverless ACID database with this one neat trick (atomic PutIfAbsent)","url":"https://notes.eatonphil.com/2024-09-29-build-a-serverless-acid-database-with-this-one-neat-trick.html","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/w6dqph/build_serverless_acid_database_with_this","submitter_user":"eatonphil","user_is_author":true,"tags":["databases"]},{"short_id":"4xzxqk","short_id_url":"https://lobste.rs/s/4xzxqk","created_at":"2024-09-29T14:02:42.000-05:00","title":"Don’t believe the hype: AGI is far from inevitable","url":"https://www.ru.nl/en/research/research-news/dont-believe-the-hype-agi-is-far-from-inevitable","score":26,"flags":4,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4xzxqk/don_t_believe_hype_agi_is_far_from","submitter_user":"mpweiher","user_is_author":false,"tags":["ai"]},{"short_id":"sz5qjv","short_id_url":"https://lobste.rs/s/sz5qjv","created_at":"2024-09-29T14:01:24.000-05:00","title":"bpfsnake: snake in bpftrace","url":"https://github.com/amiremohamadi/bpfsnake","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sz5qjv/bpfsnake_snake_bpftrace","submitter_user":"df","user_is_author":false,"tags":["art","linux"]},{"short_id":"wxlsdn","short_id_url":"https://lobste.rs/s/wxlsdn","created_at":"2024-09-29T10:23:19.000-05:00","title":"Building a robust frontend using progressive enhancement","url":"https://www.gov.uk/service-manual/technology/using-progressive-enhancement","score":65,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wxlsdn/building_robust_frontend_using","submitter_user":"pushcx","user_is_author":false,"tags":["web"]},{"short_id":"su9ynw","short_id_url":"https://lobste.rs/s/su9ynw","created_at":"2024-09-29T08:36:13.000-05:00","title":"Overbooking - how providers divide up the bandwidth","url":"https://blog.init7.net/en/overbooking-how-providers-divide-up-the-bandwidth/","score":3,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/su9ynw/overbooking_how_providers_divide_up","submitter_user":"freddyb","user_is_author":false,"tags":["networking"]},{"short_id":"fquuwq","short_id_url":"https://lobste.rs/s/fquuwq","created_at":"2024-09-29T06:37:46.000-05:00","title":"The Public Domain Problem","url":"https://dpk.land/pubdmn.txt","score":22,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fquuwq/public_domain_problem","submitter_user":"dpk","user_is_author":true,"tags":["law","practices"]},{"short_id":"haxs7o","short_id_url":"https://lobste.rs/s/haxs7o","created_at":"2024-09-29T05:46:24.000-05:00","title":"All Systems Go! 2024","url":"https://media.ccc.de/c/asg2024","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/haxs7o/all_systems_go_2024","submitter_user":"Foxboron","user_is_author":false,"tags":["event","video"]},{"short_id":"xhskrk","short_id_url":"https://lobste.rs/s/xhskrk","created_at":"2024-09-29T03:36:18.000-05:00","title":"Brackets are awesome, don’t use them","url":"https://www.sebastiansylvan.com/post/brackets-are-awesome-dont-use-them/","score":15,"flags":0,"comment_count":19,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xhskrk/brackets_are_awesome_don_t_use_them","submitter_user":"bitfield","user_is_author":false,"tags":["plt"]},{"short_id":"zhtrkd","short_id_url":"https://lobste.rs/s/zhtrkd","created_at":"2024-09-29T00:04:11.000-05:00","title":"Sitina1 Open-source Camera","url":"https://gitlab.com/zephray/sitina1","score":33,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zhtrkd/sitina1_open_source_camera","submitter_user":"df","user_is_author":false,"tags":["art","hardware"]},{"short_id":"c6lblp","short_id_url":"https://lobste.rs/s/c6lblp","created_at":"2024-09-28T22:47:01.000-05:00","title":"C8C: A chip8 compiler, assembler, and virtual machine","url":"https://glouw.com/2018/03/05/C8C.html","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/c6lblp/c8c_chip8_compiler_assembler_virtual","submitter_user":"technetium","user_is_author":false,"tags":["plt"]},{"short_id":"v394wb","short_id_url":"https://lobste.rs/s/v394wb","created_at":"2024-09-28T22:29:46.000-05:00","title":"Dynamic Type on the Web","url":"https://furbo.org/2024/07/04/dynamic-type-on-the-web/","score":4,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/v394wb/dynamic_type_on_web","submitter_user":"kevinc","user_is_author":false,"tags":["css"]},{"short_id":"2j1cdt","short_id_url":"https://lobste.rs/s/2j1cdt","created_at":"2024-09-28T19:15:32.000-05:00","title":"Notes on the Crystal language","url":"https://wiki.alopex.li/CrystalNotes","score":47,"flags":0,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2j1cdt/notes_on_crystal_language","submitter_user":"icefox","user_is_author":true,"tags":["plt"]},{"short_id":"xqsixd","short_id_url":"https://lobste.rs/s/xqsixd","created_at":"2024-09-28T16:01:35.000-05:00","title":"Control structures","url":"https://xavierleroy.org/CdF/2023-2024/","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xqsixd/control_structures","submitter_user":"teymour","user_is_author":false,"tags":["math","plt"]}]