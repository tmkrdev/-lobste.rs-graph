[{"short_id":"gxmrvo","short_id_url":"https://lobste.rs/s/gxmrvo","created_at":"2024-09-30T08:07:44.000-05:00","title":"Eliminating Intermediate Array Allocations","url":"https://tenderlovemaking.com/2024/09/29/eliminating-intermediate-array-allocations/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gxmrvo/eliminating_intermediate_array","submitter_user":"MatheusRich","user_is_author":false,"tags":["performance","ruby"]},{"short_id":"ht3xpl","short_id_url":"https://lobste.rs/s/ht3xpl","created_at":"2024-09-30T08:06:22.000-05:00","title":"Epic is suing Google and Samsung for colluding to keep new app stores off Samsung phones","url":"https://www.theverge.com/policy/2024/9/30/24256395/epic-sues-google-samsung-antitrust-auto-blocker","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ht3xpl/epic_is_suing_google_samsung_for","submitter_user":"true_detective","user_is_author":false,"tags":["law"]},{"short_id":"14fa6k","short_id_url":"https://lobste.rs/s/14fa6k","created_at":"2024-09-30T07:56:15.000-05:00","title":"21 More AWS Services They Should Cancel","url":"https://justingarrison.com/blog/2024-08-05-more-aws-services-they-should-cancel/","score":2,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/14fa6k/21_more_aws_services_they_should_cancel","submitter_user":"alper","user_is_author":false,"tags":["devops"]},{"short_id":"ckaeeu","short_id_url":"https://lobste.rs/s/ckaeeu","created_at":"2024-09-30T06:18:55.000-05:00","title":"What are you doing this week?","url":"","score":2,"flags":0,"comment_count":1,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/ckaeeu/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"qa7osq","short_id_url":"https://lobste.rs/s/qa7osq","created_at":"2024-09-30T05:25:56.000-05:00","title":"runit-2.2.0 available","url":"https://www.mail-archive.com/supervision@list.skarnet.org/msg03158.html","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qa7osq/runit_2_2_0_available","submitter_user":"giffengrabber","user_is_author":false,"tags":["release","unix"]},{"short_id":"8ep75v","short_id_url":"https://lobste.rs/s/8ep75v","created_at":"2024-09-30T05:16:24.000-05:00","title":"How 1 Software Engineer Outperforms 138 - Lichess Case Study","url":"https://www.youtube.com/watch?v=7VSVfQcaxFY","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8ep75v/how_1_software_engineer_outperforms_138","submitter_user":"eduard","user_is_author":false,"tags":["practices","scala","video"]},{"short_id":"geuifh","short_id_url":"https://lobste.rs/s/geuifh","created_at":"2024-09-30T04:46:25.000-05:00","title":"secure.py – Simplify HTTP Security Headers for Python Web Apps (Major Update)","url":"https://github.com/TypeError/secure","score":4,"flags":3,"comment_count":1,"description":"\u003cp\u003eHello everyone,\u003c/p\u003e\n\u003cp\u003eI’m excited to announce a major update to secure.py, a Python library that simplifies adding HTTP security headers to web applications. This release is a complete rewrite, leveraging modern Python 3.10+ features to enhance usability and performance. It supports frameworks like Flask, Django, FastAPI, and more.\u003c/p\u003e\n\u003cp\u003eKey Features:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOut-of-the-Box Security Presets: Apply BASIC or STRICT security configurations with a single line of code.\u003c/li\u003e\n\u003cli\u003eFull Customization: Control headers like Content-Security-Policy (CSP), HSTS, X-Frame-Options, Referrer-Policy, and more to suit your application’s needs.\u003c/li\u003e\n\u003cli\u003eMulti-Framework Support: Works with both synchronous and asynchronous frameworks, including Flask, Django, FastAPI, Sanic, Starlette, and Quart.\u003c/li\u003e\n\u003cli\u003eModern Pythonic Design: Utilizes Python 3.10+ features like structural pattern matching and enhanced type hinting for cleaner and more efficient code.\u003c/li\u003e\n\u003cli\u003eNo External Dependencies: Lightweight and easy to include in any project.\u003c/li\u003e\n\u003cli\u003eBest Practice Compliance: Follows recommendations from the OWASP Secure Headers Project and MDN Web Docs for robust security.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI originally created secure.py in 2018 to make it easier to manage essential security headers across different Python web frameworks. This latest release significantly enhances the library, incorporating modern Python practices and extending support to more frameworks.\u003c/p\u003e\n\u003cp\u003eRequirements:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython 3.10 or higher\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eGitHub: \u003ca href=\"https://github.com/TypeError/secure\" rel=\"ugc\"\u003ehttps://github.com/TypeError/secure\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI would greatly appreciate any feedback, ideas for improvement, or contributions from the community!\u003c/p\u003e\n","description_plain":"Hello everyone,\r\n\r\nI'm excited to announce a major update to secure.py, a Python library that simplifies adding HTTP security headers to web applications. This release is a complete rewrite, leveraging modern Python 3.10+ features to enhance usability and performance. It supports frameworks like Flask, Django, FastAPI, and more.\r\n\r\nKey Features:\r\n\r\n- Out-of-the-Box Security Presets: Apply BASIC or STRICT security configurations with a single line of code.\r\n- Full Customization: Control headers like Content-Security-Policy (CSP), HSTS, X-Frame-Options, Referrer-Policy, and more to suit your application's needs.\r\n- Multi-Framework Support: Works with both synchronous and asynchronous frameworks, including Flask, Django, FastAPI, Sanic, Starlette, and Quart.\r\n- Modern Pythonic Design: Utilizes Python 3.10+ features like structural pattern matching and enhanced type hinting for cleaner and more efficient code.\r\n- No External Dependencies: Lightweight and easy to include in any project.\r\n- Best Practice Compliance: Follows recommendations from the OWASP Secure Headers Project and MDN Web Docs for robust security.\r\n\r\nI originally created secure.py in 2018 to make it easier to manage essential security headers across different Python web frameworks. This latest release significantly enhances the library, incorporating modern Python practices and extending support to more frameworks.\r\n\r\nRequirements:\r\n\r\n- Python 3.10 or higher\r\n\r\nGitHub: https://github.com/TypeError/secure\r\n\r\nI would greatly appreciate any feedback, ideas for improvement, or contributions from the community!","comments_url":"https://lobste.rs/s/geuifh/secure_py_simplify_http_security_headers","submitter_user":"cak","user_is_author":true,"tags":["python","security","web"]},{"short_id":"tsatar","short_id_url":"https://lobste.rs/s/tsatar","created_at":"2024-09-30T04:26:52.000-05:00","title":"Gentle intro to type-level recursion in Rust (2017)","url":"https://beachape.com/blog/2017/03/12/gentle-intro-to-type-level-recursion-in-Rust-from-zero-to-frunk-hlist-sculpting","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tsatar/gentle_intro_type_level_recursion_rust","submitter_user":"bitfield","user_is_author":false,"tags":["rust"]},{"short_id":"shsrhw","short_id_url":"https://lobste.rs/s/shsrhw","created_at":"2024-09-30T02:28:12.000-05:00","title":"Using undocumented Apple AI/ML instructions to get the average color of an image","url":"https://wunkolo.github.io/post/2024/09/vecint-average-color/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/shsrhw/using_undocumented_apple_ai_ml","submitter_user":"tumdum","user_is_author":false,"tags":["ai","graphics","performance"]},{"short_id":"rrs30d","short_id_url":"https://lobste.rs/s/rrs30d","created_at":"2024-09-30T02:19:18.000-05:00","title":"Any interesting tech blogs outside the usual software/web dev circle?","url":"","score":10,"flags":0,"comment_count":3,"description":"\u003cp\u003eI follow many great personal tech blogs but I feel the overall theme is too monochrome at time. It is relatively focused on traditional software/web development, since that’s my circle. I feel there are entire categories I’m missing on and would like to mix things up in my feed.\u003c/p\u003e\n\u003cp\u003eI still follow some security researchers, SREs, and maybe some ux designers among others but even though the titles might be different, they’re still working in the same industry.\u003c/p\u003e\n\u003cp\u003eWhat I’m looking for is personal blogs that diverge a bit from the theme I mentioned:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSWE that works at a different industry or specialized in some niche like compilers or graphics\u003c/li\u003e\n\u003cli\u003eComputer scientist working on interesting research\u003c/li\u003e\n\u003cli\u003eIC design\u003c/li\u003e\n\u003cli\u003eEmbedded and Hardware\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI doesn’t have to be purely technical blog. In fact I’d prefer blog that are mixed with personal since technical stuff usually surface elsewhere anyway. I don’t want to put a lot of constraints or expectation since I’m trying to expand my feed surface and I don’t know what’s out there that I’m missing on.\u003c/p\u003e\n","description_plain":"I follow many great personal tech blogs but I feel the overall theme is too monochrome at time. It is relatively focused on traditional software/web development, since that's my circle. I feel there are entire categories I'm missing on and would like to mix things up in my feed.\r\n\r\nI still follow some security researchers, SREs, and maybe some ux designers among others but even though the titles might be different, they're still working in the same industry.\r\n\r\nWhat I'm looking for is personal blogs that diverge a bit from the theme I mentioned:\r\n- SWE that works at a different industry or specialized in some niche like compilers or graphics\r\n- Computer scientist working on interesting research\r\n- IC design\r\n- Embedded and Hardware\r\n\r\nI doesn't have to be purely technical blog. In fact I'd prefer blog that are mixed with personal since technical stuff usually surface elsewhere anyway. I don't want to put a lot of constraints or expectation since I'm trying to expand my feed surface and I don't know what's out there that I'm missing on.","comments_url":"https://lobste.rs/s/rrs30d/any_interesting_tech_blogs_outside_usual","submitter_user":"imadij","user_is_author":true,"tags":["ask","culture"]},{"short_id":"qcqcjp","short_id_url":"https://lobste.rs/s/qcqcjp","created_at":"2024-09-30T01:44:52.000-05:00","title":"We Have a Package for You! A Comprehensive Analysis of Package Hallucinations by Code Generating LLMs","url":"https://arxiv.org/abs/2406.10279","score":6,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe reliance of popular programming languages such as Python and JavaScript on centralized package repositories and open-source software, combined with the emergence of code-generating Large Language Models (LLMs), has created a new type of threat to the software supply chain: package hallucinations. These hallucinations, which arise from fact-conflicting errors when generating code using LLMs, represent a novel form of package confusion attack that poses a critical threat to the integrity of the software supply chain. This paper conducts a rigorous and comprehensive evaluation of package hallucinations across different programming languages, settings, and parameters, exploring how a diverse set of models and configurations affect the likelihood of generating erroneous package recommendations and identifying the root causes of this phenomenon. Using 16 popular LLMs for code generation and two unique prompt datasets, we generate 576,000 code samples in two programming languages that we analyze for package hallucinations. Our findings reveal that that the average percentage of hallucinated packages is at least 5.2% for commercial models and 21.7% for open-source models, including a staggering 205,474 unique examples of hallucinated package names, further underscoring the severity and pervasiveness of this threat. To overcome this problem, we implement several hallucination mitigation strategies and show that they are able to significantly reduce the number of package hallucinations while maintaining code quality. Our experiments and findings highlight package hallucinations as a persistent and systemic phenomenon while using state-of-the-art LLMs for code generation, and a significant challenge which deserves the research community’s urgent attention.\u003c/p\u003e\n","description_plain":"The reliance of popular programming languages such as Python and JavaScript on centralized package repositories and open-source software, combined with the emergence of code-generating Large Language Models (LLMs), has created a new type of threat to the software supply chain: package hallucinations. These hallucinations, which arise from fact-conflicting errors when generating code using LLMs, represent a novel form of package confusion attack that poses a critical threat to the integrity of the software supply chain. This paper conducts a rigorous and comprehensive evaluation of package hallucinations across different programming languages, settings, and parameters, exploring how a diverse set of models and configurations affect the likelihood of generating erroneous package recommendations and identifying the root causes of this phenomenon. Using 16 popular LLMs for code generation and two unique prompt datasets, we generate 576,000 code samples in two programming languages that we analyze for package hallucinations. Our findings reveal that that the average percentage of hallucinated packages is at least 5.2% for commercial models and 21.7% for open-source models, including a staggering 205,474 unique examples of hallucinated package names, further underscoring the severity and pervasiveness of this threat. To overcome this problem, we implement several hallucination mitigation strategies and show that they are able to significantly reduce the number of package hallucinations while maintaining code quality. Our experiments and findings highlight package hallucinations as a persistent and systemic phenomenon while using state-of-the-art LLMs for code generation, and a significant challenge which deserves the research community's urgent attention.","comments_url":"https://lobste.rs/s/qcqcjp/we_have_package_for_you_comprehensive","submitter_user":"kivikakk","user_is_author":false,"tags":["ai","pdf"]},{"short_id":"mielvi","short_id_url":"https://lobste.rs/s/mielvi","created_at":"2024-09-30T01:07:31.000-05:00","title":"go-sqlite3: Go bindings to SQLite using wazero","url":"https://github.com/ncruces/go-sqlite3","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mielvi/go_sqlite3_go_bindings_sqlite_using","submitter_user":"edoput","user_is_author":false,"tags":["databases","go","wasm"]},{"short_id":"bla7ts","short_id_url":"https://lobste.rs/s/bla7ts","created_at":"2024-09-29T20:29:54.000-05:00","title":"Varlink Now","url":"https://media.ccc.de/v/all-systems-go-2024-276-varlink-now-","score":8,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bla7ts/varlink_now","submitter_user":"janus","user_is_author":false,"tags":["systemd","video"]},{"short_id":"7chd37","short_id_url":"https://lobste.rs/s/7chd37","created_at":"2024-09-29T19:57:02.000-05:00","title":"Type-erased generic functions for C: A modest non-proposal","url":"https://duriansoftware.com/joe/type-erased-generic-functions-for-c:-a-modest-non-proposal","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7chd37/type_erased_generic_functions_for_c","submitter_user":"lorddimwit","user_is_author":false,"tags":["c","plt"]},{"short_id":"n0vg9z","short_id_url":"https://lobste.rs/s/n0vg9z","created_at":"2024-09-29T19:38:56.000-05:00","title":"On leaving my last job (leaving Apple)","url":"https://typesanitizer.com/blog/leaving-apple.html","score":51,"flags":3,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n0vg9z/on_leaving_my_last_job_leaving_apple","submitter_user":"Jackevansevo","user_is_author":false,"tags":["culture"]},{"short_id":"1kfzss","short_id_url":"https://lobste.rs/s/1kfzss","created_at":"2024-09-29T19:13:47.000-05:00","title":"Renderling Devlog, Implementing Frustum Culling using Rust-GPU","url":"https://renderling.xyz/devlog/index.html#sat_sep_28_2024","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1kfzss/renderling_devlog_implementing_frustum","submitter_user":"schell","user_is_author":true,"tags":["graphics","rust"]},{"short_id":"h4ij6z","short_id_url":"https://lobste.rs/s/h4ij6z","created_at":"2024-09-29T19:10:59.000-05:00","title":"Use of Prolog for developing a new programming language (1992)","url":"https://citeseerx.ist.psu.edu/document?repid=rep1\u0026type=pdf\u0026doi=5dbee7f876ccb6331d1fb4dcdc7f7a4744801804","score":10,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h4ij6z/use_prolog_for_developing_new","submitter_user":"surprisetalk","user_is_author":false,"tags":["pdf","plt"]},{"short_id":"91jmdx","short_id_url":"https://lobste.rs/s/91jmdx","created_at":"2024-09-29T17:16:47.000-05:00","title":"Prep: Golang comptime. Pure blasphemy","url":"https://github.com/pijng/prep","score":20,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/91jmdx/prep_golang_comptime_pure_blasphemy","submitter_user":"gamache","user_is_author":false,"tags":["go","zig"]},{"short_id":"cj0iwx","short_id_url":"https://lobste.rs/s/cj0iwx","created_at":"2024-09-29T15:03:30.000-05:00","title":"What brings an upgrade to GCC 14 from GCC 13?","url":"https://www.meetingcpp.com/blog/items/What-brings-an-upgrade-to-GCC-14-from-GCC-13-.html","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cj0iwx/what_brings_upgrade_gcc_14_from_gcc_13","submitter_user":"raymii","user_is_author":false,"tags":["c","c++"]},{"short_id":"sbti5w","short_id_url":"https://lobste.rs/s/sbti5w","created_at":"2024-09-29T15:02:41.000-05:00","title":"std::initializer_list in C++  - Caveats and Improvements","url":"https://www.cppstories.com/2023/initializer_list_improvements/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sbti5w/std_initializer_list_c_caveats","submitter_user":"raymii","user_is_author":false,"tags":["c++"]},{"short_id":"w6dqph","short_id_url":"https://lobste.rs/s/w6dqph","created_at":"2024-09-29T14:35:48.000-05:00","title":"Build a serverless ACID database with this one neat trick (atomic PutIfAbsent)","url":"https://notes.eatonphil.com/2024-09-29-build-a-serverless-acid-database-with-this-one-neat-trick.html","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/w6dqph/build_serverless_acid_database_with_this","submitter_user":"eatonphil","user_is_author":true,"tags":["databases"]},{"short_id":"4xzxqk","short_id_url":"https://lobste.rs/s/4xzxqk","created_at":"2024-09-29T14:02:42.000-05:00","title":"Don’t believe the hype: AGI is far from inevitable","url":"https://www.ru.nl/en/research/research-news/dont-believe-the-hype-agi-is-far-from-inevitable","score":34,"flags":4,"comment_count":20,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4xzxqk/don_t_believe_hype_agi_is_far_from","submitter_user":"mpweiher","user_is_author":false,"tags":["ai"]},{"short_id":"sz5qjv","short_id_url":"https://lobste.rs/s/sz5qjv","created_at":"2024-09-29T14:01:24.000-05:00","title":"bpfsnake: snake in bpftrace","url":"https://github.com/amiremohamadi/bpfsnake","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sz5qjv/bpfsnake_snake_bpftrace","submitter_user":"df","user_is_author":false,"tags":["art","linux"]},{"short_id":"wxlsdn","short_id_url":"https://lobste.rs/s/wxlsdn","created_at":"2024-09-29T10:23:19.000-05:00","title":"Building a robust frontend using progressive enhancement","url":"https://www.gov.uk/service-manual/technology/using-progressive-enhancement","score":80,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wxlsdn/building_robust_frontend_using","submitter_user":"pushcx","user_is_author":false,"tags":["web"]},{"short_id":"su9ynw","short_id_url":"https://lobste.rs/s/su9ynw","created_at":"2024-09-29T08:36:13.000-05:00","title":"Overbooking - how providers divide up the bandwidth","url":"https://blog.init7.net/en/overbooking-how-providers-divide-up-the-bandwidth/","score":4,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/su9ynw/overbooking_how_providers_divide_up","submitter_user":"freddyb","user_is_author":false,"tags":["networking"]}]