[{"short_id":"fns9re","short_id_url":"https://lobste.rs/s/fns9re","created_at":"2024-11-16T16:05:12.000-06:00","title":"On Micropayments","url":"https://sheep.horse/2024/11/on_micropayments.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fns9re/on_micropayments","submitter_user":"AndrewStephens","user_is_author":true,"tags":["browsers","finance"]},{"short_id":"03pfyt","short_id_url":"https://lobste.rs/s/03pfyt","created_at":"2024-11-16T15:56:56.000-06:00","title":"Any Python program fits in 30 characters*","url":"https://purplesyringa.moe/blog/any-python-program-fits-in-30-characters/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/03pfyt/any_python_program_fits_30_characters","submitter_user":"EvanHahn","user_is_author":false,"tags":["python"]},{"short_id":"h13645","short_id_url":"https://lobste.rs/s/h13645","created_at":"2024-11-16T14:55:16.000-06:00","title":"The Secret Behind Valve's Flickering Lights","url":"https://www.alanzucconi.com/2021/06/15/valve-flickering-lights/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h13645/secret_behind_valve_s_flickering_lights","submitter_user":"friendlysock","user_is_author":false,"tags":["graphics","historical"]},{"short_id":"1sd1q2","short_id_url":"https://lobste.rs/s/1sd1q2","created_at":"2024-11-16T14:01:22.000-06:00","title":"James Gleick's Chaos: The Software","url":"https://github.com/rudyrucker/chaos/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1sd1q2/james_gleick_s_chaos_software","submitter_user":"sknebel","user_is_author":false,"tags":["art","historical","math"]},{"short_id":"67f56y","short_id_url":"https://lobste.rs/s/67f56y","created_at":"2024-11-16T11:01:33.000-06:00","title":"Protecting Signal Keys on Desktop","url":"https://cryptographycaffe.sandboxaq.com/posts/protecting-signal-desktop-keys/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/67f56y/protecting_signal_keys_on_desktop","submitter_user":"emschwartz","user_is_author":false,"tags":["cryptography","hardware","privacy"]},{"short_id":"ia3zp4","short_id_url":"https://lobste.rs/s/ia3zp4","created_at":"2024-11-16T10:40:41.000-06:00","title":"Buggy code is biased code","url":"https://www.johndcook.com/blog/2010/10/19/buggy-simulation-code-is-biased/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ia3zp4/buggy_code_is_biased_code","submitter_user":"spookylukey","user_is_author":false,"tags":["programming"]},{"short_id":"zbjnlh","short_id_url":"https://lobste.rs/s/zbjnlh","created_at":"2024-11-16T10:28:57.000-06:00","title":"Incremental builds in Nix and garnix","url":"https://garnix.io/blog/incremental-builds","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zbjnlh/incremental_builds_nix_garnix","submitter_user":"soenkehahn","user_is_author":false,"tags":["linux","nix"]},{"short_id":"msnvss","short_id_url":"https://lobste.rs/s/msnvss","created_at":"2024-11-16T08:52:31.000-06:00","title":"DuckDB Optimizers: The Low-Key MVP","url":"https://duckdb.org/2024/11/14/optimizers.html","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/msnvss/duckdb_optimizers_low_key_mvp","submitter_user":"emschwartz","user_is_author":false,"tags":["databases","performance"]},{"short_id":"3hi8xa","short_id_url":"https://lobste.rs/s/3hi8xa","created_at":"2024-11-16T08:51:49.000-06:00","title":"Making robots plan faster with SIMD and Rust","url":"https://claytonwramsey.com/blog/captree","score":10,"flags":1,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3hi8xa/making_robots_plan_faster_with_simd_rust","submitter_user":"fanf","user_is_author":false,"tags":["performance","rust"]},{"short_id":"bqt4fu","short_id_url":"https://lobste.rs/s/bqt4fu","created_at":"2024-11-16T08:50:49.000-06:00","title":"SuperC: parsing all of C by taming the preprocessor","url":"https://paulgazzillo.com/papers/pldi12.pdf","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bqt4fu/superc_parsing_all_c_by_taming","submitter_user":"fanf","user_is_author":false,"tags":["c","pdf"]},{"short_id":"eyxwjs","short_id_url":"https://lobste.rs/s/eyxwjs","created_at":"2024-11-16T07:25:16.000-06:00","title":"An Introduction to Residuality Theory","url":"https://www.youtube.com/watch?v=1KHXAWLSMqE","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eyxwjs/introduction_residuality_theory","submitter_user":"stevan","user_is_author":false,"tags":["practices","scaling","video"]},{"short_id":"3sua5c","short_id_url":"https://lobste.rs/s/3sua5c","created_at":"2024-11-16T07:18:29.000-06:00","title":"Half-Life 2: 20th Anniversary Documentary","url":"https://www.youtube.com/watch?v=YCjNT9qGjh4","score":20,"flags":1,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3sua5c/half_life_2_20th_anniversary_documentary","submitter_user":"dpk","user_is_author":false,"tags":["games","historical","video"]},{"short_id":"prwxez","short_id_url":"https://lobste.rs/s/prwxez","created_at":"2024-11-16T07:14:01.000-06:00","title":"The Monads Hurt My Head --- But Not Anymore (2009)","url":"https://golem.ph.utexas.edu/category/2009/07/the_monads_hurt_my_head_but_no.html","score":2,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/prwxez/monads_hurt_my_head_not_anymore_2009","submitter_user":"susam","user_is_author":false,"tags":["math"]},{"short_id":"jo8bqo","short_id_url":"https://lobste.rs/s/jo8bqo","created_at":"2024-11-16T05:41:17.000-06:00","title":"Implementation of an Out-of-order RISC-V Vector Unit","url":"https://www.youtube.com/watch?v=WzID6kk8RNs","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jo8bqo/implementation_out_order_risc_v_vector","submitter_user":"xoranth","user_is_author":false,"tags":["hardware","performance","video"]},{"short_id":"bz8nng","short_id_url":"https://lobste.rs/s/bz8nng","created_at":"2024-11-16T04:54:16.000-06:00","title":"Exploring Effect in TypeScript: Simplifying Async and Error Handling","url":"https://www.tweag.io/blog/2024-11-07-typescript-effect/","score":9,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bz8nng/exploring_effect_typescript","submitter_user":"adamshaylor","user_is_author":false,"tags":["javascript"]},{"short_id":"obifny","short_id_url":"https://lobste.rs/s/obifny","created_at":"2024-11-15T17:22:30.000-06:00","title":"Maybe Bluesky has “won”","url":"https://anderegg.ca/2024/11/15/maybe-bluesky-has-won","score":43,"flags":4,"comment_count":25,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/obifny/maybe_bluesky_has_won","submitter_user":"winter","user_is_author":false,"tags":["distributed"]},{"short_id":"o7tlpa","short_id_url":"https://lobste.rs/s/o7tlpa","created_at":"2024-11-15T14:43:13.000-06:00","title":"Huawei develops 72TB SSD-tape hybrid storage device","url":"https://www.tomshardware.com/pc-components/storage/huawei-develops-ssd-tape-hybrid-storage-device-for-warm-and-cold-storage-first-gen-med-drive-holds-up-to-72tb","score":11,"flags":0,"comment_count":4,"description":"\u003cp\u003eThis has the same energy as using an old steam locomotive boiler to drive a generator powering an electric motor. Having said that, I would buy one.\u003c/p\u003e\n","description_plain":"This has the same energy as using an old steam locomotive boiler to drive a generator powering an electric motor. Having said that, I would buy one.","comments_url":"https://lobste.rs/s/o7tlpa/huawei_develops_72tb_ssd_tape_hybrid","submitter_user":"ahelwer","user_is_author":false,"tags":["hardware"]},{"short_id":"rgcgev","short_id_url":"https://lobste.rs/s/rgcgev","created_at":"2024-11-15T14:25:06.000-06:00","title":"Retrofitting spatial safety to hundreds of millions of lines of C++","url":"https://security.googleblog.com/2024/11/retrofitting-spatial-safety-to-hundreds.html?m=1","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rgcgev/retrofitting_spatial_safety_hundreds","submitter_user":"raymii","user_is_author":false,"tags":["c++"]},{"short_id":"eybzqx","short_id_url":"https://lobste.rs/s/eybzqx","created_at":"2024-11-15T14:15:55.000-06:00","title":"Ed Zitron - Why Are All Tech Products Now Shit?","url":"https://youtu.be/7Slib2bbMs4","score":2,"flags":2,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eybzqx/ed_zitron_why_are_all_tech_products_now","submitter_user":"metahost","user_is_author":false,"tags":["culture","video"]},{"short_id":"xkccev","short_id_url":"https://lobste.rs/s/xkccev","created_at":"2024-11-15T13:08:41.000-06:00","title":"In Memoriam: Thomas E. Kurtz, co-inventor of BASIC, 1928–2024","url":"https://computerhistory.org/blog/in-memoriam-thomas-e-kurtz-1928-2024/","score":24,"flags":1,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xkccev/memoriam_thomas_e_kurtz_co_inventor_basic","submitter_user":"xmodem","user_is_author":false,"tags":["compsci","culture","person","plt"]},{"short_id":"6kfvtg","short_id_url":"https://lobste.rs/s/6kfvtg","created_at":"2024-11-15T11:30:38.000-06:00","title":"What To Use Instead of PGP","url":"https://soatok.blog/2024/11/15/what-to-use-instead-of-pgp/","score":83,"flags":1,"comment_count":82,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6kfvtg/what_use_instead_pgp","submitter_user":"deejayy","user_is_author":false,"tags":["cryptography","security"]},{"short_id":"uabxfu","short_id_url":"https://lobste.rs/s/uabxfu","created_at":"2024-11-15T11:13:53.000-06:00","title":"Gliimly is a programming language for web services","url":"https://gliimly.github.io/","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uabxfu/gliimly_is_programming_language_for_web","submitter_user":"emschwartz","user_is_author":false,"tags":["api","programming"]},{"short_id":"gxb69j","short_id_url":"https://lobste.rs/s/gxb69j","created_at":"2024-11-15T09:55:37.000-06:00","title":"Thoughts on Django’s Core","url":"https://buttondown.com/carlton/archive/thoughts-on-djangos-core","score":11,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gxb69j/thoughts_on_django_s_core","submitter_user":"zverok","user_is_author":false,"tags":["python"]},{"short_id":"zvwwcl","short_id_url":"https://lobste.rs/s/zvwwcl","created_at":"2024-11-15T09:35:54.000-06:00","title":"Fuzzing the PHP Interpreter via Dataflow Fusion","url":"https://arxiv.org/pdf/2410.21713","score":4,"flags":0,"comment_count":0,"description":"\u003cblockquote\u003e\n\u003cp\u003ePHP, a dominant scripting language in web development, powers a vast range of websites, from personal blogs to major platforms. While existing research primarily focuses on PHP application-level security issues like code injection, memory errors within the PHP interpreter have been largely overlooked. These memory errors, prevalent due to the PHP interpreter’s extensive C codebase, pose significant risks to the confidentiality, integrity, and availability of PHP servers. This paper introduces FlowFusion, the first automatic fuzzing framework specifically designed to detect memory errors in the PHP interpreter. FlowFusion leverages dataflow as an efficient representation of test cases maintained by PHP developers, merging two or more test cases to produce fused test cases with more complex code semantics. Moreover, FlowFusion employs strategies such as test mutation, interface fuzzing, and environment crossover to further facilitate memory error detection. In our evaluation, FlowFusion identified 56 unknown memory errors in the PHP interpreter, with 38 fixed and 4 confirmed. We compared FlowFusion against the official test suite and a naive test concatenation approach, demonstrating that FlowFusion can detect new bugs that these methods miss, while also achieving greater code coverage. Furthermore, FlowFusion outperformed state-of-the-art fuzzers AFL++ and Polyglot, covering 24% more lines of code after 24 hours of fuzzing under identical execution environments. FlowFusion has been acknowledged by PHP developers, and we believe our approach offers a practical tool for enhancing the security of the PHP interpreter.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2410.21713\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"\u003e PHP, a dominant scripting language in web development, powers a vast range of websites, from personal blogs to major platforms. While existing research primarily focuses on PHP application-level security issues like code injection, memory errors within the PHP interpreter have been largely overlooked. These memory errors, prevalent due to the PHP interpreter's extensive C codebase, pose significant risks to the confidentiality, integrity, and availability of PHP servers. This paper introduces FlowFusion, the first automatic fuzzing framework specifically designed to detect memory errors in the PHP interpreter. FlowFusion leverages dataflow as an efficient representation of test cases maintained by PHP developers, merging two or more test cases to produce fused test cases with more complex code semantics. Moreover, FlowFusion employs strategies such as test mutation, interface fuzzing, and environment crossover to further facilitate memory error detection. In our evaluation, FlowFusion identified 56 unknown memory errors in the PHP interpreter, with 38 fixed and 4 confirmed. We compared FlowFusion against the official test suite and a naive test concatenation approach, demonstrating that FlowFusion can detect new bugs that these methods miss, while also achieving greater code coverage. Furthermore, FlowFusion outperformed state-of-the-art fuzzers AFL++ and Polyglot, covering 24% more lines of code after 24 hours of fuzzing under identical execution environments. FlowFusion has been acknowledged by PHP developers, and we believe our approach offers a practical tool for enhancing the security of the PHP interpreter.\r\n\r\n[arXiv](https://arxiv.org/abs/2410.21713)","comments_url":"https://lobste.rs/s/zvwwcl/fuzzing_php_interpreter_via_dataflow","submitter_user":"calvin","user_is_author":false,"tags":["pdf","php","security","testing"]},{"short_id":"kh3hrz","short_id_url":"https://lobste.rs/s/kh3hrz","created_at":"2024-11-15T08:36:50.000-06:00","title":"Implementing Type Systems as Macros","url":"https://lambdaland.org/posts/2023-08-14_types_with_macros/","score":14,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kh3hrz/implementing_type_systems_as_macros","submitter_user":"dpk","user_is_author":false,"tags":["lisp","plt"]}]