[{"short_id":"jslbix","short_id_url":"https://lobste.rs/s/jslbix","created_at":"2024-02-23T05:02:36.000-06:00","title":"Java FFI vs JNI for Meta's RocksDB Java API","url":"https://rocksdb.org/blog/2024/02/20/foreign-function-interface.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jslbix/java_ffi_vs_jni_for_meta_s_rocksdb_java_api","submitter_user":{"username":"adamretter","created_at":"2018-10-11T03:20:58.000-05:00","is_admin":false,"about":"Software Developer, Open Source, mostly Java, Scala and C++. Database geek: eXist-db and RocksDB. Digital Preservation and Digital Archives.","is_moderator":false,"karma":108,"avatar_url":"/avatars/adamretter-100.png","invited_by_user":"liwakura","github_username":"adamretter"},"user_is_author":true,"tags":["databases","java","performance"]},{"short_id":"2hsgkm","short_id_url":"https://lobste.rs/s/2hsgkm","created_at":"2024-02-23T04:48:36.000-06:00","title":"Building a realtime datalake with Apache Flink, Spark, and Hudi","url":"https://engineering.grab.com/enabling-near-realtime-data-analytics","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2hsgkm/building_realtime_datalake_with_apache","submitter_user":{"username":"rmoff","created_at":"2018-09-19T03:24:42.000-05:00","is_admin":false,"about":"https://rmoff.info","is_moderator":false,"karma":30,"avatar_url":"/avatars/rmoff-100.png","invited_by_user":"vrthra","github_username":"rmoff"},"user_is_author":false,"tags":["databases","distributed"]},{"short_id":"9xtcun","short_id_url":"https://lobste.rs/s/9xtcun","created_at":"2024-02-23T04:24:30.000-06:00","title":"Complex systems and bridging between spec and implementation","url":"","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eI am on the cusp (hopefully) of kicking off development of a fairly large and complex system (multiple integrated services, kafkas involved, background processes, multiple client frontends, etc…). It’s predominantly going to be built in rust (but that’s only trivially relevant; i.e. not following standard OOP).\u003c/p\u003e\n\u003cp\u003eHere’s where i’m at:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eI have defined all the components, services, data stores to use / or develop\u003c/li\u003e\n\u003cli\u003eI have a a fairly concrete conceptualisation of how to structure and manage data on the storage end of the system which i’m formalizing into a specification\u003c/li\u003e\n\u003cli\u003eI have a deployment model for the various parts of the system to go into production\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe problem is, I have a gap, from these specs of the individual components and services that need to be built out, to the actual implementation of those services. I’ve scaffolded the code-base around what “feels” like sensible semantics, but bridging from the scope, through the high-level code organisation through to implementation is where I start to get a bit queasy.\u003c/p\u003e\n\u003cp\u003eIn the past, i’ve more or less dove head-first into just starting to implement, but the problem has been that I will very easily end up going in circles, or I end up with a lot of duplicated code across areas and just generally feel like it’s not working out the way I had hoped (obviously because i’ve just gone ahead and implemented).\u003c/p\u003e\n\u003cp\u003eWhat are some tools, processes, design concepts, thinking patterns that you can use to sort of fill in that “last mile” from high-level spec to implementing to try and ensure that things stay on track and limit abandonment or going down dead-ends?\u003c/p\u003e\n\u003cp\u003eI’m interested in advice, articles, books, or anything else that makes sense in the rough context above. Not specifically around for instance design patterns themselves, i’m more than familiar with the tools in that arsenal, but how do you bridge the gap between the concept and the implementation without going too deep down the rabbit-hole of modelling out actual code and everything else in UML for instance? How do you basically minimize getting mired in massive refactors once you get to implementation phase?\u003c/p\u003e\n","description_plain":"I am on the cusp (hopefully) of kicking off development of a fairly large and complex system (multiple integrated services, kafkas involved, background processes, multiple client frontends, etc...). It's predominantly going to be built in rust (but that's only trivially relevant; i.e. not following standard OOP).\r\n\r\nHere's where i'm at:\r\n\r\n1. I have defined all the components, services, data stores to use / or develop\r\n2. I have a a fairly concrete conceptualisation of how to structure and manage data on the storage end of the system which i'm formalizing into a specification\r\n3. I have a deployment model for the various parts of the system to go into production\r\n\r\nThe problem is, I have a gap, from these specs of the individual components and services that need to be built out, to the actual implementation of those services. I've scaffolded the code-base around what \"feels\" like sensible semantics, but bridging from the scope, through the high-level code organisation through to implementation is where I start to get a bit queasy.\r\n\r\nIn the past, i've more or less dove head-first into just starting to implement, but the problem has been that I will very easily end up going in circles, or I end up with a lot of duplicated code across areas and just generally feel like it's not working out the way I had hoped (obviously because i've just gone ahead and implemented).\r\n\r\nWhat are some tools, processes, design concepts, thinking patterns that you can use to sort of fill in that \"last mile\" from high-level spec to implementing to try and ensure that things stay on track and limit abandonment or going down dead-ends?\r\n\r\nI'm interested in advice, articles, books, or anything else that makes sense in the rough context above. Not specifically around for instance design patterns themselves, i'm more than familiar with the tools in that arsenal, but how do you bridge the gap between the concept and the implementation without going too deep down the rabbit-hole of modelling out actual code and everything else in UML for instance? How do you basically minimize getting mired in massive refactors once you get to implementation phase?","comments_url":"https://lobste.rs/s/9xtcun/complex_systems_bridging_between_spec","submitter_user":{"username":"objectif_lune","created_at":"2017-03-27T14:13:09.000-05:00","is_admin":false,"about":"Builder of things and stuff, and some other things.","is_moderator":false,"karma":450,"avatar_url":"/avatars/objectif_lune-100.png","invited_by_user":"flyingfisch","keybase_signatures":[{"kb_username":"jdu","sig_hash":"9c85876b21ddda1c82885c72879baf339b52138441fc8c5fb6ee39c8acdd91150f"}]},"user_is_author":true,"tags":["ask","practices"]},{"short_id":"oxlnqg","short_id_url":"https://lobste.rs/s/oxlnqg","created_at":"2024-02-23T04:19:20.000-06:00","title":"Python Dependencies Are Fixable","url":"https://matduggan.com/everyone-is-wrong-but-you/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oxlnqg/python_dependencies_are_fixable","submitter_user":{"username":"maduggan","created_at":"2019-03-13T08:43:38.000-05:00","is_admin":false,"about":"I'm an American sys admin living in Denmark. My posts and opinions are all my own and have nothing to do with my employer. Anyone who thinks I speak on behalf of a business has lost their minds. ","is_moderator":false,"karma":1183,"avatar_url":"/avatars/maduggan-100.png","invited_by_user":"stephen"},"user_is_author":true,"tags":["python","rant"]},{"short_id":"1ll4du","short_id_url":"https://lobste.rs/s/1ll4du","created_at":"2024-02-23T02:48:29.000-06:00","title":"Experiences with building a Gentoo virtualisation host","url":"https://catfox.life/2024/02/23/experiences-with-building-a-gentoo-virtualisation-host/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1ll4du/experiences_with_building_gentoo","submitter_user":{"username":"awilfox","created_at":"2019-07-25T21:19:45.000-05:00","is_admin":false,"about":"Linux distro dev.  Contains no phosphors.  Offer not valid where prohibited by law.  Do not taunt Happy Fun Ball.  Takes may be hot; use sufficient insulation.","is_moderator":false,"karma":735,"avatar_url":"/avatars/awilfox-100.png","invited_by_user":"Arcayr","github_username":"awilfox"},"user_is_author":true,"tags":["linux"]},{"short_id":"9ynwji","short_id_url":"https://lobste.rs/s/9ynwji","created_at":"2024-02-22T21:38:16.000-06:00","title":"On Moonpool","url":"https://blag.cedeela.fr/on-moonpool/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9ynwji/on_moonpool","submitter_user":{"username":"indigo","created_at":"2015-10-15T11:52:50.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":861,"avatar_url":"/avatars/indigo-100.png","invited_by_user":"tluyben2"},"user_is_author":false,"tags":["ml"]},{"short_id":"r8kylf","short_id_url":"https://lobste.rs/s/r8kylf","created_at":"2024-02-22T21:06:14.000-06:00","title":"Go 2016-2019: My transition into management","url":"https://ajmani.net/2024/02/22/go-2016-2019/","score":4,"flags":2,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r8kylf/go_2016_2019_my_transition_into","submitter_user":{"username":"benhoyt","created_at":"2020-05-20T17:24:04.000-05:00","is_admin":false,"about":"Software engineer at Canonical. Author of [GoAWK](https://github.com/benhoyt/goawk), a POSIX-compatible AWK interpreter written in Go. Author of Python's [`os.scandir()`](https://peps.python.org/pep-0471/). Husband, father, Christian. See my website at [BenHoyt.com](https://benhoyt.com/).","is_moderator":false,"karma":1695,"avatar_url":"/avatars/benhoyt-100.png","invited_by_user":"mvdan"},"user_is_author":false,"tags":["go"]},{"short_id":"lngkdo","short_id_url":"https://lobste.rs/s/lngkdo","created_at":"2024-02-22T17:21:03.000-06:00","title":"Robust generic functions on slices","url":"https://go.dev/blog/generic-slice-functions","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lngkdo/robust_generic_functions_on_slices","submitter_user":{"username":"telemachus","created_at":"2012-08-10T12:36:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2669,"avatar_url":"/avatars/telemachus-100.png","invited_by_user":"jcs"},"user_is_author":false,"tags":["go"]},{"short_id":"mqwlew","short_id_url":"https://lobste.rs/s/mqwlew","created_at":"2024-02-22T16:16:10.000-06:00","title":"Unlocking secret ThinkPad functionality for emulating USB devices","url":"https://xairy.io/articles/thinkpad-xdci","score":17,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mqwlew/unlocking_secret_thinkpad","submitter_user":{"username":"crazyloglad","created_at":"2016-09-06T15:12:29.000-05:00","is_admin":false,"about":"Doing debugging and reversing for coins. Got an unhealthy interest in the interplay between system level graphics, emulators and virtual machines. Can be found lurking on freenode in #arcan, at github.com/letoram and arcan-fe.com","is_moderator":false,"karma":3424,"avatar_url":"/avatars/crazyloglad-100.png","invited_by_user":"nc","github_username":"letoram"},"user_is_author":false,"tags":["hardware"]},{"short_id":"zd7nba","short_id_url":"https://lobste.rs/s/zd7nba","created_at":"2024-02-22T15:42:21.000-06:00","title":"JavaScript Bloat in 2024","url":"https://tonsky.me/blog/js-bloat/","score":59,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zd7nba/javascript_bloat_2024","submitter_user":{"username":"carlana","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carlana Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":17025,"avatar_url":"/avatars/carlana-100.png","invited_by_user":"peterbourgon","github_username":"earthboundkid"},"user_is_author":false,"tags":["javascript","rant"]},{"short_id":"uhwdnk","short_id_url":"https://lobste.rs/s/uhwdnk","created_at":"2024-02-22T15:09:06.000-06:00","title":"openzfs-nvme-databases","url":"https://github.com/letsencrypt/openzfs-nvme-databases","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uhwdnk/openzfs_nvme_databases","submitter_user":{"username":"williballenthin","created_at":"2020-10-28T11:36:41.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":451,"avatar_url":"/avatars/williballenthin-100.png","invited_by_user":"insanitybit"},"user_is_author":false,"tags":["databases","devops"]},{"short_id":"oeh7ry","short_id_url":"https://lobste.rs/s/oeh7ry","created_at":"2024-02-22T13:15:39.000-06:00","title":"Compiler Theory and Reactivity","url":"https://www.recompiled.dev/blog/ssa/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oeh7ry/compiler_theory_reactivity","submitter_user":{"username":"gsathya","created_at":"2020-07-06T08:40:08.000-05:00","is_admin":false,"about":"V8 engineer","is_moderator":false,"karma":17,"avatar_url":"/avatars/gsathya-100.png","invited_by_user":"arun"},"user_is_author":true,"tags":["compilers"]},{"short_id":"edll1r","short_id_url":"https://lobste.rs/s/edll1r","created_at":"2024-02-22T13:01:59.000-06:00","title":"Incredibly Simple QR Generation in QML","url":"https://www.kdab.com/incredibly-simple-qr-generation-in-qml/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/edll1r/incredibly_simple_qr_generation_qml","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":24957,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"user_is_author":false,"tags":["c++","javascript"]},{"short_id":"qbjtey","short_id_url":"https://lobste.rs/s/qbjtey","created_at":"2024-02-22T12:54:03.000-06:00","title":"Stable Diffusion 3","url":"https://stability.ai/news/stable-diffusion-3","score":4,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qbjtey/stable_diffusion_3","submitter_user":{"username":"BiteCode","created_at":"2023-04-04T09:58:38.000-05:00","is_admin":false,"about":"https://bitecode.dev","is_moderator":false,"karma":1265,"avatar_url":"/avatars/BiteCode-100.png","invited_by_user":"stavros"},"user_is_author":false,"tags":["ai"]},{"short_id":"ggviq0","short_id_url":"https://lobste.rs/s/ggviq0","created_at":"2024-02-22T12:46:00.000-06:00","title":"Feeding a Hungry Mouse Using Chromedp and Golang","url":"https://pacenthink.io/post/feeding-a-hungry-mouse-using-chromedp-and-golang/","score":-3,"flags":4,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ggviq0/feeding_hungry_mouse_using_chromedp","submitter_user":{"username":"bhupesh","created_at":"2021-02-17T01:26:25.000-06:00","is_admin":false,"about":"Developer • Tech Writer\r\n---\r\nFind me on [Web](https://bhupesh.me) | [Twitter](https://www.twitter.com/bhupeshimself) | [GitHub](https://github.com/Bhupesh-V)","is_moderator":false,"karma":131,"avatar_url":"/avatars/bhupesh-100.png","invited_by_user":"sathyabhat","github_username":"Bhupesh-V"},"user_is_author":true,"tags":["programming"]},{"short_id":"zlbaql","short_id_url":"https://lobste.rs/s/zlbaql","created_at":"2024-02-22T12:09:46.000-06:00","title":"*(char*)0 = 0; - What Does the C++ Programmer Intend With This Code?","url":"https://www.youtube.com/watch?v=dFIqNZ8VbRY","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zlbaql/char_0_0_what_does_c_programmer_intend_with","submitter_user":{"username":"jibsen","created_at":"2016-11-13T08:05:42.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":361,"avatar_url":"/avatars/jibsen-100.png","invited_by_user":"awal","github_username":"jibsen"},"user_is_author":false,"tags":["c++","video"]},{"short_id":"mgxxki","short_id_url":"https://lobste.rs/s/mgxxki","created_at":"2024-02-22T08:59:08.000-06:00","title":"Cyberbullying Gone Global: Fediverse Spam and Operation Beleaguer","url":"https://blog.fyralabs.com/cyberbullying-gone-global-regarding-the-fediverse-spam-and-operation-beleaguer/","score":14,"flags":2,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mgxxki/cyberbullying_gone_global_fediverse","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":102468,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"user_is_author":false,"tags":["security"]},{"short_id":"ogsmxo","short_id_url":"https://lobste.rs/s/ogsmxo","created_at":"2024-02-22T08:10:04.000-06:00","title":"Unification-free (\"keyword\") type checking","url":"https://www.haskellforall.com/2024/02/unification-free-keyword-type-checking.html","score":37,"flags":0,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ogsmxo/unification_free_keyword_type_checking","submitter_user":{"username":"Gabriella439","created_at":"2022-05-09T10:31:48.000-05:00","is_admin":false,"about":"Author of @dhall_lang, haskellforall.com, and countless packages and presentations.\r\n\r\nLeads Haskell+Nix team at @AristaNetworks.\r\n\r\nFP simp (she/they) 🏳️‍⚧","is_moderator":false,"karma":462,"avatar_url":"/avatars/Gabriella439-100.png","invited_by_user":"joepie91","github_username":"Gabriella439"},"user_is_author":true,"tags":["plt"]},{"short_id":"hurio2","short_id_url":"https://lobste.rs/s/hurio2","created_at":"2024-02-22T06:19:24.000-06:00","title":"Building a Fly.io-like Scheduler","url":"https://www.aspiring.dev/fly-io-scheduler-part-1/","score":16,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hurio2/building_fly_io_like_scheduler","submitter_user":{"username":"danthegoodman1","created_at":"2023-12-12T09:12:33.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":41,"avatar_url":"/avatars/danthegoodman1-100.png","invited_by_user":"eatonphil"},"user_is_author":true,"tags":["distributed"]},{"short_id":"mk9kwb","short_id_url":"https://lobste.rs/s/mk9kwb","created_at":"2024-02-22T04:57:27.000-06:00","title":"Rocher Color: making a variable color font","url":"https://www.harbortype.com/rocher-color-making-a-variable-color-font/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mk9kwb/rocher_color_making_variable_color_font","submitter_user":{"username":"r2gf","created_at":"2017-12-20T04:03:14.000-06:00","is_admin":false,"about":"Digital archivist for a Swiss cultural heritage institution.\r\n\r\nAvatar is \"Pixelated Floppy Disk\" by Jamison Wieser from the Noun Project ","is_moderator":false,"karma":361,"avatar_url":"/avatars/r2gf-100.png","invited_by_user":"gerikson"},"user_is_author":false,"tags":["design"]},{"short_id":"ts7lrt","short_id_url":"https://lobste.rs/s/ts7lrt","created_at":"2024-02-22T04:07:30.000-06:00","title":"TypeFunc: Resources for type theory, functional programming, etc","url":"https://github.com/williamdemeo/TypeFunc","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ts7lrt/typefunc_resources_for_type_theory","submitter_user":{"username":"felixyz","created_at":"2019-04-18T05:08:50.000-05:00","is_admin":false,"about":"Host of The Search Space podcast (thesearch.space)\r\n\r\nInto logic programming, constraints, architecture, testing, trying to understand each other, and SQL. \r\n\r\nAlso: Buddhism, boogie-woogie, and cocktails.","is_moderator":false,"karma":667,"avatar_url":"/avatars/felixyz-100.png","invited_by_user":"owi"},"user_is_author":false,"tags":["math","plt"]},{"short_id":"pxpapm","short_id_url":"https://lobste.rs/s/pxpapm","created_at":"2024-02-22T03:19:37.000-06:00","title":"Build your own Database Index: part 1","url":"https://dx13.co.uk/articles/2023/12/02/byo-index-pt1/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pxpapm/build_your_own_database_index_part_1","submitter_user":{"username":"garrensmith","created_at":"2020-02-11T11:08:46.000-06:00","is_admin":false,"about":"Tigris Founding Engineer, formerly Prisma, CouchDB PMC. Rust, Go, Databases and distributed systems. Lives in sunny South Africa.","is_moderator":false,"karma":116,"avatar_url":"/avatars/garrensmith-100.png","invited_by_user":"banjiewen","github_username":"garrensmith"},"user_is_author":false,"tags":["databases","go"]},{"short_id":"dtbswk","short_id_url":"https://lobste.rs/s/dtbswk","created_at":"2024-02-22T02:58:31.000-06:00","title":"Unexplanations: query optimization works because sql is declarative","url":"https://www.scattered-thoughts.net/writing/unexplanations-sql-declarative/","score":38,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dtbswk/unexplanations_query_optimization","submitter_user":{"username":"PicNoir","created_at":"2016-11-29T13:59:03.000-06:00","is_admin":false,"about":"Was NinjaTrappeur\r\n\r\nNixOS maintainer.\r\nGuix enthousiast.\r\n\r\n* [My website](https://alternativebit.fr)\r\n* [Mastodon](https://social.alternativebit.fr/users/ninjatrappeur)","is_moderator":false,"karma":1492,"avatar_url":"/avatars/PicNoir-100.png","invited_by_user":"friendlysock","github_username":"picnoir"},"user_is_author":false,"tags":["plt"]},{"short_id":"3xtgfw","short_id_url":"https://lobste.rs/s/3xtgfw","created_at":"2024-02-21T23:11:06.000-06:00","title":"A vintage network attack called smurf","url":"https://rachelbythebay.com/w/2024/02/21/bcast/","score":14,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3xtgfw/vintage_network_attack_called_smurf","submitter_user":{"username":"l0b0","created_at":"2022-02-14T02:54:31.000-06:00","is_admin":false,"about":"Open source developer.","is_moderator":false,"karma":1673,"avatar_url":"/avatars/l0b0-100.png","invited_by_user":"gerikson","github_username":"l0b0"},"user_is_author":false,"tags":["networking"]},{"short_id":"oafwex","short_id_url":"https://lobste.rs/s/oafwex","created_at":"2024-02-21T20:43:46.000-06:00","title":"Voyager 1’s Lonely Death","url":"https://crookedtimber.org/2024/02/19/death-lonely-death/","score":68,"flags":2,"comment_count":20,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oafwex/voyager_1_s_lonely_death","submitter_user":{"username":"mperham","created_at":"2015-11-16T14:45:04.000-06:00","is_admin":false,"about":"Open source developer and entrepreneur, creator of Sidekiq and Faktory","is_moderator":false,"karma":2381,"avatar_url":"/avatars/mperham-100.png","invited_by_user":"benlovell","github_username":"mperham"},"user_is_author":false,"tags":["science"]}]