[{"short_id":"zk2h6g","short_id_url":"https://lobste.rs/s/zk2h6g","created_at":"2023-07-11T18:53:21.000-05:00","title":"Why it’s necessary to shoot yourself in the foot","url":"https://g-w1.github.io/blog/observation/2023/07/08/shoot-yourself-in-the-foot.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zk2h6g/why_it_s_necessary_shoot_yourself_foot","submitter_user":{"username":"g-w1","created_at":"2021-03-13T20:03:22.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":439,"avatar_url":"/avatars/g-w1-100.png","invited_by_user":"vaibhavsagar","github_username":"g-w1"},"tags":["programming"]},{"short_id":"cmvceq","short_id_url":"https://lobste.rs/s/cmvceq","created_at":"2023-07-11T18:03:18.000-05:00","title":"A Security RISC: Microarchitectural Attacks on Hardware RISC-V CPUs","url":"https://www.youtube.com/watch?v=3-c4C_L2PRQ","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cmvceq/security_risc_microarchitectural","submitter_user":{"username":"dbremner","created_at":"2012-09-06T19:01:18.000-05:00","is_admin":false,"about":"C, C++, C#, and recently Python, Swift, and Objective-C.  \r\nLearning Scala.","is_moderator":false,"karma":2835,"avatar_url":"/avatars/dbremner-100.png","invited_by_user":"pushcx","github_username":"dbremner"},"tags":["security","video"]},{"short_id":"n744hy","short_id_url":"https://lobste.rs/s/n744hy","created_at":"2023-07-11T15:14:02.000-05:00","title":"newpipe.net removed from Google search results due to DMCA take down request","url":"https://newpipe.net/blog/pinned/announcement/newpipe-net-dmca-google-search/","score":6,"flags":3,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n744hy/newpipe_net_removed_from_google_search","submitter_user":{"username":"comzeradd","created_at":"2017-07-12T12:10:16.000-05:00","is_admin":false,"about":"Open Source Engineer","is_moderator":false,"karma":356,"avatar_url":"/avatars/comzeradd-100.png","invited_by_user":"elkos","github_username":"comzeradd","twitter_username":"comzeradd"},"tags":["android"]},{"short_id":"meeavr","short_id_url":"https://lobste.rs/s/meeavr","created_at":"2023-07-11T14:26:40.000-05:00","title":"KAP","url":"https://codeberg.org/loke/array","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/meeavr/kap","submitter_user":{"username":"bkhl","created_at":"2021-12-15T16:17:18.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":399,"avatar_url":"/avatars/bkhl-100.png","invited_by_user":"technomancy"},"tags":["apl","programming"]},{"short_id":"nwzykw","short_id_url":"https://lobste.rs/s/nwzykw","created_at":"2023-07-11T13:30:13.000-05:00","title":"Permission","url":"https://adactio.com/journal/20315","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nwzykw/permission","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":11491,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["ai"]},{"short_id":"jiovgt","short_id_url":"https://lobste.rs/s/jiovgt","created_at":"2023-07-11T13:20:21.000-05:00","title":"Regex Isn't Hard","url":"https://timkellogg.me/blog/2023/07/11/regex","score":12,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jiovgt/regex_isn_t_hard","submitter_user":{"username":"kellogh","created_at":"2014-01-08T17:10:46.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":2356,"avatar_url":"/avatars/kellogh-100.png","invited_by_user":"qbit","github_username":"tkellogg","twitter_username":"kellogh"},"tags":["programming"]},{"short_id":"43ghdi","short_id_url":"https://lobste.rs/s/43ghdi","created_at":"2023-07-11T12:34:54.000-05:00","title":"Modeling Game Mechanics with Ceptre","url":"https://www.convivial.tools/PapersPublic/ceptre-tog.pdf","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eGame description languages have a variety of uses, including formal reasoning about the emergent consequences of a game’s mechanics, implementation of artificial intelligence decision-making where the game’s rules make up the space of possible actions, automated game and level generation, and game prototyping for the sake of low-time-investment design and tinkering. However, in practice, a new game description language has been invented for almost every new use case, without providing formal underpinnings that follow generalizable principles and can be reasoned about separately from the specific software implementation of the language. Ceptre is a language that attempts to break this pattern, based on an old idea known as multiset rewriting. This paper describes the language formally, through example, and in a tutorial style, then demonstrates its use for writing formal specifications of game mechanics so that they may be interactively explored, queried, and analyzed in a computational framework. Ceptre allows designers to step through executions, interact with the mechanics from the standpoint of a player, run random simulated playthroughs, collect and analyze data from said playthroughs, and formally verify mathematical properties of the mechanics, and it has been used in a number of research projects since its inception, for applications such as procedural narrative generation, formal game modeling, and game AI.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://ieeexplore.ieee.org/abstract/document/10174675\" rel=\"ugc\"\u003eIEEE\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Game description languages have a variety of uses, including formal reasoning about the emergent consequences of a game's mechanics, implementation of artificial intelligence decision-making where the game's rules make up the space of possible actions, automated game and level generation, and game prototyping for the sake of low-time-investment design and tinkering. However, in practice, a new game description language has been invented for almost every new use case, without providing formal underpinnings that follow generalizable principles and can be reasoned about separately from the specific software implementation of the language. Ceptre is a language that attempts to break this pattern, based on an old idea known as multiset rewriting. This paper describes the language formally, through example, and in a tutorial style, then demonstrates its use for writing formal specifications of game mechanics so that they may be interactively explored, queried, and analyzed in a computational framework. Ceptre allows designers to step through executions, interact with the mechanics from the standpoint of a player, run random simulated playthroughs, collect and analyze data from said playthroughs, and formally verify mathematical properties of the mechanics, and it has been used in a number of research projects since its inception, for applications such as procedural narrative generation, formal game modeling, and game AI.\r\n\r\n[IEEE](https://ieeexplore.ieee.org/abstract/document/10174675)","comments_url":"https://lobste.rs/s/43ghdi/modeling_game_mechanics_with_ceptre","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":97475,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["compsci","games","pdf"]},{"short_id":"hgsqun","short_id_url":"https://lobste.rs/s/hgsqun","created_at":"2023-07-11T11:40:31.000-05:00","title":"Fighting Rust Anxiety: Insights from a Go Developer, Navigating Rust Syntax Shenanigans","url":"https://arriqaaq.substack.com/p/fighting-rust-anxiety-insights-from","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hgsqun/fighting_rust_anxiety_insights_from_go","submitter_user":{"username":"bugsmith","created_at":"2023-04-21T08:58:57.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":382,"avatar_url":"/avatars/bugsmith-100.png","invited_by_user":"river"},"tags":["go","programming","rust"]},{"short_id":"vhglry","short_id_url":"https://lobste.rs/s/vhglry","created_at":"2023-07-11T11:32:11.000-05:00","title":"Polymorphic Relationships in ActiveRecord","url":"https://dick.codes/2023/07/10/polymorphic-relationships.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vhglry/polymorphic_relationships","submitter_user":{"username":"dickdavis","created_at":"2018-12-26T12:39:28.000-06:00","is_admin":false,"about":"I'm into software development, baseball, and reading.","is_moderator":false,"karma":29,"avatar_url":"/avatars/dickdavis-100.png","invited_by_user":"mabynogy","github_username":"dickdavis"},"tags":["ruby"]},{"short_id":"nvtnqv","short_id_url":"https://lobste.rs/s/nvtnqv","created_at":"2023-07-11T11:17:51.000-05:00","title":"Retro: a modern, pragmatic Forth","url":"https://retroforth.org/","score":11,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nvtnqv/retro_modern_pragmatic_forth","submitter_user":{"username":"Drakonis","created_at":"2016-09-05T12:37:08.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":221,"avatar_url":"/avatars/Drakonis-100.png","invited_by_user":"albino"},"tags":["programming"]},{"short_id":"ewxw1i","short_id_url":"https://lobste.rs/s/ewxw1i","created_at":"2023-07-11T11:10:12.000-05:00","title":"Less-technical introductions to type checking?","url":"","score":14,"flags":0,"comment_count":15,"description":"\u003cp\u003eI’ve picked up my \u003ca href=\"https://github.com/snej/tails\" rel=\"ugc\"\u003eTails\u003c/a\u003e project again — a little Forth-like language using a fast tail-calling threaded interpreter. It’s statically-typed, but I’ve run into the limits of its very simple type system and I want to fix that*.\u003c/p\u003e\n\u003cp\u003eI’d like to read more about type systems, type checkers, type inference … but everything I’ve seen on the topic is quite technical and leaves me lost in a fog of lambda calculus, category theory and advanced FP techniques.\u003c/p\u003e\n\u003cp\u003eIs there anything that explains these topics from more of an implementor’s perspective, preferably without assuming the reader is skilled in OCaml or Haskell, and preferably using [pseudo]code instead of math notation? Or do I need to suck it up and study texts like \u003cem\u003eSICP\u003c/em\u003e and \u003cem\u003eLearn You A Haskell\u003c/em\u003e first?\u003c/p\u003e\n\u003cp\u003eFWIW, I’m pretty familiar with parsers and bytecode interpreters, having implemented several over the years, but for \u003cem\u003edynamically typed\u003c/em\u003e languages. Tails is my first attempt at static typing.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e* the problems I’m working on now have to do with type-checking calls to lambdas (“quotes”). I need to extend the type system to represent the signature of a lambda parameter within a function signature, and to do this “row polymorphism” thing that’s unique to concatenative languages.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"I’ve picked up my [Tails](https://github.com/snej/tails) project again — a little Forth-like language using a fast tail-calling threaded interpreter. It’s statically-typed, but I’ve run into the limits of its very simple type system and I want to fix that\\*.\r\n\r\nI’d like to read more about type systems, type checkers, type inference … but everything I’ve seen on the topic is quite technical and leaves me lost in a fog of lambda calculus, category theory and advanced FP techniques.\r\n\r\nIs there anything that explains these topics from more of an implementor’s perspective, preferably without assuming the reader is skilled in OCaml or Haskell, and preferably using [pseudo]code instead of math notation? Or do I need to suck it up and study texts like _SICP_ and _Learn You A Haskell_ first?\r\n\r\nFWIW, I’m pretty familiar with parsers and bytecode interpreters, having implemented several over the years, but for _dynamically typed_ languages. Tails is my first attempt at static typing.\r\n\r\n\u003e \\* the problems I’m working on now have to do with type-checking calls to lambdas (“quotes”). I need to extend the type system to represent the signature of a lambda parameter within a function signature, and to do this “row polymorphism” thing that’s unique to concatenative languages.","comments_url":"https://lobste.rs/s/ewxw1i/less_technical_introductions_type","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":9126,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"tags":["ask","compilers","plt"]},{"short_id":"p4ysc0","short_id_url":"https://lobste.rs/s/p4ysc0","created_at":"2023-07-11T11:09:25.000-05:00","title":"C++23: The Next C++ Standard","url":"http://modernescpp.com/index.php/c-23-the-next-c-standard","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p4ysc0/c_23_next_c_standard","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":21604,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"eoa0ku","short_id_url":"https://lobste.rs/s/eoa0ku","created_at":"2023-07-11T11:06:57.000-05:00","title":"DEF CON 30 - Zachary Minneker - How To Get MUMPS Thirty Years Later - Hacking the Govt w FOIAd Code","url":"https://www.youtube.com/watch?v=nSbN7p39SrA","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eoa0ku/def_con_30_zachary_minneker_how_get_mumps","submitter_user":{"username":"bowyakka","created_at":"2014-04-02T09:33:26.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":280,"avatar_url":"/avatars/bowyakka-100.png","invited_by_user":"andrewcooke"},"tags":["security","video"]},{"short_id":"s1h7oe","short_id_url":"https://lobste.rs/s/s1h7oe","created_at":"2023-07-11T10:48:30.000-05:00","title":"Generate from Constraints: Using Prompt-Hoisting for GPT-based Code Generation","url":"https://michaelfeathers.silvrback.com/prompt-hoisting-for-gpt-based-code-generation ","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/s1h7oe/generate_from_constraints_using_prompt","submitter_user":{"username":"mfeathers","created_at":"2017-10-30T10:30:24.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1254,"avatar_url":"/avatars/mfeathers-100.png","invited_by_user":"singpolyma"},"tags":["ai","formalmethods","practices","testing"]},{"short_id":"9xeffm","short_id_url":"https://lobste.rs/s/9xeffm","created_at":"2023-07-11T10:20:42.000-05:00","title":"Vale's First Prototype for Immutable Region Borrowing","url":"https://verdagon.dev/blog/first-regions-prototype","score":16,"flags":1,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9xeffm/vale_s_first_prototype_for_immutable","submitter_user":{"username":"Verdagon","created_at":"2020-07-31T04:47:19.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":294,"avatar_url":"/avatars/Verdagon-100.png","invited_by_user":"slavfox"},"tags":["performance","plt"]},{"short_id":"xagolr","short_id_url":"https://lobste.rs/s/xagolr","created_at":"2023-07-11T10:00:42.000-05:00","title":"Building a UI component library: How we balance brand identity and speed","url":"https://einride.engineering/blog/building-a-ui-component-library/","score":0,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xagolr/building_ui_component_library_how_we","submitter_user":{"username":"odsod","created_at":"2018-01-11T13:17:04.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":6,"avatar_url":"/avatars/odsod-100.png","invited_by_user":"felipecrv"},"tags":["design","web"]},{"short_id":"xvxrv2","short_id_url":"https://lobste.rs/s/xvxrv2","created_at":"2023-07-11T09:53:21.000-05:00","title":"The day my ping took countermeasures","url":"https://blog.cloudflare.com/the-day-my-ping-took-countermeasures/","score":11,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xvxrv2/day_my_ping_took_countermeasures","submitter_user":{"username":"majke","created_at":"2018-03-29T10:41:09.000-05:00","is_admin":false,"about":"  Enthusiastic geek         https://idea.popcount.org\r\n                            https://github.com/majek","is_moderator":false,"karma":785,"avatar_url":"/avatars/majke-100.png","invited_by_user":"jamesog"},"tags":["linux","networking"]},{"short_id":"3xzdhe","short_id_url":"https://lobste.rs/s/3xzdhe","created_at":"2023-07-11T08:11:52.000-05:00","title":"mirrord as an alternative to Telepresence","url":"https://metalbear.co/blog/mirrord-as-an-alternative-to-telepresence/","score":7,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3xzdhe/mirrord_as_alternative_telepresence","submitter_user":{"username":"infiniteregrets","created_at":"2022-07-05T11:05:02.000-05:00","is_admin":false,"about":"Hi! My name is Mehul and I am studying CS at McMasterU and working at MetalBear!","is_moderator":false,"karma":33,"avatar_url":"/avatars/infiniteregrets-100.png","invited_by_user":"355E3B"},"tags":["debugging","devops"]},{"short_id":"nsa1tj","short_id_url":"https://lobste.rs/s/nsa1tj","created_at":"2023-07-11T07:22:35.000-05:00","title":"Atuin's new encryption scheme","url":"https://atuin.sh/blog/new-encryption","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nsa1tj/atuin_s_new_encryption_scheme","submitter_user":{"username":"athaller","created_at":"2021-01-13T05:40:18.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":48,"avatar_url":"/avatars/athaller-100.png","invited_by_user":"mre"},"tags":["cryptography"]},{"short_id":"kwqkar","short_id_url":"https://lobste.rs/s/kwqkar","created_at":"2023-07-11T07:16:49.000-05:00","title":"We Put a Distributed Database In the Browser – And Made a Game of It","url":"https://tigerbeetle.com/blog/2023-07-11-we-put-a-distributed-database-in-the-browser/","score":43,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kwqkar/we_put_distributed_database_browser_made","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Cofounder at tigerbeetle.com. More info at eatonphil.com.\r\n\r\nphil@eatonphil.com","is_moderator":false,"karma":5031,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"tags":["databases","distributed","testing","zig"]},{"short_id":"1xfom3","short_id_url":"https://lobste.rs/s/1xfom3","created_at":"2023-07-11T07:05:11.000-05:00","title":"Smaller Is Better: Ultra-Compact Graph Representations for Big Graphs","url":"https://dzone.com/articles/smaller-is-better-ultra-compact-graph-representati","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1xfom3/smaller_is_better_ultra_compact_graph","submitter_user":{"username":"LukeEF","created_at":"2020-04-14T18:02:45.000-05:00","is_admin":false,"about":"Sunlit Uplands","is_moderator":false,"karma":61,"avatar_url":"/avatars/LukeEF-100.png","invited_by_user":"Hail_Spacecake"},"tags":["databases","performance","scaling"]},{"short_id":"j8xgym","short_id_url":"https://lobste.rs/s/j8xgym","created_at":"2023-07-11T06:21:45.000-05:00","title":"pytest fixtures are magic","url":"https://www.revsys.com/tidbits/pytest-fixtures-are-magic/","score":12,"flags":0,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j8xgym/pytest_fixtures_are_magic","submitter_user":{"username":"frankwiles","created_at":"2017-03-09T11:22:03.000-06:00","is_admin":false,"about":"Expert in building, scaling, and maintaining complex web applications. Python/Django/React/PostgreSQL on Kubernetes.\r\n\r\nPresident/Founder of REVSYS (www.revsys.com @revsys) and Former President of the Django Software Foundation","is_moderator":false,"karma":12,"avatar_url":"/avatars/frankwiles-100.png","invited_by_user":"myusuf3"},"tags":["python","testing"]},{"short_id":"pyabj4","short_id_url":"https://lobste.rs/s/pyabj4","created_at":"2023-07-11T05:57:44.000-05:00","title":"Divvi Up: A privacy-respecting system for aggregate statistics","url":"https://divviup.org/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pyabj4/divvi_up_privacy_respecting_system_for","submitter_user":{"username":"ignaloidas","created_at":"2019-07-23T05:41:19.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":3315,"avatar_url":"/avatars/ignaloidas-100.png","invited_by_user":"wink","keybase_signatures":[{"kb_username":"ignaloidas","sig_hash":"1a9cb145e5b12dadd9fdff677e84eb9de319734d21fec025af9f6818f347eba70f"}]},"tags":["cryptography","privacy"]},{"short_id":"zemngq","short_id_url":"https://lobste.rs/s/zemngq","created_at":"2023-07-11T05:47:37.000-05:00","title":"What is Functional Programming?","url":"https://joseph.yiasemides.com/posts/what-is-functional-programming","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zemngq/what_is_functional_programming","submitter_user":{"username":"Dzol","created_at":"2016-08-02T15:16:49.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2,"avatar_url":"/avatars/Dzol-100.png","invited_by_user":"elbrujohalcon","github_username":"Dzol"},"tags":["elixir","javascript","programming"]},{"short_id":"6fvizz","short_id_url":"https://lobste.rs/s/6fvizz","created_at":"2023-07-11T05:43:26.000-05:00","title":"Zig Bits 0x4 - Building an HTTP client/server from scratch","url":"https://blog.orhun.dev/zig-bits-04/","score":9,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6fvizz/zig_bits_0x4_building_http_client_server","submitter_user":{"username":"orhun","created_at":"2022-04-16T17:58:30.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":242,"avatar_url":"/avatars/orhun-100.png","invited_by_user":"extrawurst"},"tags":["programming","zig"]}]