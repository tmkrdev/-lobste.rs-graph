[{"short_id":"ieqalm","short_id_url":"https://lobste.rs/s/ieqalm","created_at":"2024-10-28T05:10:36.000-05:00","title":"What are you doing this week?","url":"","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/ieqalm/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"og3qdj","short_id_url":"https://lobste.rs/s/og3qdj","created_at":"2024-10-28T03:32:04.000-05:00","title":"Mantis is a unified infrastructure as code framework that replaces Terraform and Helm","url":"https://github.com/pranil-augur/mantis","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eA fork of OpenTofu that uses CUE (a superset of JSON) to replace HCL we use in Terraform, Helmfiles, and policies (e.g., OPA and Rego).\u003c/p\u003e\n","description_plain":"A fork of OpenTofu that uses CUE (a superset of JSON) to replace HCL we use in Terraform, Helmfiles, and policies (e.g., OPA and Rego).","comments_url":"https://lobste.rs/s/og3qdj/mantis_is_unified_infrastructure_as_code","submitter_user":"shurup","user_is_author":false,"tags":["devops"]},{"short_id":"qkvlhc","short_id_url":"https://lobste.rs/s/qkvlhc","created_at":"2024-10-28T02:57:30.000-05:00","title":"How we built object notifications in Tigris","url":"https://www.tigrisdata.com/blog/how-we-built-object-notifications/","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qkvlhc/how_we_built_object_notifications_tigris","submitter_user":"garrensmith","user_is_author":true,"tags":["databases","distributed"]},{"short_id":"xopqmh","short_id_url":"https://lobste.rs/s/xopqmh","created_at":"2024-10-28T02:24:21.000-05:00","title":"SQLite rsync: Database Remote-Copy Tool For SQLite","url":"https://sqlite.org/rsync.html","score":14,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xopqmh/sqlite_rsync_database_remote_copy_tool","submitter_user":"Peter5","user_is_author":false,"tags":["databases"]},{"short_id":"tpvsa4","short_id_url":"https://lobste.rs/s/tpvsa4","created_at":"2024-10-28T01:44:53.000-05:00","title":"Unit testing from inside an assembler","url":"https://boston.conman.org/2024/10/13.2","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tpvsa4/unit_testing_from_inside_assembler","submitter_user":"raymii","user_is_author":false,"tags":["assembly"]},{"short_id":"xgitmt","short_id_url":"https://lobste.rs/s/xgitmt","created_at":"2024-10-28T01:41:58.000-05:00","title":"Becoming physically immune to brute-force attacks","url":"https://seirdy.one/posts/2021/01/12/password-strength/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xgitmt/becoming_physically_immune_brute_force","submitter_user":"Hail_Spacecake","user_is_author":false,"tags":["cryptography"]},{"short_id":"kuhlap","short_id_url":"https://lobste.rs/s/kuhlap","created_at":"2024-10-28T01:20:17.000-05:00","title":"OpenZFS deduplication is good now and you shouldn't use it","url":"https://despairlabs.com/blog/posts/2024-10-27-openzfs-dedup-is-good-dont-use-it/","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kuhlap/openzfs_deduplication_is_good_now_you","submitter_user":"adavis","user_is_author":false,"tags":["freebsd","linux"]},{"short_id":"puq8jd","short_id_url":"https://lobste.rs/s/puq8jd","created_at":"2024-10-27T19:33:38.000-05:00","title":"What’s New in POSIX 2024 – XCU","url":"https://blog.toast.cafe/posix2024-xcu","score":28,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/puq8jd/what_s_new_posix_2024_xcu","submitter_user":"calvin","user_is_author":false,"tags":["unix"]},{"short_id":"xf2sjp","short_id_url":"https://lobste.rs/s/xf2sjp","created_at":"2024-10-27T17:45:20.000-05:00","title":"Platform Strategy and Its Discontents","url":"https://infrequently.org/2024/10/platforms-are-competitions/","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xf2sjp/platform_strategy_its_discontents","submitter_user":"nolan","user_is_author":false,"tags":["browsers","performance","web"]},{"short_id":"uybgwr","short_id_url":"https://lobste.rs/s/uybgwr","created_at":"2024-10-27T15:43:22.000-05:00","title":"An unexpected discovery: Automated reasoning often makes systems more efficient and easier to maintain","url":"https://aws.amazon.com/blogs/security/an-unexpected-discovery-automated-reasoning-often-makes-systems-more-efficient-and-easier-to-maintain/","score":8,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uybgwr/unexpected_discovery_automated","submitter_user":"knl","user_is_author":false,"tags":["distributed","formalmethods","practices"]},{"short_id":"9xlvvf","short_id_url":"https://lobste.rs/s/9xlvvf","created_at":"2024-10-27T14:55:43.000-05:00","title":"Introducing zizmor: now you can have beautiful clean workflows","url":"https://blog.yossarian.net/2024/10/27/Now-you-can-have-beautiful-clean-workflows","score":15,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9xlvvf/introducing_zizmor_now_you_can_have","submitter_user":"yossarian","user_is_author":true,"tags":["rust","security"]},{"short_id":"vqlwj6","short_id_url":"https://lobste.rs/s/vqlwj6","created_at":"2024-10-27T14:12:42.000-05:00","title":"Mutation Testing Better Than Coverage","url":"https://youtu.be/Ed6Ocs3U1v4","score":5,"flags":0,"comment_count":2,"description":"\u003cp\u003eMutation Testing Better Than Coverage by Charlie Ray at (fourteenth RacketCon) is now available at \u003ca href=\"https://youtu.be/Ed6Ocs3U1v4\" rel=\"ugc\"\u003ehttps://youtu.be/Ed6Ocs3U1v4\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Mutation Testing Better Than Coverage by Charlie Ray at (fourteenth RacketCon) is now available at https://youtu.be/Ed6Ocs3U1v4","comments_url":"https://lobste.rs/s/vqlwj6/mutation_testing_better_than_coverage","submitter_user":"spdegabrielle","user_is_author":false,"tags":["lisp","video"]},{"short_id":"utgu08","short_id_url":"https://lobste.rs/s/utgu08","created_at":"2024-10-27T13:50:08.000-05:00","title":"Cloud-Native Database Systems and Unikernels: Reimagining OS Abstractions for Modern Hardware","url":"https://www.vldb.org/pvldb/vol17/p2115-leis.pdf","score":12,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/utgu08/cloud_native_database_systems","submitter_user":"manuel","user_is_author":false,"tags":["databases","osdev","pdf"]},{"short_id":"6htemr","short_id_url":"https://lobste.rs/s/6htemr","created_at":"2024-10-27T12:04:38.000-05:00","title":"A comparison of Rust’s borrow checker to the one in C#","url":"https://em-tg.github.io/csborrow/","score":36,"flags":1,"comment_count":24,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6htemr/comparison_rust_s_borrow_checker_one_c","submitter_user":"kornel","user_is_author":false,"tags":["dotnet","rust"]},{"short_id":"wcndle","short_id_url":"https://lobste.rs/s/wcndle","created_at":"2024-10-27T10:16:48.000-05:00","title":"This site can't be reached, but the content still exists somewhere in the cosmos","url":"https://ipfs.io/ipfs/QmcVwBYE7Apg8UyBMpeVV43imEBa4SJ51uENxi6kwLh7te","score":15,"flags":0,"comment_count":34,"description":"\u003cp\u003eI had written this article before submitting \u003ca href=\"https://lobste.rs/s/liwv8u/why_can_t_we_submit_magnet_ipfs_urls\" rel=\"ugc\"\u003ehttps://lobste.rs/s/liwv8u/why_can_t_we_submit_magnet_ipfs_urls\u003c/a\u003e and not the other way around.\u003c/p\u003e\n\u003cp\u003eIt took 1+ day for this content to propagate to the IPFS gate.\u003c/p\u003e\n","description_plain":"I had written this article before submitting https://lobste.rs/s/liwv8u/why_can_t_we_submit_magnet_ipfs_urls and not the other way around.\r\n\r\nIt took 1+ day for this content to propagate to the IPFS gate.","comments_url":"https://lobste.rs/s/wcndle/this_site_can_t_be_reached_content_still","submitter_user":"LenFalken","user_is_author":true,"tags":["culture"]},{"short_id":"oqtxv4","short_id_url":"https://lobste.rs/s/oqtxv4","created_at":"2024-10-27T09:39:49.000-05:00","title":"The unreleased Commodore HHC-4's secret identity","url":"http://oldvcr.blogspot.com/2024/10/the-unreleased-commodore-hhc-4s-secret.html","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oqtxv4/unreleased_commodore_hhc_4_s_secret","submitter_user":"classichasclass","user_is_author":true,"tags":["retrocomputing"]},{"short_id":"0bwocp","short_id_url":"https://lobste.rs/s/0bwocp","created_at":"2024-10-27T09:26:08.000-05:00","title":"Using less memory to look up IP addresses in Mess With DNS","url":"https://jvns.ca/blog/2024/10/27/asn-ip-address-memory/","score":17,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0bwocp/using_less_memory_look_up_ip_addresses","submitter_user":"calvin","user_is_author":false,"tags":["networking","performance"]},{"short_id":"tbcweu","short_id_url":"https://lobste.rs/s/tbcweu","created_at":"2024-10-27T06:02:49.000-05:00","title":"The Zero Click Internet","url":"https://www.techspot.com/article/2908-the-zero-click-internet/","score":1,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tbcweu/zero_click_internet","submitter_user":"dpk","user_is_author":false,"tags":["ai","web"]},{"short_id":"smzr1d","short_id_url":"https://lobste.rs/s/smzr1d","created_at":"2024-10-27T00:56:48.000-05:00","title":"Simplifying the Bench Kona","url":"https://www.projectgus.com/2024/10/simplifying-bench-kona/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/smzr1d/simplifying_bench_kona","submitter_user":"calvin","user_is_author":false,"tags":["hardware","reversing"]},{"short_id":"ffj9tg","short_id_url":"https://lobste.rs/s/ffj9tg","created_at":"2024-10-27T00:54:38.000-05:00","title":"Rudimentary 3D on the 2D HTML Canvas","url":"https://www.charlespetzold.com/blog/2024/09/Rudimentary-3D-on-the-2D-HTML-Canvas.html","score":7,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ffj9tg/rudimentary_3d_on_2d_html_canvas","submitter_user":"breadbox","user_is_author":false,"tags":["javascript","math"]},{"short_id":"s6zfxg","short_id_url":"https://lobste.rs/s/s6zfxg","created_at":"2024-10-27T00:19:27.000-05:00","title":"Robots.txt pitfalls: what I learned the hard way","url":"","score":13,"flags":0,"comment_count":7,"description":"\u003cp\u003eThis applies to sites indexed on Google that hope to gain organic traffic. As an indie blogger and SEO enthusiast, I foolishly updated my robots.txt file to prevent indexing of certain unwanted parts of my site, leading to subtle repercussions that I couldn’t have foreseen.\u003c/p\u003e\n\u003cp\u003eA few days ago, while reading about SEO, I came across the concept of a “crawl budget.” Apparently, Google allocates a specific crawl budget to your indexed site, and the more useless content it has to index and store on its servers, the more it affects your site—resulting in delays for new content indexing, favicon updates, and robots.txt crawling.\u003c/p\u003e\n\u003cp\u003eBeing a minimalist and utilitarian, I decided to prevent indexing of the \u003ccode\u003e/uploads/\u003c/code\u003e directory on my site since it mostly contained images used in my articles. I thought blocking this “useless content” would free up more crawling budget for my primary content, i.e., articles. So, I added this directory to my site’s robots.txt:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# Group 1\nUser-agent: *\nDisallow: /public/\nDisallow: /drafts/\nDisallow: /theme/\nDisallow: /page*\nDisallow: /uploads/\n\nSitemap: https://prahladyeri.github.io/sitemap.xml\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe way search engines work means there’s typically a 5-7 day gap between updating the robots.txt file and crawlers processing it. After about a week, I noticed that my site’s favicon disappeared from SERPs on mobile browsers! Instead, there was a bland (empty) icon in its place. That’s when I realized that my favicons also resided in the \u003ccode\u003e/uploads/\u003c/code\u003e directory. After I recently optimized the favicon format by switching from WEBP to PNG, Google was unable to crawl and index the new favicon at all!\u003c/p\u003e\n\u003cp\u003eOnce I realized this mistake, I removed the blocking of \u003ccode\u003e/uploads/\u003c/code\u003e from the robots.txt and requested a recrawl. But who knows how long it will take for Google’s systems to sync this change and start showing the site’s favicon back in SERPs! Two lessons learned:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eThe robots.txt file is highly sensitive; avoid modifying it if possible.\u003c/li\u003e\n\u003cli\u003eApplying SEO is like steering an extremely large ship or vessel. You pull a lever now, and the ship only moves after several days!\u003c/li\u003e\n\u003c/ol\u003e\n","description_plain":"This applies to sites indexed on Google that hope to gain organic traffic. As an indie blogger and SEO enthusiast, I foolishly updated my robots.txt file to prevent indexing of certain unwanted parts of my site, leading to subtle repercussions that I couldn't have foreseen.\r\n\r\nA few days ago, while reading about SEO, I came across the concept of a \"crawl budget.\" Apparently, Google allocates a specific crawl budget to your indexed site, and the more useless content it has to index and store on its servers, the more it affects your site—resulting in delays for new content indexing, favicon updates, and robots.txt crawling.\r\n\r\nBeing a minimalist and utilitarian, I decided to prevent indexing of the `/uploads/` directory on my site since it mostly contained images used in my articles. I thought blocking this \"useless content\" would free up more crawling budget for my primary content, i.e., articles. So, I added this directory to my site's robots.txt:\r\n\r\n\t# Group 1\r\n\tUser-agent: *\r\n\tDisallow: /public/\r\n\tDisallow: /drafts/\r\n\tDisallow: /theme/\r\n\tDisallow: /page*\r\n\tDisallow: /uploads/\r\n\r\n\tSitemap: https://prahladyeri.github.io/sitemap.xml\r\n\r\nThe way search engines work means there's typically a 5-7 day gap between updating the robots.txt file and crawlers processing it. After about a week, I noticed that my site's favicon disappeared from SERPs on mobile browsers! Instead, there was a bland (empty) icon in its place. That’s when I realized that my favicons also resided in the `/uploads/` directory. After I recently optimized the favicon format by switching from WEBP to PNG, Google was unable to crawl and index the new favicon at all!\r\n\r\nOnce I realized this mistake, I removed the blocking of `/uploads/` from the robots.txt and requested a recrawl. But who knows how long it will take for Google's systems to sync this change and start showing the site's favicon back in SERPs! Two lessons learned:\r\n\r\n1. The robots.txt file is highly sensitive; avoid modifying it if possible.\r\n2. Applying SEO is like steering an extremely large ship or vessel. You pull a lever now, and the ship only moves after several days!","comments_url":"https://lobste.rs/s/s6zfxg/robots_txt_pitfalls_what_i_learned_hard","submitter_user":"pyeri","user_is_author":true,"tags":["browsers","web"]},{"short_id":"limkks","short_id_url":"https://lobste.rs/s/limkks","created_at":"2024-10-27T00:11:10.000-05:00","title":"Typeset: An HTML pre-proces­sor for web ty­pog­ra­phy","url":"https://typeset.lllllllllllllllll.com/","score":19,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/limkks/typeset_html_pre_proces_sor_for_web_ty_pog","submitter_user":"jez","user_is_author":false,"tags":["css","design"]},{"short_id":"kfv8ri","short_id_url":"https://lobste.rs/s/kfv8ri","created_at":"2024-10-27T00:00:41.000-05:00","title":"A Secure, Local AI Solution for a Tidy Gmail Inbox","url":"https://spamslaya.com","score":13,"flags":2,"comment_count":23,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kfv8ri/secure_local_ai_solution_for_tidy_gmail","submitter_user":"shrayasr","user_is_author":true,"tags":["ai","show"]},{"short_id":"liwv8u","short_id_url":"https://lobste.rs/s/liwv8u","created_at":"2024-10-26T22:46:51.000-05:00","title":"Why can't we submit magnet or ipfs URLs?","url":"","score":10,"flags":0,"comment_count":24,"description":"\u003cp\u003eI’ve recently run into being fed up with the technology that is domains. I’m looking into sharing my content as magnet or ipfs links, but I see they aren’t supported here. Why? http/s clients are needed (and only the most simplest ones) to access lobste.rs but simply because lobste.rs is a centralized aggregation service which is free to pick the protocol it wants to use to sync readers. It takes the place of an RSS feed or similar, but the RSS feed can at least share any type of links while lobste.rs can’t.\u003c/p\u003e\n","description_plain":"I've recently run into being fed up with the technology that is domains. I'm looking into sharing my content as magnet or ipfs links, but I see they aren't supported here. Why? http/s clients are needed (and only the most simplest ones) to access lobste.rs but simply because lobste.rs is a centralized aggregation service which is free to pick the protocol it wants to use to sync readers. It takes the place of an RSS feed or similar, but the RSS feed can at least share any type of links while lobste.rs can't.","comments_url":"https://lobste.rs/s/liwv8u/why_can_t_we_submit_magnet_ipfs_urls","submitter_user":"LenFalken","user_is_author":true,"tags":["ask","meta"]},{"short_id":"yuyxk6","short_id_url":"https://lobste.rs/s/yuyxk6","created_at":"2024-10-26T20:35:10.000-05:00","title":"Thinking JavaScript (2017)","url":"https://davidwalsh.name/thinking-javascript","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yuyxk6/thinking_javascript_2017","submitter_user":"hwayne","user_is_author":false,"tags":["javascript"]}]