[{"short_id":"rzhhcz","short_id_url":"https://lobste.rs/s/rzhhcz","created_at":"2022-07-25T16:05:43.000-05:00","title":"Formalising a Simple Virtual Machine","url":"https://whileydave.com/2022/06/28/formalising-a-simple-virtual-machine/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rzhhcz/formalising_simple_virtual_machine","submitter_user":{"username":"redjamjar","created_at":"2017-08-24T20:45:57.000-05:00","is_admin":false,"about":"Author of the Whiley programming language. Senior Lecturer in Computer Science at Victoria University of Wellington, New Zealand.","is_moderator":false,"karma":153,"avatar_url":"/avatars/redjamjar-100.png","invited_by_user":"friendlysock"},"tags":["compilers","compsci","formalmethods"]},{"short_id":"amrraw","short_id_url":"https://lobste.rs/s/amrraw","created_at":"2022-07-25T15:07:37.000-05:00","title":"The limits of Python vectorization as a performance technique","url":"https://pythonspeed.com/articles/vectorization-python-alternatives/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/amrraw/limits_python_vectorization_as","submitter_user":{"username":"itamarst","created_at":"2016-04-28T10:05:47.000-05:00","is_admin":false,"about":"Writing about Python performance and faster development at https://pythonspeed.com, as well as offering consulting services. Writing about work/life balance and other software engineering skills at https://codewithoutrules.com.\r\n","is_moderator":false,"karma":4419,"avatar_url":"/avatars/itamarst-100.png","invited_by_user":"0x2ba22e11"},"tags":["performance","python"]},{"short_id":"pmyto4","short_id_url":"https://lobste.rs/s/pmyto4","created_at":"2022-07-25T13:23:35.000-05:00","title":"Error handler for CLI applications","url":"https://github.com/ehmicky/handle-cli-error","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pmyto4/error_handler_for_cli_applications","submitter_user":{"username":"ehmicky","created_at":"2019-01-21T08:33:02.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":29,"avatar_url":"/avatars/ehmicky-100.png","invited_by_user":"wink"},"tags":["javascript","nodejs"]},{"short_id":"tyz9lt","short_id_url":"https://lobste.rs/s/tyz9lt","created_at":"2022-07-25T12:27:28.000-05:00","title":"Fedora to disallow CC0-licensed code","url":"https://lwn.net/Articles/902410/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tyz9lt/fedora_disallow_cc0_licensed_code","submitter_user":{"username":"toastal","created_at":"2021-07-12T04:15:50.000-05:00","is_admin":false,"about":"a disciple of functional programming\r\n\r\nStop using Microsoft products; say _NO_ to neo-EEE including WSL, GitHub, Sponsors, Copilot, VS Code, Codespaces, Azure, npm","is_moderator":false,"karma":902,"avatar_url":"/avatars/toastal-100.png","invited_by_user":"gerikson","github_username":"toastal","twitter_username":"toastal","keybase_signatures":[{"kb_username":"toastal","sig_hash":"be4ea8b4b314c4342e5dd97f1d845cc8586de0b0ec40ab4cd872f31071eab6030f"}]},"tags":["law","linux"]},{"short_id":"fwiken","short_id_url":"https://lobste.rs/s/fwiken","created_at":"2022-07-25T12:08:52.000-05:00","title":"The most important ESLint rule: max-params","url":"","score":5,"flags":0,"comment_count":0,"description":"\u003cp\u003eLet me ask you: What do you think this code does?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-ts\"\u003eresizeImage(imagePath, 300, 200, true, true, 1)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIt resizes image… but what exactly does it do? For the most part, we cannot tell without looking up the function definition.\u003c/p\u003e\n\u003cp\u003eLet’s say you are reviewing a PR and it includes this change:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-diff\"\u003e-resizeImage(imagePath, 300, 200, true, true, 1)\n+resizeImage(imagePath, 300, 200, false, true, 1)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCan you confidently say what is the impact of this change? For the most part… no. You need to know what each positional argument does.\u003c/p\u003e\n\u003cp\u003eLet’s say you know that the interface is:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-ts\"\u003efunction resizeImage(\n  imagePath: string,\n  width: number,\n  height: number,\n  upscale: boolean,\n  crop: boolean,\n  quality: number,\n): Promise\u0026lt;Buffer\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBut now a PR introduces a change to the parameter order (e.g. to make it consistent with other functions):\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-diff\"\u003efunction resizeImage(\n  imagePath: string,\n  width: number,\n  height: number,\n+  crop: boolean,\n  upscale: boolean,\n-  crop: boolean,\n  quality: number,\n): Promise\u0026lt;Buffer\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHow do you review this change? Sure, reviewing the interface diff is easy, but what about the dozens or hundreds of diffs that update function invocation?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-diff\"\u003e-resizeImage(imagePath, 300, 200, true, false, 1)\n+resizeImage(imagePath, 300, 200, false, true, 1)\nresizeImage(imagePath, 300, 200, false, false, 1)\n-resizeImage(imagePath, 300, 200, false, true, 1)\n+resizeImage(imagePath, 300, 200, false, false, 1)\n-resizeImage(imagePath, 300, 200, true, false, 1)\n+resizeImage(imagePath, 300, 200, false, true, 1)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHopefully the problem is self-explanatory: Positional arguments create a breading ground for hard and even impossible bugs to catch/debug/fix, esp. when code needs to be refactored. Fear not though as there is a better way.\u003c/p\u003e\n\u003cp\u003eLet’s start from the start, but this time use a single-object parameter:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-ts\"\u003eresizeImage({\n  imagePath,\n  width: 300,\n  height: 200,\n  upscale: true,\n  crop: false,\n  quality: 1,\n})\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCan you tell what is the intention behind this code? Yes, you can get a good sense, even if you are not familiar with the implementation.\u003c/p\u003e\n\u003cp\u003eCan you easily refactor the interface? Yes, linter will warn you if contract is not satisfied.\u003c/p\u003e\n\u003cp\u003eWe end up with positional arguments because they feel the most natural to start with. However, as functions grow in scope, what started as a simple function with 1-2 arguments becomes an unreadable mess.\u003c/p\u003e\n\u003cp\u003eThis is where \u003ca href=\"https://eslint.org/docs/latest/rules/max-params\" rel=\"ugc\"\u003e\u003ccode\u003emax-params\u003c/code\u003e\u003c/a\u003e comes to the rescue. Simply adding an ESLint rule that restricts having functions with more than X parameters ensures that your code remains legible and easy to refactor as your codebase scales.\u003c/p\u003e\n","description_plain":"Let me ask you: What do you think this code does?\r\n\r\n```ts\r\nresizeImage(imagePath, 300, 200, true, true, 1)\r\n```\r\n\r\nIt resizes image... but what exactly does it do? For the most part, we cannot tell without looking up the function definition.\r\n\r\nLet's say you are reviewing a PR and it includes this change:\r\n\r\n```diff\r\n-resizeImage(imagePath, 300, 200, true, true, 1)\r\n+resizeImage(imagePath, 300, 200, false, true, 1)\r\n```\r\n\r\nCan you confidently say what is the impact of this change? For the most part... no. You need to know what each positional argument does.\r\n\r\nLet's say you know that the interface is:\r\n\r\n```ts\r\nfunction resizeImage(\r\n  imagePath: string,\r\n  width: number,\r\n  height: number,\r\n  upscale: boolean,\r\n  crop: boolean,\r\n  quality: number,\r\n): Promise\u003cBuffer\u003e\r\n```\r\n\r\nBut now a PR introduces a change to the parameter order (e.g. to make it consistent with other functions):\r\n\r\n```diff\r\nfunction resizeImage(\r\n  imagePath: string,\r\n  width: number,\r\n  height: number,\r\n+  crop: boolean,\r\n  upscale: boolean,\r\n-  crop: boolean,\r\n  quality: number,\r\n): Promise\u003cBuffer\u003e\r\n```\r\n\r\nHow do you review this change? Sure, reviewing the interface diff is easy, but what about the dozens or hundreds of diffs that update function invocation?\r\n\r\n```diff\r\n-resizeImage(imagePath, 300, 200, true, false, 1)\r\n+resizeImage(imagePath, 300, 200, false, true, 1)\r\nresizeImage(imagePath, 300, 200, false, false, 1)\r\n-resizeImage(imagePath, 300, 200, false, true, 1)\r\n+resizeImage(imagePath, 300, 200, false, false, 1)\r\n-resizeImage(imagePath, 300, 200, true, false, 1)\r\n+resizeImage(imagePath, 300, 200, false, true, 1)\r\n```\r\n\r\nHopefully the problem is self-explanatory: Positional arguments create a breading ground for hard and even impossible bugs to catch/debug/fix, esp. when code needs to be refactored. Fear not though as there is a better way.\r\n\r\nLet's start from the start, but this time use a single-object parameter:\r\n\r\n```ts\r\nresizeImage({\r\n  imagePath,\r\n  width: 300,\r\n  height: 200,\r\n  upscale: true,\r\n  crop: false,\r\n  quality: 1,\r\n})\r\n```\r\n\r\nCan you tell what is the intention behind this code? Yes, you can get a good sense, even if you are not familiar with the implementation.\r\n\r\nCan you easily refactor the interface? Yes, linter will warn you if contract is not satisfied.\r\n\r\nWe end up with positional arguments because they feel the most natural to start with. However, as functions grow in scope, what started as a simple function with 1-2 arguments becomes an unreadable mess.\r\n\r\nThis is where [`max-params`](https://eslint.org/docs/latest/rules/max-params) comes to the rescue. Simply adding an ESLint rule that restricts having functions with more than X parameters ensures that your code remains legible and easy to refactor as your codebase scales.","comments_url":"https://lobste.rs/s/fwiken/most_important_eslint_rule_max_params","submitter_user":{"username":"gajus","created_at":"2019-04-09T12:10:10.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2,"avatar_url":"/avatars/gajus-100.png","invited_by_user":"benharri","github_username":"gajus","twitter_username":"kuizinas"},"tags":["javascript"]},{"short_id":"fouuou","short_id_url":"https://lobste.rs/s/fouuou","created_at":"2022-07-25T12:04:56.000-05:00","title":"It’s time to leave the leap second in the past","url":"https://engineering.fb.com/2022/07/25/production-engineering/its-time-to-leave-the-leap-second-in-the-past/","score":7,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fouuou/it_s_time_leave_leap_second_past","submitter_user":{"username":"f96","created_at":"2022-06-05T14:48:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":203,"avatar_url":"/avatars/f96-100.png","invited_by_user":"varjag"},"tags":["devops","science"]},{"short_id":"ybb2ka","short_id_url":"https://lobste.rs/s/ybb2ka","created_at":"2022-07-25T11:28:25.000-05:00","title":"Yes, the 8086 wanted to be mechanically translatable from the 8080, but why not add the ability to indirect through AX, CX and DX?","url":"https://devblogs.microsoft.com/oldnewthing/20220725-00/?p=106889","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ybb2ka/yes_8086_wanted_be_mechanically","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":92505,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["assembly"]},{"short_id":"kmgzqk","short_id_url":"https://lobste.rs/s/kmgzqk","created_at":"2022-07-25T10:56:03.000-05:00","title":"Solving “The Dangler” Conundrum with Container Queries and :has()","url":"https://daverupert.com/2022/07/solving-the-dangler-conundrum-with-has-and-container-queries/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kmgzqk/solving_dangler_conundrum_with","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":4559,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["css"]},{"short_id":"mvph8s","short_id_url":"https://lobste.rs/s/mvph8s","created_at":"2022-07-25T10:05:26.000-05:00","title":"The impact of iOS 16 Lockdown mode in Safari","url":"https://blog.alexi.sh/posts/2022/07/lockdown-jsc/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mvph8s/impact_ios_16_lockdown_mode_safari","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":92505,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["browsers","ios","security"]},{"short_id":"yq11vl","short_id_url":"https://lobste.rs/s/yq11vl","created_at":"2022-07-25T09:13:55.000-05:00","title":"age encryption in Python with pyrage","url":"https://blog.yossarian.net/2022/07/25/age-encryption-in-python-with-pyrage","score":7,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yq11vl/age_encryption_python_with_pyrage","submitter_user":{"username":"yossarian","created_at":"2019-11-04T17:34:29.000-06:00","is_admin":false,"about":"I currently work as in the security (not securities) industry in New York City. Before that, I studied philosophy.\r\n\r\nOn the philosophy side, I'm chiefly interested in metaphysics (ontology and mathematics/formal systems \u0026 semantics) and deontological ethics (praise and blame, moral education, honesty \u0026 bad faith).\r\n\r\nOn the computational side, I'm chiefly interested in program analysis, security, and systems programming. I do a decent amount of professional open source work on projects that encompass some of those.\r\n\r\nMy opinions are my own and do not reflect those of any employer, institutions, affiliates, lovers or haters past, present, or future. They might also not even be mine anymore!\r\n\r\nSites: yossarian.net / blog.yossarian.net / twitter.com/8x5clPW2\r\n\r\n[ my public key: https://keybase.io/yossarian; my proof: https://keybase.io/yossarian/sigs/Rv6e3jLOTzYa5MqFuXV0hnLoYT7xTVeyHjwluVuZTX8 ]","is_moderator":false,"karma":605,"avatar_url":"/avatars/yossarian-100.png","invited_by_user":"trent","github_username":"woodruffw","keybase_signatures":[{"kb_username":"yossarian","sig_hash":"4fd3ae5c9de3d431a6081661b7db925f39596750774fac6a98a36ad05ef272810f"}]},"tags":["cryptography","python","rust"]},{"short_id":"oiu21q","short_id_url":"https://lobste.rs/s/oiu21q","created_at":"2022-07-25T08:32:32.000-05:00","title":"Open Source Explained","url":"https://blog.erlend.sh/open-source-explained","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oiu21q/open_source_explained","submitter_user":{"username":"erlend_sh","created_at":"2015-09-08T12:07:37.000-05:00","is_admin":false,"about":"Open source enthusiast. Professional community manager.","is_moderator":false,"karma":223,"avatar_url":"/avatars/erlend_sh-100.png","invited_by_user":"Curiositry"},"tags":["education","philosophy","practices"]},{"short_id":"9z5m22","short_id_url":"https://lobste.rs/s/9z5m22","created_at":"2022-07-25T08:18:22.000-05:00","title":"Augmentinel — Internals","url":"https://simonowen.com/articles/augmentinel/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9z5m22/augmentinel_internals","submitter_user":{"username":"steinuil","created_at":"2018-08-14T19:50:45.000-05:00","is_admin":false,"about":"aka steenuil on #lobsters","is_moderator":false,"karma":1372,"avatar_url":"/avatars/steinuil-100.png","invited_by_user":"alynpost"},"tags":["games","reversing"]},{"short_id":"hoawzr","short_id_url":"https://lobste.rs/s/hoawzr","created_at":"2022-07-25T07:54:57.000-05:00","title":"Custom types and std::format from C++20","url":"https://www.cppstories.com/2022/custom-stdformat-cpp20/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hoawzr/custom_types_std_format_from_c_20","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":16948,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"mpuju9","short_id_url":"https://lobste.rs/s/mpuju9","created_at":"2022-07-25T04:40:11.000-05:00","title":"What are you doing this week?","url":"","score":8,"flags":0,"comment_count":10,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/mpuju9/what_are_you_doing_this_week","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":7834,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius","twitter_username":"Caius"},"tags":["ask","programming"]},{"short_id":"xhwvur","short_id_url":"https://lobste.rs/s/xhwvur","created_at":"2022-07-25T04:26:08.000-05:00","title":"What's the Most Portable Way to Include Binary Blobs in an Executable?","url":"https://tratt.net/laurie/blog/2022/whats_the_most_portable_way_to_include_binary_blobs_in_an_executable.html","score":13,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xhwvur/what_s_most_portable_way_include_binary","submitter_user":{"username":"bsandro","created_at":"2022-05-08T17:37:56.000-05:00","is_admin":false,"about":"Homo erectus at best. I'm so simple-minded my choices are C, Go, OpenBSD and nano.","is_moderator":false,"karma":112,"avatar_url":"/avatars/bsandro-100.png","invited_by_user":"technetium","twitter_username":"konakona8866"},"tags":["c","unix"]},{"short_id":"ogb7ca","short_id_url":"https://lobste.rs/s/ogb7ca","created_at":"2022-07-25T03:38:37.000-05:00","title":"Hacker News bookmarklet: every click brings you to the newest HN post you have not seen","url":"https://twitter.com/marekgibney/status/1551483561621979136","score":-4,"flags":5,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ogb7ca/hacker_news_bookmarklet_every_click","submitter_user":{"username":"no_gravity","created_at":"2015-02-02T12:38:26.000-06:00","is_admin":false,"about":"I build online tools. Serial entrepreneur. Like to meet like-minded people.","is_moderator":false,"karma":673,"avatar_url":"/avatars/no_gravity-100.png","invited_by_user":"SomeKittens"},"tags":["javascript","programming","release"]},{"short_id":"qqlz5l","short_id_url":"https://lobste.rs/s/qqlz5l","created_at":"2022-07-25T03:15:35.000-05:00","title":"So I've patched KDE Plasma/Wayland under CheriBSD for pure-capability mode. It works","url":"https://www.linkedin.com/posts/onewilshire_so-ive-patched-kde-plasmawayland-under-activity-6951241424117899265-LIMU","score":34,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qqlz5l/so_i_ve_patched_kde_plasma_wayland_under","submitter_user":{"username":"edoput","created_at":"2018-04-12T07:03:13.000-05:00","is_admin":false,"about":"Learning how to do things with others\r\n\r\nFind me on #lobsters\r\n\r\n[github](https://github.com/edoput)\r\n[blog](http://www.edoput.it)","is_moderator":false,"karma":353,"avatar_url":"/avatars/edoput-100.png","invited_by_user":"GeoffWozniak"},"tags":["freebsd","graphics"]},{"short_id":"h1yqr8","short_id_url":"https://lobste.rs/s/h1yqr8","created_at":"2022-07-25T02:24:30.000-05:00","title":"Not so Common Desktop Environment (NsCDE) 2.2","url":"https://github.com/NsCDE/NsCDE/releases/tag/2.2","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h1yqr8/not_so_common_desktop_environment_nscde_2","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":16948,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["linux","release"]},{"short_id":"zqm7f1","short_id_url":"https://lobste.rs/s/zqm7f1","created_at":"2022-07-25T00:40:53.000-05:00","title":"What they don't teach you about sockets","url":"https://macoy.me/blog/programming/Sockets","score":18,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zqm7f1/what_they_don_t_teach_you_about_sockets","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":16948,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["networking"]},{"short_id":"ht0fff","short_id_url":"https://lobste.rs/s/ht0fff","created_at":"2022-07-25T00:27:32.000-05:00","title":"Dynamic Typing and NaN Boxing","url":"https://leonardschuetz.ch/blog/nan-boxing/","score":8,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ht0fff/dynamic_typing_nan_boxing","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":37916,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["plt"]},{"short_id":"5mawh5","short_id_url":"https://lobste.rs/s/5mawh5","created_at":"2022-07-24T23:30:05.000-05:00","title":"How finishing what you start makes teams more productive and predictable","url":"https://lucasfcosta.com/2022/07/19/finish-what-you-start.html","score":15,"flags":2,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5mawh5/how_finishing_what_you_start_makes_teams","submitter_user":{"username":"lucasfcosta","created_at":"2021-10-04T07:04:21.000-05:00","is_admin":false,"about":"Brazilian, open-source wizard, published author, and professional problem solver. Chai.js and Sinon.js maintainer. Testing expert. I strive to be lazy.\r\n\r\nhttps://github.com/lucasfcosta\r\nhttps://twitter.com/thewizardlucas\r\nhttps://www.lucasfcosta.com","is_moderator":false,"karma":71,"avatar_url":"/avatars/lucasfcosta-100.png","invited_by_user":"maskd","github_username":"lucasfcosta"},"tags":["practices"]},{"short_id":"9uulrw","short_id_url":"https://lobste.rs/s/9uulrw","created_at":"2022-07-24T21:58:51.000-05:00","title":"Reconfigurable Asynchronous Logic Automata","url":"https://cba.mit.edu/docs/papers/09.11.POPL.pdf","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9uulrw/reconfigurable_asynchronous_logic","submitter_user":{"username":"imode","created_at":"2021-05-21T17:08:16.000-05:00","is_admin":false,"about":"Computing enthusiast.","is_moderator":false,"karma":429,"avatar_url":"/avatars/imode-100.png","invited_by_user":"shapr"},"tags":["pdf","plt","programming"]},{"short_id":"rqnyny","short_id_url":"https://lobste.rs/s/rqnyny","created_at":"2022-07-24T21:15:03.000-05:00","title":"Riding the InfoRail to Exploit Ivanti Avalanche","url":"https://www.thezdi.com/blog/2022/7/19/riding-the-inforail-to-exploit-ivanti-avalanche","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rqnyny/riding_inforail_exploit_ivanti","submitter_user":{"username":"thesnarky1","created_at":"2020-06-09T14:41:58.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":326,"avatar_url":"/avatars/thesnarky1-100.png","invited_by_user":"pushcx"},"tags":["security"]},{"short_id":"yc5nxv","short_id_url":"https://lobste.rs/s/yc5nxv","created_at":"2022-07-24T21:12:42.000-05:00","title":"MITS' Altair 680b","url":"https://computeradsfromthepast.substack.com/p/mits-altair-680b","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yc5nxv/mits_altair_680b","submitter_user":{"username":"johnblood","created_at":"2018-03-27T05:50:29.000-05:00","is_admin":false,"about":"I write fiction and tech articles.","is_moderator":false,"karma":437,"avatar_url":"/avatars/johnblood-100.png","invited_by_user":"molloy","github_username":"JohnBlood","twitter_username":"JohnBlood"},"tags":["hardware","historical"]},{"short_id":"fkuysm","short_id_url":"https://lobste.rs/s/fkuysm","created_at":"2022-07-24T20:57:12.000-05:00","title":"Library Writing Realizations (2015)","url":"http://cbloomrants.blogspot.com/2015/09/library-writing-realizations.html","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fkuysm/library_writing_realizations_2015","submitter_user":{"username":"judson","created_at":"2019-04-08T14:58:07.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":832,"avatar_url":"/avatars/judson-100.png","invited_by_user":"baweaver","github_username":"AndrewJudson","twitter_username":"andrewljudson"},"tags":["api"]}]