[{"short_id":"tontix","short_id_url":"https://lobste.rs/s/tontix","created_at":"2024-03-08T13:46:46.000-06:00","title":"atopile - build electronic circuit boards from code","url":"https://atopile.io/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tontix/atopile_build_electronic_circuit_boards","submitter_user":{"username":"kaycebasques","created_at":"2023-06-15T16:50:39.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":276,"avatar_url":"/avatars/kaycebasques-100.png","invited_by_user":"wrs"},"user_is_author":false,"tags":["hardware"]},{"short_id":"bahhw4","short_id_url":"https://lobste.rs/s/bahhw4","created_at":"2024-03-08T13:27:42.000-06:00","title":"The GPT-4 barrier has finally been broken","url":"https://simonwillison.net/2024/Mar/8/gpt-4-barrier/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bahhw4/gpt_4_barrier_has_finally_been_broken","submitter_user":{"username":"simonw","created_at":"2021-07-29T15:43:15.000-05:00","is_admin":false,"about":"Creator of https://datasette.io","is_moderator":false,"karma":2320,"avatar_url":"/avatars/simonw-100.png","invited_by_user":"scoates","github_username":"simonw"},"user_is_author":true,"tags":["ai"]},{"short_id":"cj1avk","short_id_url":"https://lobste.rs/s/cj1avk","created_at":"2024-03-08T11:41:37.000-06:00","title":"How HEAD works in git","url":"https://jvns.ca/blog/2024/03/08/how-head-works-in-git/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cj1avk/how_head_works_git","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":102764,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"user_is_author":false,"tags":["vcs"]},{"short_id":"imarid","short_id_url":"https://lobste.rs/s/imarid","created_at":"2024-03-08T09:42:45.000-06:00","title":"The Magic of Property Testing","url":"https://www.youtube.com/watch?v=4bpc8NpNHRc","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/imarid/magic_property_testing","submitter_user":{"username":"krisajenkins","created_at":"2016-06-10T08:58:55.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":175,"avatar_url":"/avatars/krisajenkins-100.png","invited_by_user":"dominicm"},"user_is_author":true,"tags":["testing","video"]},{"short_id":"ljlgev","short_id_url":"https://lobste.rs/s/ljlgev","created_at":"2024-03-08T09:16:35.000-06:00","title":"Case Study: Securing MMU-less Linux Using CHERI","url":"https://arxiv.org/pdf/2310.00933","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eMMU-less Linux variant lacks security because it does not have protection or isolation mechanisms. It also does not use MPUs as they do not fit with its software model because of the design drawbacks of MPUs (\\ie coarse-grained protection with fixed number of protected regions). We secure the existing MMU-less Linux version of the RISC-V port using CHERI. CHERI is a hardware-software capability-based system that extends the ISA, toolchain, programming languages, operating systems, and applications in order to provide complete pointer and memory safety. We believe that CHERI could provide significant security guarantees for high-end dynamic MMU-less embedded systems at lower costs, compared to MMUs and MPUs, by: 1) building the entire software stack in pure-capability CHERI C mode which provides complete spatial memory safety at the kernel and user-level, 2) isolating user programs as separate ELFs, each with its own CHERI-based capability table; this provides spatial memory safety similar to what the MMU offers (\\ie user programs cannot access each other’s memory), 3) isolating user programs from the kernel as the kernel has its own capability table from the users and vice versa, and 4) compartmentalising kernel modules using CompartOS’ linkage-based compartmentalisation. This offers a new security front that is not possible using the current MMU-based Linux, where vulnerable/malicious kernel modules (\\eg device drivers) executing in the kernel space would not compromise or take down the entire system. These are the four main contributions of this paper, presenting novel CHERI-based mechanisms to secure MMU-less embedded Linux.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2310.00933\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"MMU-less Linux variant lacks security because it does not have protection or isolation mechanisms. It also does not use MPUs as they do not fit with its software model because of the design drawbacks of MPUs (\\ie coarse-grained protection with fixed number of protected regions). We secure the existing MMU-less Linux version of the RISC-V port using CHERI. CHERI is a hardware-software capability-based system that extends the ISA, toolchain, programming languages, operating systems, and applications in order to provide complete pointer and memory safety. We believe that CHERI could provide significant security guarantees for high-end dynamic MMU-less embedded systems at lower costs, compared to MMUs and MPUs, by: 1) building the entire software stack in pure-capability CHERI C mode which provides complete spatial memory safety at the kernel and user-level, 2) isolating user programs as separate ELFs, each with its own CHERI-based capability table; this provides spatial memory safety similar to what the MMU offers (\\ie user programs cannot access each other's memory), 3) isolating user programs from the kernel as the kernel has its own capability table from the users and vice versa, and 4) compartmentalising kernel modules using CompartOS' linkage-based compartmentalisation. This offers a new security front that is not possible using the current MMU-based Linux, where vulnerable/malicious kernel modules (\\eg device drivers) executing in the kernel space would not compromise or take down the entire system. These are the four main contributions of this paper, presenting novel CHERI-based mechanisms to secure MMU-less embedded Linux.\r\n\r\n[arXiv](https://arxiv.org/abs/2310.00933)","comments_url":"https://lobste.rs/s/ljlgev/case_study_securing_mmu_less_linux_using","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":102764,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"user_is_author":false,"tags":["hardware","linux","pdf","security"]},{"short_id":"ydm7xk","short_id_url":"https://lobste.rs/s/ydm7xk","created_at":"2024-03-08T08:27:12.000-06:00","title":"Build initramfs rootless","url":"https://blog.izissise.net/posts/initramfs/","score":14,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ydm7xk/build_initramfs_rootless","submitter_user":{"username":"izissise","created_at":"2023-10-02T04:16:25.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":15,"avatar_url":"/avatars/izissise-100.png","invited_by_user":"igemnace"},"user_is_author":true,"tags":["linux","unix"]},{"short_id":"a8ze5v","short_id_url":"https://lobste.rs/s/a8ze5v","created_at":"2024-03-08T07:29:04.000-06:00","title":"Automatic contact sharing in iOS leaks emails to Lockdown Mode devices","url":"https://marekfoss.org/2024/03/08/automatic-contact-sharing-in-ios-leaks-emails-to-lockdown-mode-devices/","score":9,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/a8ze5v/automatic_contact_sharing_ios_leaks","submitter_user":{"username":"f055","created_at":"2019-06-21T08:09:50.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":36,"avatar_url":"/avatars/f055-100.png","invited_by_user":"ZeroFiveFive","github_username":"f055"},"user_is_author":true,"tags":["ios","privacy"]},{"short_id":"i0bsk5","short_id_url":"https://lobste.rs/s/i0bsk5","created_at":"2024-03-08T06:14:45.000-06:00","title":"OpenGFW, open source implementation of GFW (Great Firewall of China)","url":"https://github.com/apernet/OpenGFW","score":8,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/i0bsk5/opengfw_open_source_implementation_gfw","submitter_user":{"username":"linkdd","created_at":"2023-06-22T15:00:49.000-05:00","is_admin":false,"about":"\u003e Je suis tombé dans l'informatique étant petit, et les effets sont devenus permanent.\r\n\r\nI'm a developer who believes that any line of code merged in master/main is \"legacy\".\r\n\r\nYet, I still write some technical-debt as a hobby:\r\n\r\n  - https://letlang.dev\r\n  - https://kubirds.com\r\n  - https://linkdd.github.io\r\n  - https://david-delassus.medium.com","is_moderator":false,"karma":442,"avatar_url":"/avatars/linkdd-100.png","invited_by_user":"jcs","github_username":"linkdd"},"user_is_author":false,"tags":["networking","security"]},{"short_id":"wwwbgc","short_id_url":"https://lobste.rs/s/wwwbgc","created_at":"2024-03-08T05:57:11.000-06:00","title":"Run NixOS Integration Tests on macOS","url":"https://nixcademy.com/2024/03/08/running-nixos-integration-tests-on-macos/","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wwwbgc/run_nixos_integration_tests_on_macos","submitter_user":{"username":"jacekg","created_at":"2023-12-02T03:55:14.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":88,"avatar_url":"/avatars/jacekg-100.png","invited_by_user":"marijan"},"user_is_author":true,"tags":["devops","mac","nix","testing","virtualization"]},{"short_id":"xi5vtb","short_id_url":"https://lobste.rs/s/xi5vtb","created_at":"2024-03-08T05:32:02.000-06:00","title":"Claude 3 writes a fuzzer","url":"https://gist.github.com/moyix/02029770cb4f7afc2ae91a01b3929118","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xi5vtb/claude_3_writes_fuzzer","submitter_user":{"username":"sanxiyn","created_at":"2015-01-21T09:51:34.000-06:00","is_admin":false,"about":"I made the initial port of Rust to ARM and Android.","is_moderator":false,"karma":11938,"avatar_url":"/avatars/sanxiyn-100.png","invited_by_user":"steveklabnik","github_username":"sanxiyn"},"user_is_author":false,"tags":["ai","security"]},{"short_id":"goy9w2","short_id_url":"https://lobste.rs/s/goy9w2","created_at":"2024-03-08T05:16:45.000-06:00","title":"What are you doing this weekend?","url":"","score":5,"flags":0,"comment_count":10,"description":"\u003cp\u003eFeel free to tell what you plan on doing this weekend and even ask for help or feedback.\u003c/p\u003e\n\u003cp\u003ePlease keep in mind it’s more than OK to do nothing at all too!\u003c/p\u003e\n","description_plain":"Feel free to tell what you plan on doing this weekend and even ask for help or feedback.\r\n\r\nPlease keep in mind it’s more than OK to do nothing at all too!","comments_url":"https://lobste.rs/s/goy9w2/what_are_you_doing_this_weekend","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":9951,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius"},"user_is_author":true,"tags":["ask","programming"]},{"short_id":"dbwn98","short_id_url":"https://lobste.rs/s/dbwn98","created_at":"2024-03-08T05:08:21.000-06:00","title":"Secure by Design: Google’s Perspective on Memory Safety","url":"https://security.googleblog.com/2024/03/secure-by-design-googles-perspective-on.html","score":12,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dbwn98/secure_by_design_google_s_perspective_on","submitter_user":{"username":"grgbrn","created_at":"2014-03-01T18:34:52.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":181,"avatar_url":"/avatars/grgbrn-100.png","invited_by_user":"robey"},"user_is_author":false,"tags":["practices","security"]},{"short_id":"nqootu","short_id_url":"https://lobste.rs/s/nqootu","created_at":"2024-03-08T03:38:52.000-06:00","title":"Sudo-rs dependencies: when less is better","url":"https://www.memorysafety.org/blog/reducing-dependencies-in-sudo/","score":10,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nqootu/sudo_rs_dependencies_when_less_is_better","submitter_user":{"username":"gendx","created_at":"2024-03-06T03:18:31.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":30,"avatar_url":"/avatars/gendx-100.png","invited_by_user":"mgeisler","github_username":"gendx"},"user_is_author":false,"tags":["rust"]},{"short_id":"dzpkn2","short_id_url":"https://lobste.rs/s/dzpkn2","created_at":"2024-03-08T01:20:07.000-06:00","title":"You can now train a 70b language model at home","url":"http://www.answer.ai/posts/2024-03-06-fsdp-qlora.html","score":18,"flags":1,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dzpkn2/you_can_now_train_70b_language_model_at","submitter_user":{"username":"vitalyr","created_at":"2022-05-23T09:47:25.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":26,"avatar_url":"/avatars/vitalyr-100.png","invited_by_user":"gerikson","github_username":"VitalyAnkh"},"user_is_author":false,"tags":["ai"]},{"short_id":"izve3g","short_id_url":"https://lobste.rs/s/izve3g","created_at":"2024-03-07T21:29:39.000-06:00","title":"Stack unwinding, ARM and CIL trees","url":"https://fractalfir.github.io/generated_html/rustc_codegen_clr_v0_1_1.html","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/izve3g/stack_unwinding_arm_cil_trees","submitter_user":{"username":"briankung","created_at":"2017-04-03T00:20:29.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2420,"avatar_url":"/avatars/briankung-100.png","invited_by_user":"gsylvie"},"user_is_author":false,"tags":["compilers","dotnet","plt","rust"]},{"short_id":"wy6dsh","short_id_url":"https://lobste.rs/s/wy6dsh","created_at":"2024-03-07T21:24:49.000-06:00","title":"Upsert UUIDs with sqlc","url":"https://adriano.fyi/posts/2024-03-07-upsert-uuids-with-sqlc/","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wy6dsh/upsert_uuids_with_sqlc","submitter_user":{"username":"carlana","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carlana Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":17420,"avatar_url":"/avatars/carlana-100.png","invited_by_user":"peterbourgon","github_username":"earthboundkid"},"user_is_author":false,"tags":["databases","go"]},{"short_id":"xagbg1","short_id_url":"https://lobste.rs/s/xagbg1","created_at":"2024-03-07T20:38:10.000-06:00","title":"Flexible and Economical UTF-8 Decoder","url":"https://bjoern.hoehrmann.de/utf-8/decoder/dfa/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xagbg1/flexible_economical_utf_8_decoder","submitter_user":{"username":"andyc","created_at":"2016-11-29T12:37:37.000-06:00","is_admin":false,"about":"Working on http://www.oilshell.org/\r\n","is_moderator":false,"karma":11044,"avatar_url":"/avatars/andyc-100.png","invited_by_user":"flyingfisch"},"user_is_author":false,"tags":["programming"]},{"short_id":"ug2kin","short_id_url":"https://lobste.rs/s/ug2kin","created_at":"2024-03-07T19:55:13.000-06:00","title":"Benchmarks about OpenAI shortened embeddings","url":"https://docs.pgvecto.rs/use-case/adaptive-retrieval.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ug2kin/benchmarks_about_openai_shortened","submitter_user":{"username":"gaocegege","created_at":"2022-09-12T02:02:11.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":57,"avatar_url":"/avatars/gaocegege-100.png","invited_by_user":"laixintao","github_username":"gaocegege"},"user_is_author":true,"tags":["ai","databases","rust"]},{"short_id":"pcsoao","short_id_url":"https://lobste.rs/s/pcsoao","created_at":"2024-03-07T19:51:06.000-06:00","title":"A year in the life of a Playdate game developer","url":"https://blog.gingerbeardman.com/2024/03/07/a-year-in-the-life-of-a-playdate-game-developer/","score":12,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pcsoao/year_life_playdate_game_developer","submitter_user":{"username":"carlana","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carlana Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":17420,"avatar_url":"/avatars/carlana-100.png","invited_by_user":"peterbourgon","github_username":"earthboundkid"},"user_is_author":false,"tags":["games"]},{"short_id":"hsoirt","short_id_url":"https://lobste.rs/s/hsoirt","created_at":"2024-03-07T19:23:11.000-06:00","title":"Dynamic Programming In Lisp Flavored Erlang","url":"https://medium.com/@kkmvv/recursion-is-necessary-part-ii-dynamic-programming-f3da0ff4ed5c","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hsoirt/dynamic_programming_lisp_flavored","submitter_user":{"username":"djaouen","created_at":"2014-02-18T14:11:34.000-06:00","is_admin":false,"about":"https://danieljaouendevelopment.com/","is_moderator":false,"karma":44,"avatar_url":"/avatars/djaouen-100.png","invited_by_user":"b7j0c"},"user_is_author":true,"tags":["erlang","lisp"]},{"short_id":"9t6fqe","short_id_url":"https://lobste.rs/s/9t6fqe","created_at":"2024-03-07T19:13:30.000-06:00","title":"Autogenerating a Book Series From Three Years of iMessages","url":"https://benkettle.xyz/posts/message-book/","score":11,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9t6fqe/autogenerating_book_series_from_three","submitter_user":{"username":"zachahn","created_at":"2018-07-27T14:58:34.000-05:00","is_admin":false,"about":"https://zachahn.com","is_moderator":false,"karma":376,"avatar_url":"/avatars/zachahn-100.png","invited_by_user":"nb"},"user_is_author":false,"tags":["programming"]},{"short_id":"d7hq8r","short_id_url":"https://lobste.rs/s/d7hq8r","created_at":"2024-03-07T17:51:23.000-06:00","title":"Experience Report: Building a Real Time OS Kernel in Smalltalk","url":"http://www.rowledge.org/resources/tim's-Home-page/Squeak/RTOSinSmalltalk.html.pdf","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/d7hq8r/experience_report_building_real_time_os","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":102764,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"user_is_author":false,"tags":["osdev","pdf","programming"]},{"short_id":"rrgyvm","short_id_url":"https://lobste.rs/s/rrgyvm","created_at":"2024-03-07T16:17:03.000-06:00","title":"How many programming languages do you think a person can be proficient in?","url":"","score":21,"flags":0,"comment_count":28,"description":"\u003cp\u003eTo be clear, I am talking about working proficiency. Able to create large, maintainable and “production ready” software that is understandable and idiomatic.\u003c/p\u003e\n\u003cp\u003eMost programmers will learn that once they’ve tackled picking up their second language, that picking up any amount of future languages is relatively easy. There are exceptions to that, of course, but broadly speaking you should be able to transfer the core concepts of programming between any number of languages. Going from OOP to Functional is an example of when that might be not so clear-cut, but as I say, there are exceptions.\u003c/p\u003e\n\u003cp\u003eSo then, there is no real limit to the number of languages one can pick up. And it is likely for those who spend a career in software development that they will touch a lot of languages over the years, even if it’s only one time to adjust one line in some old project their company has been maintaining for a decade.\u003c/p\u003e\n\u003cp\u003eIn the last three years, I have written \u003cem\u003esomething\u003c/em\u003e at least once in the following languages (off the top of my head):\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython\u003c/li\u003e\n\u003cli\u003eRust\u003c/li\u003e\n\u003cli\u003eGo\u003c/li\u003e\n\u003cli\u003eElixir\u003c/li\u003e\n\u003cli\u003eJava\u003c/li\u003e\n\u003cli\u003eJavaScript / TypeScript\u003c/li\u003e\n\u003cli\u003eColdfusion\u003c/li\u003e\n\u003cli\u003eC#\u003c/li\u003e\n\u003cli\u003eRuby\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDespite that, I am not \u003cem\u003eproficient\u003c/em\u003e in most of those languages. Mostly, I needed to make some changes and so looked up syntax as needed and got to work.\u003c/p\u003e\n\u003cp\u003eIn the middle of last year, I had to work on a project for several weeks in Rust. I really enjoyed the language and was able to pick it up and right some reasonable code. My PRs were reviewed a bit more harshly than usual, but over the weeks I seemed to pick the language up well enough. Fast-forward to last week, when I decided I might start a person project in Rust - and it felt very uncomfortable. I was still familiar with the syntax, but I struggled to recall what was idiomatic in the language and which libraries were popular for various problems.\u003c/p\u003e\n\u003cp\u003eThis got me thinking. Having broad experience is great, and I think makes one a better programmer. However, clearly it pays off to go deep in your learning of any tool you use to make money with. And so most of us (I believe) will only touch the surface of most languages, and go much deeper on just a few. And so, to the title of this post, how many languages do you think one person can be truly proficient in?\u003c/p\u003e\n","description_plain":"To be clear, I am talking about working proficiency. Able to create large, maintainable and \"production ready\" software that is understandable and idiomatic.\r\n\r\nMost programmers will learn that once they've tackled picking up their second language, that picking up any amount of future languages is relatively easy. There are exceptions to that, of course, but broadly speaking you should be able to transfer the core concepts of programming between any number of languages. Going from OOP to Functional is an example of when that might be not so clear-cut, but as I say, there are exceptions.\r\n\r\nSo then, there is no real limit to the number of languages one can pick up. And it is likely for those who spend a career in software development that they will touch a lot of languages over the years, even if it's only one time to adjust one line in some old project their company has been maintaining for a decade.\r\n\r\nIn the last three years, I have written _something_ at least once in the following languages (off the top of my head):\r\n\r\n- Python\r\n- Rust\r\n- Go\r\n- Elixir\r\n- Java\r\n- JavaScript / TypeScript\r\n- Coldfusion\r\n- C#\r\n- Ruby\r\n\r\nDespite that, I am not _proficient_ in most of those languages. Mostly, I needed to make some changes and so looked up syntax as needed and got to work.\r\n\r\nIn the middle of last year, I had to work on a project for several weeks in Rust. I really enjoyed the language and was able to pick it up and right some reasonable code. My PRs were reviewed a bit more harshly than usual, but over the weeks I seemed to pick the language up well enough. Fast-forward to last week, when I decided I might start a person project in Rust - and it felt very uncomfortable. I was still familiar with the syntax, but I struggled to recall what was idiomatic in the language and which libraries were popular for various problems.\r\n\r\nThis got me thinking. Having broad experience is great, and I think makes one a better programmer. However, clearly it pays off to go deep in your learning of any tool you use to make money with. And so most of us (I believe) will only touch the surface of most languages, and go much deeper on just a few. And so, to the title of this post, how many languages do you think one person can be truly proficient in?","comments_url":"https://lobste.rs/s/rrgyvm/how_many_programming_languages_do_you","submitter_user":{"username":"bugsmith","created_at":"2023-04-21T08:58:57.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":615,"avatar_url":"/avatars/bugsmith-100.png","invited_by_user":"river","mastodon_username":"bugsmith"},"user_is_author":true,"tags":["ask","programming"]},{"short_id":"mzip6v","short_id_url":"https://lobste.rs/s/mzip6v","created_at":"2024-03-07T15:50:14.000-06:00","title":"How to troubleshoot deferred probe issues in Linux (2022)","url":"https://blog.dowhile0.org/2022/06/21/how-to-troubleshoot-deferred-probe-issues-in-linux/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mzip6v/how_troubleshoot_deferred_probe_issues","submitter_user":{"username":"craftyguy","created_at":"2017-09-05T19:20:13.000-05:00","is_admin":false,"about":"postmarketOS developer, and other things probably","is_moderator":false,"karma":4557,"avatar_url":"/avatars/craftyguy-100.png","invited_by_user":"friendlysock"},"user_is_author":false,"tags":["linux","osdev"]},{"short_id":"yiwe8s","short_id_url":"https://lobste.rs/s/yiwe8s","created_at":"2024-03-07T15:04:33.000-06:00","title":"Defective C++ (2009)","url":"https://yosefk.com/c++fqa/defective.html","score":5,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yiwe8s/defective_c_2009","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":8892,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"user_is_author":false,"tags":["c++"]}]