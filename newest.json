[{"short_id":"nroamu","short_id_url":"https://lobste.rs/s/nroamu","created_at":"2024-05-06T12:47:09.000-05:00","title":"Using age with org-journal","url":"https://edmundmiller.dev/posts/org-journal-age/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nroamu/using_age_with_org_journal","submitter_user":"emiller","user_is_author":true,"tags":["emacs"]},{"short_id":"hlanky","short_id_url":"https://lobste.rs/s/hlanky","created_at":"2024-05-06T12:23:37.000-05:00","title":"Modernizing accessibility for desktop Linux","url":"https://lwn.net/SubscriberLink/971541/9a17fa52fab73bef/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hlanky/modernizing_accessibility_for_desktop","submitter_user":"calvin","user_is_author":false,"tags":["a11y","linux"]},{"short_id":"r5ugre","short_id_url":"https://lobste.rs/s/r5ugre","created_at":"2024-05-06T11:43:57.000-05:00","title":"A history of CLU","url":"http://publications.csail.mit.edu/lcs/pubs/pdf/MIT-LCS-TR-561.pdf","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r5ugre/history_clu","submitter_user":"fanf","user_is_author":false,"tags":["historical","pdf","plt"]},{"short_id":"dnz5gj","short_id_url":"https://lobste.rs/s/dnz5gj","created_at":"2024-05-06T11:39:38.000-05:00","title":"Designing an efficient memory layout in Rust with unsafe \u0026 unions, or, an overlong guide in avoiding dynamic dispatch","url":"https://alonely0.github.io/blog/unions/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dnz5gj/designing_efficient_memory_layout_rust","submitter_user":"crmsnbleyd","user_is_author":false,"tags":["rust"]},{"short_id":"pci3eh","short_id_url":"https://lobste.rs/s/pci3eh","created_at":"2024-05-06T11:30:01.000-05:00","title":"Lila: a Lil Interpreter in Awk","url":"https://beyondloom.com/blog/lila.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pci3eh/lila_lil_interpreter_awk","submitter_user":"Internet_Janitor","user_is_author":true,"tags":["art","plt"]},{"short_id":"8acfhe","short_id_url":"https://lobste.rs/s/8acfhe","created_at":"2024-05-06T11:14:13.000-05:00","title":"Automatic checking of cfgs at compile-time","url":"https://blog.rust-lang.org/2024/05/06/check-cfg.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8acfhe/automatic_checking_cfgs_at_compile_time","submitter_user":"sanxiyn","user_is_author":false,"tags":["rust"]},{"short_id":"gjjzns","short_id_url":"https://lobste.rs/s/gjjzns","created_at":"2024-05-06T10:06:14.000-05:00","title":"Coding Machines","url":"https://corecursive.com/coding-machines-with-don-and-krystal/","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis is a fictional story of a debug session that goes down the rabbit hole, based on some historical events.\u003c/p\u003e\n","description_plain":"This is a fictional story of a debug session that goes down the rabbit hole, based on some historical events.","comments_url":"https://lobste.rs/s/gjjzns/coding_machines","submitter_user":"carlana","user_is_author":false,"tags":["audio","debugging","transcript"]},{"short_id":"lknqgm","short_id_url":"https://lobste.rs/s/lknqgm","created_at":"2024-05-06T09:57:50.000-05:00","title":"Avoiding Emacs bankruptcy, with good financial habits","url":"https://b.tuxes.uk/avoiding-emacs-bankruptcy.html","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lknqgm/avoiding_emacs_bankruptcy_with_good","submitter_user":"tuxes","user_is_author":false,"tags":["emacs"]},{"short_id":"e2cxpi","short_id_url":"https://lobste.rs/s/e2cxpi","created_at":"2024-05-06T09:29:48.000-05:00","title":"Life of an Airline Flight: What Systems Get You From Here to There via the Air (2019)","url":"https://www.youtube.com/watch?v=8_t41xvPp1w","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/e2cxpi/life_airline_flight_what_systems_get_you","submitter_user":"inverse","user_is_author":false,"tags":["event","historical","video"]},{"short_id":"fvcghv","short_id_url":"https://lobste.rs/s/fvcghv","created_at":"2024-05-06T09:07:13.000-05:00","title":"Encore for TypeScript","url":"https://encore.dev/blog/encore-for-typescript","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fvcghv/encore_for_typescript","submitter_user":"eandre","user_is_author":true,"tags":["api","devops"]},{"short_id":"ulebub","short_id_url":"https://lobste.rs/s/ulebub","created_at":"2024-05-06T06:52:26.000-05:00","title":"I survived curl up 2024 (conference talks)","url":"https://daniel.haxx.se/blog/2024/05/06/i-survived-curl-up-2024/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ulebub/i_survived_curl_up_2024_conference_talks","submitter_user":"antonz","user_is_author":false,"tags":["networking","video"]},{"short_id":"a6gffu","short_id_url":"https://lobste.rs/s/a6gffu","created_at":"2024-05-06T06:31:42.000-05:00","title":"How to rewrite a C++ codebase successfully","url":"https://gaultier.github.io/blog/how_to_rewrite_a_cpp_codebase_successfully.html","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/a6gffu/how_rewrite_c_codebase_successfully","submitter_user":"masklinn","user_is_author":false,"tags":["rust"]},{"short_id":"mj48ey","short_id_url":"https://lobste.rs/s/mj48ey","created_at":"2024-05-06T06:06:43.000-05:00","title":"What are you doing this week?","url":"","score":11,"flags":0,"comment_count":9,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/mj48ey/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"1z5xda","short_id_url":"https://lobste.rs/s/1z5xda","created_at":"2024-05-06T05:31:47.000-05:00","title":"What is in a Rust Allocator?","url":"https://blog.sulami.xyz/posts/what-is-in-a-rust-allocator/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1z5xda/what_is_rust_allocator","submitter_user":"sulami","user_is_author":true,"tags":["rust"]},{"short_id":"anefik","short_id_url":"https://lobste.rs/s/anefik","created_at":"2024-05-06T04:54:25.000-05:00","title":"Constraining Go type parameter pointers","url":"https://blog.merovius.de/posts/2024-05-06-pointer-constraints/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/anefik/constraining_go_type_parameter_pointers","submitter_user":"napkindrawing","user_is_author":false,"tags":["go"]},{"short_id":"4mdzfa","short_id_url":"https://lobste.rs/s/4mdzfa","created_at":"2024-05-06T04:47:51.000-05:00","title":"Re-implementing the Nix protocol in Rust","url":"https://www.tweag.io/blog/2024-04-25-nix-protocol-in-rust/","score":11,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4mdzfa/re_implementing_nix_protocol_rust","submitter_user":"asymmetric","user_is_author":false,"tags":["nix","rust"]},{"short_id":"qn2rcu","short_id_url":"https://lobste.rs/s/qn2rcu","created_at":"2024-05-06T04:07:56.000-05:00","title":"HTMX and Servant: Seamless and powerful handling of HTTP errors in HTMX","url":"https://silky.github.io/posts/htmx-haskell-interview.html","score":21,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qn2rcu/htmx_servant_seamless_powerful_handling","submitter_user":"noon","user_is_author":true,"tags":["api","haskell","web"]},{"short_id":"5vlgf4","short_id_url":"https://lobste.rs/s/5vlgf4","created_at":"2024-05-06T03:50:59.000-05:00","title":"Lix","url":"https://lix.systems/","score":53,"flags":0,"comment_count":26,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5vlgf4/lix","submitter_user":"gmem","user_is_author":false,"tags":["nix"]},{"short_id":"hmrs3m","short_id_url":"https://lobste.rs/s/hmrs3m","created_at":"2024-05-06T02:48:43.000-05:00","title":"A Cloud-Native Fork of Kafka on S3 without sacrifice latency","url":"https://github.com/AutoMQ/automq","score":-1,"flags":2,"comment_count":1,"description":"\u003cp\u003eI’m delighted to share our project here and engage in some technical discussions with everyone. We all know that Kafka, due to its storage architecture based on local disks, lacks elasticity. Designing the storage layer with S3 as shared storage has become the new “silver bullet” for data-intensive software today. However, using S3 alone does not address latency issues. Our storage layer design utilizes a small size EBS as a high-speed WAL (Write-Ahead Logging) cache for writing, with data in memory asynchronously flushed to S3. This approach not only leverages the cost and elasticity benefits of shared storage but also ensures low latency. We welcome everyone to discuss and exchange ideas about our storage layer implementation.\u003c/p\u003e\n","description_plain":"I'm delighted to share our project here and engage in some technical discussions with everyone. We all know that Kafka, due to its storage architecture based on local disks, lacks elasticity. Designing the storage layer with S3 as shared storage has become the new \"silver bullet\" for data-intensive software today. However, using S3 alone does not address latency issues. Our storage layer design utilizes a small size EBS as a high-speed WAL (Write-Ahead Logging) cache for writing, with data in memory asynchronously flushed to S3. This approach not only leverages the cost and elasticity benefits of shared storage but also ensures low latency. We welcome everyone to discuss and exchange ideas about our storage layer implementation.","comments_url":"https://lobste.rs/s/hmrs3m/cloud_native_fork_kafka_on_s3_without","submitter_user":"kaiming","user_is_author":true,"tags":["distributed","java","scala","scaling"]},{"short_id":"8fp4kq","short_id_url":"https://lobste.rs/s/8fp4kq","created_at":"2024-05-06T00:10:44.000-05:00","title":"Pair Your Compilers At The ABI Café","url":"https://faultlore.com/blah/abi-puns/","score":33,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8fp4kq/pair_your_compilers_at_abi_cafe","submitter_user":"calvin","user_is_author":false,"tags":["compilers","rust"]},{"short_id":"fvbycd","short_id_url":"https://lobste.rs/s/fvbycd","created_at":"2024-05-06T00:10:14.000-05:00","title":"dbresolver: Multiple databases, read-write splitting for GORM V1","url":"https://github.com/go-gorm-v1/dbresolver","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eMy first attempt to write a db resolver for gorm-v1, for people using legacy version of gorm (v1), like we had at work.\u003c/p\u003e\n","description_plain":"My first attempt to write a db resolver for gorm-v1, for people using legacy version of gorm (v1), like we had at work.","comments_url":"https://lobste.rs/s/fvbycd/dbresolver_multiple_databases_read","submitter_user":"argentum47","user_is_author":true,"tags":["go"]},{"short_id":"n3dnfa","short_id_url":"https://lobste.rs/s/n3dnfa","created_at":"2024-05-05T21:44:12.000-05:00","title":"Exporting YouTube Subscriptions to OPML and Watching via RSS","url":"https://www.wezm.net/v2/posts/2024/youtube-subscriptions-opml/","score":8,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n3dnfa/exporting_youtube_subscriptions_opml","submitter_user":"wezm","user_is_author":true,"tags":["programming"]},{"short_id":"7m6jp8","short_id_url":"https://lobste.rs/s/7m6jp8","created_at":"2024-05-05T21:38:28.000-05:00","title":"Heat Death of the Internet","url":"https://www.takahe.org.nz/heat-death-of-the-internet/","score":50,"flags":1,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7m6jp8/heat_death_internet","submitter_user":"DrP","user_is_author":false,"tags":["rant"]},{"short_id":"sqpxhd","short_id_url":"https://lobste.rs/s/sqpxhd","created_at":"2024-05-05T20:41:38.000-05:00","title":"Decoding UTF8 with Parallel Extract","url":"https://nrk.neocities.org/articles/utf8-pext","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sqpxhd/decoding_utf8_with_parallel_extract","submitter_user":"sanxiyn","user_is_author":false,"tags":["assembly","performance"]},{"short_id":"16fcyh","short_id_url":"https://lobste.rs/s/16fcyh","created_at":"2024-05-05T20:37:02.000-05:00","title":"A History of C Compilers, Part 1: Performance, Portability and Freedom","url":"https://thechipletter.substack.com/p/a-history-of-c-compilers-part-1-performance","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/16fcyh/history_c_compilers_part_1_performance","submitter_user":"sanxiyn","user_is_author":false,"tags":["c","historical"]}]