[{"short_id":"ubazqn","short_id_url":"https://lobste.rs/s/ubazqn","created_at":"2023-01-21T15:45:28.000-06:00","title":"sunny computers, part 3","url":"https://cohost.org/delan/post/852798-sunny-computers-par","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ubazqn/sunny_computers_part_3","submitter_user":{"username":"craftyguy","created_at":"2017-09-05T19:20:13.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":4217,"avatar_url":"/avatars/craftyguy-100.png","invited_by_user":"friendlysock"},"tags":["hardware","reversing","unix"]},{"short_id":"azbogy","short_id_url":"https://lobste.rs/s/azbogy","created_at":"2023-01-21T14:59:16.000-06:00","title":"Hacking myself to prove a point","url":"https://www.macchaffee.com/blog/2023/hacking-myself/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/azbogy/hacking_myself_prove_point","submitter_user":{"username":"cetera","created_at":"2021-08-29T17:59:24.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":391,"avatar_url":"/avatars/cetera-100.png","invited_by_user":"jj5"},"tags":["mac","security"]},{"short_id":"uusnr5","short_id_url":"https://lobste.rs/s/uusnr5","created_at":"2023-01-21T14:34:29.000-06:00","title":"open-heart-element: A button to POST an emoji to an endpoint","url":"https://github.com/dddddddddzzzz/open-heart-element","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uusnr5/open_heart_element_button_post_emoji","submitter_user":{"username":"brntn","created_at":"2012-09-02T20:11:52.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":120,"avatar_url":"/avatars/brntn-100.png","invited_by_user":"markprovan"},"tags":["web"]},{"short_id":"k7dz5z","short_id_url":"https://lobste.rs/s/k7dz5z","created_at":"2023-01-21T14:05:16.000-06:00","title":"nice sites","url":"https://www2.bearblog.dev/non-annoying/","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/k7dz5z/nice_sites","submitter_user":{"username":"candle","created_at":"2019-03-14T16:04:29.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":273,"avatar_url":"/avatars/candle-100.png","invited_by_user":"river"},"tags":["design","web"]},{"short_id":"vrzaf4","short_id_url":"https://lobste.rs/s/vrzaf4","created_at":"2023-01-21T13:11:05.000-06:00","title":"Myths and Legends in High-Performance Computing","url":"https://arxiv.org/pdf/2301.02432.pdf","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vrzaf4/myths_legends_high_performance","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":6061,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["pdf","performance"]},{"short_id":"3roubh","short_id_url":"https://lobste.rs/s/3roubh","created_at":"2023-01-21T12:55:29.000-06:00","title":"Trees Too Large to Count","url":"https://lewiscarson.com/posts/willow","score":5,"flags":0,"comment_count":0,"description":"\u003cp\u003eI wanted to share this article to get some feedback on a side-by-side text format which Iâ€™m working on at the moment. However, I think the article stands on its own merits. Thank you!\u003c/p\u003e\n","description_plain":"I wanted to share this article to get some feedback on a side-by-side text format which I'm working on at the moment. However, I think the article stands on its own merits. Thank you!","comments_url":"https://lobste.rs/s/3roubh/trees_too_large_count","submitter_user":{"username":"lew","created_at":"2021-12-20T14:02:29.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":10,"avatar_url":"/avatars/lew-100.png","invited_by_user":"eti"},"tags":["programming","rust"]},{"short_id":"vqysns","short_id_url":"https://lobste.rs/s/vqysns","created_at":"2023-01-21T12:39:18.000-06:00","title":"Raspberry Pi Pico Priority Inversion","url":"https://kentindell.github.io/2021/03/05/pico-priority-inversion/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vqysns/raspberry_pi_pico_priority_inversion","submitter_user":{"username":"jeanthomas","created_at":"2021-12-14T12:53:17.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":260,"avatar_url":"/avatars/jeanthomas-100.png","invited_by_user":"brainstorm","github_username":"jeanthom"},"tags":["debugging","hardware"]},{"short_id":"ydb8ly","short_id_url":"https://lobste.rs/s/ydb8ly","created_at":"2023-01-21T10:10:53.000-06:00","title":"Open source maintainers: What they need and how to support them","url":"https://www.linuxfoundation.org/blog/open-source-maintainers-what-they-need-and-how-to-support-them","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ydb8ly/open_source_maintainers_what_they_need","submitter_user":{"username":"asteroid","created_at":"2020-01-29T13:58:14.000-06:00","is_admin":false,"about":"Writer. Editor. Computer geek. Chocoholic. Baseball fan. Not always in that order.","is_moderator":false,"karma":540,"avatar_url":"/avatars/asteroid-100.png","invited_by_user":"petdance","github_username":"estherschindler","twitter_username":"estherschindler"},"tags":["culture"]},{"short_id":"ffjvhc","short_id_url":"https://lobste.rs/s/ffjvhc","created_at":"2023-01-21T09:49:52.000-06:00","title":"Encoding variable-length instructions in LLVM","url":"https://m680x0.github.io/blog/2022/02/varlen-encoder.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ffjvhc/encoding_variable_length_instructions","submitter_user":{"username":"idrougge","created_at":"2020-03-20T09:40:53.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1958,"avatar_url":"/avatars/idrougge-100.png","invited_by_user":"gerikson"},"tags":["compilers"]},{"short_id":"uaajdd","short_id_url":"https://lobste.rs/s/uaajdd","created_at":"2023-01-21T08:27:08.000-06:00","title":"The model code gap","url":"https://blog.icepanel.io/2022/11/30/the-model-code-gap/","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uaajdd/model_code_gap","submitter_user":{"username":"crstry","created_at":"2021-03-19T05:50:36.000-05:00","is_admin":false,"about":"Voluntary carcinization subject","is_moderator":false,"karma":613,"avatar_url":"/avatars/crstry-100.png","invited_by_user":"boffbowsh"},"tags":["culture","programming"]},{"short_id":"mk4djz","short_id_url":"https://lobste.rs/s/mk4djz","created_at":"2023-01-21T06:22:07.000-06:00","title":"Scala Puzzlers","url":"https://scalapuzzlers.com","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mk4djz/scala_puzzlers","submitter_user":{"username":"idrougge","created_at":"2020-03-20T09:40:53.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1958,"avatar_url":"/avatars/idrougge-100.png","invited_by_user":"gerikson"},"tags":["scala"]},{"short_id":"0zldoo","short_id_url":"https://lobste.rs/s/0zldoo","created_at":"2023-01-21T05:22:42.000-06:00","title":"Thoughts on the Python packaging ecosystem","url":"https://pradyunsg.me/blog/2023/01/21/thoughts-on-python-packaging/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0zldoo/thoughts_on_python_packaging_ecosystem","submitter_user":{"username":"talideon","created_at":"2019-05-30T17:03:42.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":333,"avatar_url":"/avatars/talideon-100.png","invited_by_user":"jamesog","github_username":"kgaughan","twitter_username":"talideon"},"tags":["python"]},{"short_id":"mhuqq7","short_id_url":"https://lobste.rs/s/mhuqq7","created_at":"2023-01-21T04:29:51.000-06:00","title":"What Do ChatGPT and AI-based Automatic Program Generation Mean for the Future of Software","url":"https://cacm.acm.org/blogs/blog-cacm/268103-what-do-chatgpt-and-ai-based-automatic-program-generation-mean-for-the-future-of-software/fulltext","score":8,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mhuqq7/what_do_chatgpt_ai_based_automatic","submitter_user":{"username":"kir0ul","created_at":"2021-02-06T13:51:10.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":230,"avatar_url":"/avatars/kir0ul-100.png","invited_by_user":"Lomanic","github_username":"kir0ul"},"tags":["ai"]},{"short_id":"tuy0mq","short_id_url":"https://lobste.rs/s/tuy0mq","created_at":"2023-01-21T01:45:59.000-06:00","title":"doas - dedicated openbsd application subexecutor (2015)","url":"https://flak.tedunangst.com/post/doas","score":17,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tuy0mq/doas_dedicated_openbsd_application","submitter_user":{"username":"erick","created_at":"2021-08-03T10:01:31.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":107,"avatar_url":"/avatars/erick-100.png","invited_by_user":"jstoja"},"tags":["unix"]},{"short_id":"qjuqpi","short_id_url":"https://lobste.rs/s/qjuqpi","created_at":"2023-01-21T01:45:52.000-06:00","title":"How You Respond to Security Researchers Says Everything About You","url":"https://soatok.blog/2023/01/21/how-you-respond-to-security-researchers-says-everything-about-you/","score":44,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qjuqpi/how_you_respond_security_researchers","submitter_user":{"username":"soatok","created_at":"2020-10-09T21:36:56.000-05:00","is_admin":false,"about":"I'm a furry and I blog about cryptography stuff.","is_moderator":false,"karma":1980,"avatar_url":"/avatars/soatok-100.png","invited_by_user":"sarciszewski","github_username":"soatok","twitter_username":"SoatokDhole"},"tags":["cryptography","security"]},{"short_id":"hqe5w7","short_id_url":"https://lobste.rs/s/hqe5w7","created_at":"2023-01-21T01:24:17.000-06:00","title":"Pipe Operator for JavaScript","url":"https://github.com/tc39/proposal-pipeline-operator","score":3,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hqe5w7/pipe_operator_for_javascript","submitter_user":{"username":"no_gravity","created_at":"2015-02-02T12:38:26.000-06:00","is_admin":false,"about":"I build online tools. Serial entrepreneur. Like to meet like-minded people.","is_moderator":false,"karma":819,"avatar_url":"/avatars/no_gravity-100.png","invited_by_user":"SomeKittens"},"tags":["javascript","programming"]},{"short_id":"nhb2kx","short_id_url":"https://lobste.rs/s/nhb2kx","created_at":"2023-01-20T23:27:12.000-06:00","title":"CVE-2022-42864 - Diabolical Cookies","url":"https://muirey03.blogspot.com/2023/01/cve-2022-42864-diabolical-cookies.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nhb2kx/cve_2022_42864_diabolical_cookies","submitter_user":{"username":"fro","created_at":"2016-04-13T15:27:31.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1662,"avatar_url":"/avatars/fro-100.png","invited_by_user":"xero"},"tags":["ios","mac","security"]},{"short_id":"cetokn","short_id_url":"https://lobste.rs/s/cetokn","created_at":"2023-01-20T22:01:29.000-06:00","title":"Self-Soldering Circuits","url":"https://www.youtube.com/watch?v=r0csHZveVvY","score":11,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cetokn/self_soldering_circuits","submitter_user":{"username":"animatronic","created_at":"2014-01-06T17:35:55.000-06:00","is_admin":false,"about":"illogical conclusion","is_moderator":false,"karma":1589,"avatar_url":"/avatars/animatronic-100.png","invited_by_user":"ejmalone"},"tags":["hardware","video"]},{"short_id":"n5j67i","short_id_url":"https://lobste.rs/s/n5j67i","created_at":"2023-01-20T17:01:23.000-06:00","title":"Native Urban Terror on FreeBSD","url":"https://vermaden.wordpress.com/2023/01/20/native-urban-terror-on-freebsd/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n5j67i/native_urban_terror_on_freebsd","submitter_user":{"username":"vermaden","created_at":"2018-04-13T03:53:33.000-05:00","is_admin":false,"about":"Another ${RANDOM} sysadmin sharing his experiences of work at IT industry.\r\n\r\nOn the VERMADEN.WORDPRESS.COM I share knowledge and experience that I gathered by working 10+ years as sysadmin (now architect) at IT industry.\r\n\r\nCountless times various articles or blog posts helped me, so its time to give back.\r\n","is_moderator":false,"karma":4202,"avatar_url":"/avatars/vermaden-100.png","invited_by_user":"gerikson"},"tags":["freebsd","games"]},{"short_id":"vyaimx","short_id_url":"https://lobste.rs/s/vyaimx","created_at":"2023-01-20T16:04:51.000-06:00","title":"Source code for Adobe PostScript 1.0 released","url":"https://computerhistory.org/blog/postscript-a-digital-printing-press/?_hsmi=242355795\u0026_hsenc=p2ANqtz-8frF7VzXO-ffqoGUATsxoRI24JMgSJv-Q8Ic0bUou5TYLoN5ZWdOAEbp8o_NaOUIGgKt7D5DbgGFp00TVUOAVaTc_OU0k7RRp1jf9CZzfOOlvff0c","score":4,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vyaimx/source_code_for_adobe_postscript_1_0","submitter_user":{"username":"lorddimwit","created_at":"2016-08-15T09:39:45.000-05:00","is_admin":false,"about":"\r\n","is_moderator":false,"karma":12765,"avatar_url":"/avatars/lorddimwit-100.png","invited_by_user":"cks","github_username":"deadpixi"},"tags":["historical","plt"]},{"short_id":"8fhp25","short_id_url":"https://lobste.rs/s/8fhp25","created_at":"2023-01-20T15:35:17.000-06:00","title":"cargo careful: run your Rust code with extra careful debug checking","url":"https://www.ralfj.de/blog/2022/09/26/cargo-careful.html","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8fhp25/cargo_careful_run_your_rust_code_with","submitter_user":{"username":"5d22b","created_at":"2022-07-28T00:02:54.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":47,"avatar_url":"/avatars/5d22b-100.png","invited_by_user":"est31"},"tags":["debugging","rust"]},{"short_id":"g93qvt","short_id_url":"https://lobste.rs/s/g93qvt","created_at":"2023-01-20T15:28:53.000-06:00","title":"The importance of licenses, and how they affect community trust  and your product","url":"https://www.linkedin.com/pulse/importance-licenses-how-affect-community-trust-your-product-wildner/","score":7,"flags":1,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g93qvt/importance_licenses_how_they_affect","submitter_user":{"username":"nwildner","created_at":"2020-07-07T19:59:16.000-05:00","is_admin":false,"about":"Random sysadmin","is_moderator":false,"karma":74,"avatar_url":"/avatars/nwildner-100.png","invited_by_user":"leonardovaz","github_username":"nwildner"},"tags":["law"]},{"short_id":"qpoww2","short_id_url":"https://lobste.rs/s/qpoww2","created_at":"2023-01-20T14:19:13.000-06:00","title":"Duet: Creating Harmony between Processors and Embedded FPGAs","url":"https://arxiv.org/pdf/2301.02785.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe demise of Mooreâ€™s Law has led to the rise of hardware acceleration. However, the focus on accelerating stable algorithms in their entirety neglects the abundant fine-grained acceleration opportunities available in broader domains and squanders host processorsâ€™ compute power. This paper presents Duet, a scalable, manycore-FPGA architecture that promotes embedded FPGAs (eFPGA) to be equal peers with processors through non-intrusive, bi-directionally cache-coherent integration. In contrast to existing CPU-FPGA hybrid systems in which the processors play a supportive role, Duet unleashes the full potential of both the processors and the eFPGAs with two classes of post-fabrication enhancements: fine-grained acceleration, which partitions an application into small tasks and offloads the frequently-invoked, compute-intensive ones onto various small accelerators, leveraging the processors to handle dynamic control flow and less accelerable tasks; hardware augmentation, which employs eFPGA-emulated hardware widgets to improve processor efficiency or mitigate software overheads in certain execution models. An RTL-level implementation of Duet is developed to evaluate the architecture with high fidelity. Experiments using synthetic benchmarks show that Duet can reduce the processor-accelerator communication latency by up to 82% and increase the bandwidth by up to 9.5x. The RTL implementation is further evaluated with seven application benchmarks, achieving 1.5-24.9x speedup.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2301.02785\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The demise of Moore's Law has led to the rise of hardware acceleration. However, the focus on accelerating stable algorithms in their entirety neglects the abundant fine-grained acceleration opportunities available in broader domains and squanders host processors' compute power. This paper presents Duet, a scalable, manycore-FPGA architecture that promotes embedded FPGAs (eFPGA) to be equal peers with processors through non-intrusive, bi-directionally cache-coherent integration. In contrast to existing CPU-FPGA hybrid systems in which the processors play a supportive role, Duet unleashes the full potential of both the processors and the eFPGAs with two classes of post-fabrication enhancements: fine-grained acceleration, which partitions an application into small tasks and offloads the frequently-invoked, compute-intensive ones onto various small accelerators, leveraging the processors to handle dynamic control flow and less accelerable tasks; hardware augmentation, which employs eFPGA-emulated hardware widgets to improve processor efficiency or mitigate software overheads in certain execution models. An RTL-level implementation of Duet is developed to evaluate the architecture with high fidelity. Experiments using synthetic benchmarks show that Duet can reduce the processor-accelerator communication latency by up to 82% and increase the bandwidth by up to 9.5x. The RTL implementation is further evaluated with seven application benchmarks, achieving 1.5-24.9x speedup. \r\n\r\n[arXiv](https://arxiv.org/abs/2301.02785)","comments_url":"https://lobste.rs/s/qpoww2/duet_creating_harmony_between","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95151,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","pdf"]},{"short_id":"hqia7g","short_id_url":"https://lobste.rs/s/hqia7g","created_at":"2023-01-20T14:18:44.000-06:00","title":"PiDRAM: A Holistic End-to-end FPGA-based Framework for Processing-in-DRAM","url":"https://dl.acm.org/doi/pdf/10.1145/3563697","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eCommodity DRAM-based processing-using-memory (PuM) techniques that are supported by off-the-shelf DRAM chips present an opportunity for alleviating the data movement bottleneck at low cost. However, sys- tem integration of these techniques imposes non-trivial challenges that are yet to be solved. Potential solu- tions to the integration challenges require appropriate tools to develop any necessary hardware and software components. Unfortunately, current proprietary computing systems, specialized DRAM-testing platforms, or system simulators do not provide the flexibility and/or the holistic system view that is necessary to properly evaluate and deal with the integration challenges of commodity DRAM-based PuM techniques.\nWe design and develop Processing-in-DRAM (PiDRAM), the first flexible end-to-end framework that en- ables system integration studies and evaluation of real, commodity DRAM-based PuM techniques. PiDRAM provides software and hardware components to rapidly integrate PuM techniques across the whole system software and hardware stack. We implement PiDRAM on an FPGA-based RISC-V system. To demonstrate the flexibility and ease of use of PiDRAM, we implement and evaluate two state-of-the-art commodity DRAM- based PuM techniques: (i) in-DRAM copy and initialization (RowClone) and (ii) in-DRAM true random num- ber generation (D-RaNGe). We describe how we solve key integration challenges to make such techniques work and be effective on a real-system prototype, including memory allocation, alignment, and coherence. We observe that end-to-end RowClone speeds up bulk copy and initialization operations by 14.6Ã— and 12.6Ã—, respectively, over conventional CPU copy, even when coherence is supported with inefficient cache flush operations. Over PiDRAMâ€™s extensible codebase, integrating both RowClone and D-RaNGe end-to-end on a real RISC-V system prototype takes only 388 lines of Verilog code and 643 lines of C++ code.\u003c/p\u003e\n","description_plain":"Commodity DRAM-based processing-using-memory (PuM) techniques that are supported by off-the-shelf DRAM chips present an opportunity for alleviating the data movement bottleneck at low cost. However, sys- tem integration of these techniques imposes non-trivial challenges that are yet to be solved. Potential solu- tions to the integration challenges require appropriate tools to develop any necessary hardware and software components. Unfortunately, current proprietary computing systems, specialized DRAM-testing platforms, or system simulators do not provide the flexibility and/or the holistic system view that is necessary to properly evaluate and deal with the integration challenges of commodity DRAM-based PuM techniques.\r\nWe design and develop Processing-in-DRAM (PiDRAM), the first flexible end-to-end framework that en- ables system integration studies and evaluation of real, commodity DRAM-based PuM techniques. PiDRAM provides software and hardware components to rapidly integrate PuM techniques across the whole system software and hardware stack. We implement PiDRAM on an FPGA-based RISC-V system. To demonstrate the flexibility and ease of use of PiDRAM, we implement and evaluate two state-of-the-art commodity DRAM- based PuM techniques: (i) in-DRAM copy and initialization (RowClone) and (ii) in-DRAM true random num- ber generation (D-RaNGe). We describe how we solve key integration challenges to make such techniques work and be effective on a real-system prototype, including memory allocation, alignment, and coherence. We observe that end-to-end RowClone speeds up bulk copy and initialization operations by 14.6Ã— and 12.6Ã—, respectively, over conventional CPU copy, even when coherence is supported with inefficient cache flush operations. Over PiDRAMâ€™s extensible codebase, integrating both RowClone and D-RaNGe end-to-end on a real RISC-V system prototype takes only 388 lines of Verilog code and 643 lines of C++ code.","comments_url":"https://lobste.rs/s/hqia7g/pidram_holistic_end_end_fpga_based","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95151,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","pdf"]},{"short_id":"2e4imj","short_id_url":"https://lobste.rs/s/2e4imj","created_at":"2023-01-20T14:15:46.000-06:00","title":"A Practical Template Attack on CRYSTALS-Dilithium","url":"https://eprint.iacr.org/2023/050.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis paper presents a new profiling side-channel attack on the signature schemeÂ CRYSTALS-Dilithium, which has been selected by the NIST as the new primary standard for quantum-safe digital signatures. This algorithm has a constant-time implementation with consideration for side-channel resilience. However, it does not protect against attacks that exploit intermediate data leakage. We exploit such a leakage on a vector generated during the signing process and whose costly protection by masking is a matter of debate. We design a template attack that enables us to efficiently predict whether a given coefficient in one coordinate of this vector is zero or not. Once this value has been completely reconstructed, one can recover, using linear algebra methods, part of the secret key that is sufficient to produce universal forgeries. While our paper deeply discusses the theoretical attack path, itÂ also demonstrates the validity of the assumption regarding the required leakage model, from practical experiments with the reference implementation on an ARM Cortex-M4.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/050\" rel=\"ugc\"\u003eArchive\u003c/a\u003e\u003c/p\u003e\n","description_plain":"This paper presents a new profiling side-channel attack on the signature schemeÂ CRYSTALS-Dilithium, which has been selected by the NIST as the new primary standard for quantum-safe digital signatures. This algorithm has a constant-time implementation with consideration for side-channel resilience. However, it does not protect against attacks that exploit intermediate data leakage. We exploit such a leakage on a vector generated during the signing process and whose costly protection by masking is a matter of debate. We design a template attack that enables us to efficiently predict whether a given coefficient in one coordinate of this vector is zero or not. Once this value has been completely reconstructed, one can recover, using linear algebra methods, part of the secret key that is sufficient to produce universal forgeries. While our paper deeply discusses the theoretical attack path, itÂ also demonstrates the validity of the assumption regarding the required leakage model, from practical experiments with the reference implementation on an ARM Cortex-M4.\r\n\r\n[Archive](https://eprint.iacr.org/2023/050)","comments_url":"https://lobste.rs/s/2e4imj/practical_template_attack_on_crystals","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95151,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["cryptography","pdf"]}]