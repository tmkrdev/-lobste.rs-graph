[{"short_id":"6bca9e","short_id_url":"https://lobste.rs/s/6bca9e","created_at":"2024-10-25T04:06:40.000-05:00","title":"Is it ok (ethical) to scrape and display full-page content when blog author did not include in it RSS?","url":"","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eHi everyone,\nI’m seeking advice and opinions.\u003c/p\u003e\n\u003cp\u003eI’m building a web-based RSS reader/search engine/discovery tool. Like any RSS reader, my app fetches content from feeds and displays it to subscribers. Often, blog authors include only a short summary to the RSS, and the user has to visit the blog website to read the full content.\u003c/p\u003e\n\u003cp\u003eMy app also attempts to scrape the full webpage of the blog post for search indexing purposes (respecting \u003ccode\u003erobots.txt\u003c/code\u003e, of course). It also saves the HTML content for archiving purposes, like Internet Archive (if the author disallows \u003ccode\u003eia_archiver\u003c/code\u003e user agent, I also honour that and don’t archive).\u003c/p\u003e\n\u003cp\u003eSo, since the app might already store the full content, my dilemma now is \u003cstrong\u003ewhether it’s ok (ethical) to show the full article in my reader?\u003c/strong\u003e This view is never public, so only registered users who subscribe to the blog can see it. But still, it feels wrong, because it’s not even like browser’s “reader mode” — the user does not visit the original page at all.\u003c/p\u003e\n\u003cp\u003eNot ok because:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAuthors who only include a short summary in the RSS do so precisely because they want readers to visit their website.\u003c/li\u003e\n\u003cli\u003eVisiting the original blog is a much more personal experience than reading all blogs from the same UI of the reader app; bloggers craft their digital gardens for visitors!\u003c/li\u003e\n\u003cli\u003eSome blogs include styles, math, scripts, etc. which aren’t rendered correctly elsewhere after scraping.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOk because:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt’s a nicer UX for the reader?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCurious what others think.\u003c/p\u003e\n","description_plain":"Hi everyone,\r\nI'm seeking advice and opinions.\r\n\r\nI'm building a web-based RSS reader/search engine/discovery tool. Like any RSS reader, my app fetches content from feeds and displays it to subscribers. Often, blog authors include only a short summary to the RSS, and the user has to visit the blog website to read the full content. \r\n\r\nMy app also attempts to scrape the full webpage of the blog post for search indexing purposes (respecting `robots.txt`, of course). It also saves the HTML content for archiving purposes, like Internet Archive (if the author disallows `ia_archiver` user agent, I also honour that and don't archive).\r\n\r\nSo, since the app might already store the full content, my dilemma now is **whether it's ok (ethical) to show the full article in my reader?** This view is never public, so only registered users who subscribe to the blog can see it. But still, it feels wrong, because it's not even like browser's \"reader mode\" — the user does not visit the original page at all.\r\n\r\nNot ok because:\r\n- Authors who only include a short summary in the RSS do so precisely because they want readers to visit their website. \r\n- Visiting the original blog is a much more personal experience than reading all blogs from the same UI of the reader app; bloggers craft their digital gardens for visitors!\r\n- Some blogs include styles, math, scripts, etc. which aren't rendered correctly elsewhere after scraping.\r\n\r\nOk because:\r\n- It's a nicer UX for the reader? \r\n\r\nCurious what others think.","comments_url":"https://lobste.rs/s/6bca9e/is_it_ok_ethical_scrape_display_full_page","submitter_user":"freetonik","user_is_author":true,"tags":["privacy"]},{"short_id":"blmm1a","short_id_url":"https://lobste.rs/s/blmm1a","created_at":"2024-10-25T03:12:11.000-05:00","title":"Building \u0026 using simple utils in Rye console","url":"https://asciinema.org/a/684031","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/blmm1a/building_using_simple_utils_rye_console","submitter_user":"refaktor","user_is_author":true,"tags":["programming","video"]},{"short_id":"nwei0f","short_id_url":"https://lobste.rs/s/nwei0f","created_at":"2024-10-25T00:50:43.000-05:00","title":"Understanding leap seconds and time scales","url":"https://nyxspace.com/hifitime/#time-scales","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nwei0f/understanding_leap_seconds_time_scales","submitter_user":"xionbox","user_is_author":true,"tags":["python","rust","science"]},{"short_id":"drulip","short_id_url":"https://lobste.rs/s/drulip","created_at":"2024-10-25T00:48:54.000-05:00","title":"A Desktop for All","url":"https://blogs.gnome.org/adrianvovk/2024/10/25/a-desktop-for-all/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/drulip/desktop_for_all","submitter_user":"calvin","user_is_author":false,"tags":["linux"]},{"short_id":"lazatn","short_id_url":"https://lobste.rs/s/lazatn","created_at":"2024-10-24T19:55:05.000-05:00","title":"Why Safety Profiles Failed","url":"https://www.circle-lang.org/draft-profiles.html","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lazatn/why_safety_profiles_failed","submitter_user":"fanf","user_is_author":false,"tags":["c++"]},{"short_id":"oxdvms","short_id_url":"https://lobste.rs/s/oxdvms","created_at":"2024-10-24T19:48:31.000-05:00","title":"Viewing MacOS system libraries in Ghidra","url":"https://www.scriptalert.one/2024/10/24/ghidra-dyld-extraction.html","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oxdvms/viewing_macos_system_libraries_ghidra","submitter_user":"sigint","user_is_author":true,"tags":["mac","reversing"]},{"short_id":"ga9gow","short_id_url":"https://lobste.rs/s/ga9gow","created_at":"2024-10-24T18:11:25.000-05:00","title":"A line map for Milano's trams in TeX","url":"https://stuebinm.eu/posts/milano-tram-network.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ga9gow/line_map_for_milano_s_trams_tex","submitter_user":"fanf","user_is_author":false,"tags":["graphics"]},{"short_id":"rgr7wc","short_id_url":"https://lobste.rs/s/rgr7wc","created_at":"2024-10-24T17:48:45.000-05:00","title":"Private Cloud Compute Security Guide","url":"https://security.apple.com/documentation/private-cloud-compute","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rgr7wc/private_cloud_compute_security_guide","submitter_user":"cadey","user_is_author":false,"tags":["ai","mac","security"]},{"short_id":"gr7ecy","short_id_url":"https://lobste.rs/s/gr7ecy","created_at":"2024-10-24T17:40:41.000-05:00","title":"A Typed Foundation for Directional Logic Programming","url":"https://www.cs.bham.ac.uk/%7Eudr/papers/directional.pdf","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gr7ecy/typed_foundation_for_directional_logic","submitter_user":"veqq","user_is_author":false,"tags":["ai","pdf","plt"]},{"short_id":"djphwz","short_id_url":"https://lobste.rs/s/djphwz","created_at":"2024-10-24T17:27:26.000-05:00","title":"Type Tailoring","url":"https://users.cs.utah.edu/~blg/publications/tt/wcfg-ecoop-2024.pdf","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/djphwz/type_tailoring","submitter_user":"veqq","user_is_author":false,"tags":["lisp","pdf","plt"]},{"short_id":"ni3whu","short_id_url":"https://lobste.rs/s/ni3whu","created_at":"2024-10-24T16:40:03.000-05:00","title":"Automated Verification of Go Programs via Bounded Model Checking (2021)","url":"https://pure.royalholloway.ac.uk/ws/portalfiles/portal/43117606/main.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ni3whu/automated_verification_go_programs_via","submitter_user":"hwayne","user_is_author":false,"tags":["formalmethods","go","pdf"]},{"short_id":"oldmly","short_id_url":"https://lobste.rs/s/oldmly","created_at":"2024-10-24T15:06:16.000-05:00","title":"Introducing quantized Llama models with increased speed and a reduced memory footprint","url":"https://ai.meta.com/blog/meta-llama-quantized-lightweight-models/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oldmly/introducing_quantized_llama_models_with","submitter_user":"friendlysock","user_is_author":false,"tags":["ai","performance"]},{"short_id":"g40ccn","short_id_url":"https://lobste.rs/s/g40ccn","created_at":"2024-10-24T14:59:40.000-05:00","title":"Logical vs Physical Data Types","url":"https://blog.spiraldb.com/logical-vs-physical-data-types/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g40ccn/logical_vs_physical_data_types","submitter_user":"gatesn","user_is_author":true,"tags":["databases"]},{"short_id":"lonz1j","short_id_url":"https://lobste.rs/s/lonz1j","created_at":"2024-10-24T14:55:31.000-05:00","title":"On Rust in enterprise kernels","url":"https://lwn.net/Articles/993337/","score":9,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lonz1j/on_rust_enterprise_kernels","submitter_user":"lonjil","user_is_author":false,"tags":["linux","rust"]},{"short_id":"um2o6t","short_id_url":"https://lobste.rs/s/um2o6t","created_at":"2024-10-24T14:35:16.000-05:00","title":"Keynote presentation by Hal Abelson and Gerald Sussman at the fourteenth RacketCon","url":"https://youtu.be/_2qXIDO-cWw","score":13,"flags":0,"comment_count":1,"description":"\u003cp\u003eThe Keynote presentation by Hal Abelson and Gerald Sussman at the fourteenth RacketCon is now available at \u003ca href=\"https://youtu.be/_2qXIDO-cWw\" rel=\"ugc\"\u003ehttps://youtu.be/_2qXIDO-cWw\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The Keynote presentation by Hal Abelson and Gerald Sussman at the fourteenth RacketCon is now available at https://youtu.be/_2qXIDO-cWw","comments_url":"https://lobste.rs/s/um2o6t/keynote_presentation_by_hal_abelson","submitter_user":"spdegabrielle","user_is_author":false,"tags":["lisp","video"]},{"short_id":"jvtako","short_id_url":"https://lobste.rs/s/jvtako","created_at":"2024-10-24T13:53:08.000-05:00","title":"Framework overload: when convenience dulls innovation in software development","url":"https://prahladyeri.github.io/blog/2024/10/framework-overload.html","score":14,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jvtako/framework_overload_when_convenience","submitter_user":"pyeri","user_is_author":true,"tags":["compsci","culture","programming"]},{"short_id":"z0qqqb","short_id_url":"https://lobste.rs/s/z0qqqb","created_at":"2024-10-24T12:34:49.000-05:00","title":"Security research on Private Cloud Compute","url":"https://security.apple.com/blog/pcc-security-research/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/z0qqqb/security_research_on_private_cloud","submitter_user":"achivetta","user_is_author":false,"tags":["ios","mac","security"]},{"short_id":"cd3bhp","short_id_url":"https://lobste.rs/s/cd3bhp","created_at":"2024-10-24T11:42:06.000-05:00","title":"Why did you write a new RTOS for CHERIoT?","url":"https://cheriot.org/rtos/philosophy/history/2024/10/24/why-new-rtos.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cd3bhp/why_did_you_write_new_rtos_for_cheriot","submitter_user":"calvin","user_is_author":false,"tags":["osdev"]},{"short_id":"k9j88p","short_id_url":"https://lobste.rs/s/k9j88p","created_at":"2024-10-24T11:40:08.000-05:00","title":"cstructpy: Easy binary representations of structs","url":"https://github.com/Maxim-Mushizky/cstructpy","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/k9j88p/cstructpy_easy_binary_representations","submitter_user":"ngoldbaum","user_is_author":false,"tags":["c","python"]},{"short_id":"liyn1r","short_id_url":"https://lobste.rs/s/liyn1r","created_at":"2024-10-24T11:01:28.000-05:00","title":"Bookmark Keywords: a hidden firefox feature","url":"https://paper.wf/binarycat/bookmark-keywords","score":28,"flags":0,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/liyn1r/bookmark_keywords_hidden_firefox","submitter_user":"binarycat","user_is_author":true,"tags":["browsers"]},{"short_id":"m1mv4o","short_id_url":"https://lobste.rs/s/m1mv4o","created_at":"2024-10-24T10:57:41.000-05:00","title":"The Structure of a Programming Language Revolution (2012)","url":"https://www.dreamsongs.com/Files/Incommensurability.pdf","score":6,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/m1mv4o/structure_programming_language","submitter_user":"dpk","user_is_author":false,"tags":["historical","pdf","plt"]},{"short_id":"lqbeno","short_id_url":"https://lobste.rs/s/lqbeno","created_at":"2024-10-24T09:53:22.000-05:00","title":"Embeddings are underrated","url":"https://technicalwriting.dev/data/embeddings.html","score":9,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lqbeno/embeddings_are_underrated","submitter_user":"kaycebasques","user_is_author":true,"tags":["ai","practices","science"]},{"short_id":"snlvnt","short_id_url":"https://lobste.rs/s/snlvnt","created_at":"2024-10-24T09:15:57.000-05:00","title":"Building a better and scalable system for data migrations","url":"https://yorickpeterse.com/articles/building-a-better-and-scalable-system-for-data-migrations/","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/snlvnt/building_better_scalable_system_for_data","submitter_user":"yorickpeterse","user_is_author":true,"tags":["databases","scaling"]},{"short_id":"0bbipa","short_id_url":"https://lobste.rs/s/0bbipa","created_at":"2024-10-24T09:05:51.000-05:00","title":"A Practitioner's Guide to Wide Events","url":"https://jeremymorrell.dev/blog/a-practitioners-guide-to-wide-events/","score":10,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0bbipa/practitioner_s_guide_wide_events","submitter_user":"jaywhy13","user_is_author":false,"tags":["distributed"]},{"short_id":"cd5dgk","short_id_url":"https://lobste.rs/s/cd5dgk","created_at":"2024-10-24T08:35:08.000-05:00","title":"A Compiler for 3D Machine Knitting","url":"https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20160705213118/A-Compiler-for-3D-Machine-Knitting-Paper.pdf","score":24,"flags":0,"comment_count":8,"description":"\u003cp\u003eThe authors of another \u003ca href=\"https://lobste.rs/s/vwbhve/paper_feminism_programming_language\" rel=\"ugc\"\u003epaper\u003c/a\u003e mentioned the connection between knitting and programming languages which reminded me that compilers for knitting machines are a thing, which blew my mind when I first learned about it. Here’s the first paper I could find on the topic from a quick search.\u003c/p\u003e\n\u003cp\u003eAbstract:\u003c/p\u003e\n\u003cp\u003eIndustrial knitting machines can produce finely detailed, seamless, 3D surfaces quickly and without human intervention. However, the tools used to program them require detailed manipulation and understanding of low-level knitting operations. We present a compiler that can automatically turn assemblies of high-level shape primitives (tubes, sheets) into low-level machine instructions. These high-level shape primitives allow knit objects to be scheduled, scaled, and otherwise shaped in ways that require thousands of edits to low-level instructions. At the core of our compiler is a heuristic transfer planning algorithm for knit cycles, which we prove is both sound and complete. This algorithm enables the translation of high-level shaping and scheduling operations into needle-level\noperations. We show a wide range of examples produced with our compiler and demonstrate a basic visual design interface that uses our compiler as a backend.\u003c/p\u003e\n","description_plain":"The authors of another [paper](https://lobste.rs/s/vwbhve/paper_feminism_programming_language) mentioned the connection between knitting and programming languages which reminded me that compilers for knitting machines are a thing, which blew my mind when I first learned about it. Here's the first paper I could find on the topic from a quick search.\r\n\r\nAbstract:\r\n\r\nIndustrial knitting machines can produce finely detailed, seamless, 3D surfaces quickly and without human intervention. However, the tools used to program them require detailed manipulation and understanding of low-level knitting operations. We present a compiler that can automatically turn assemblies of high-level shape primitives (tubes, sheets) into low-level machine instructions. These high-level shape primitives allow knit objects to be scheduled, scaled, and otherwise shaped in ways that require thousands of edits to low-level instructions. At the core of our compiler is a heuristic transfer planning algorithm for knit cycles, which we prove is both sound and complete. This algorithm enables the translation of high-level shaping and scheduling operations into needle-level\r\noperations. We show a wide range of examples produced with our compiler and demonstrate a basic visual design interface that uses our compiler as a backend.","comments_url":"https://lobste.rs/s/cd5dgk/compiler_for_3d_machine_knitting","submitter_user":"alexshroyer","user_is_author":false,"tags":["compilers","pdf"]}]