[{"short_id":"oyvjvc","short_id_url":"https://lobste.rs/s/oyvjvc","created_at":"2023-09-22T05:05:27.000-05:00","title":"What are you doing this weekend?","url":"","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eFeel free to tell what you plan on doing this weekend and even ask for help or feedback.\u003c/p\u003e\n\u003cp\u003ePlease keep in mind it‚Äôs more than OK to do nothing at all too!\u003c/p\u003e\n","description_plain":"Feel free to tell what you plan on doing this weekend and even ask for help or feedback.\r\n\r\nPlease keep in mind it‚Äôs more than OK to do nothing at all too!","comments_url":"https://lobste.rs/s/oyvjvc/what_are_you_doing_this_weekend","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":9309,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius","twitter_username":"Caius"},"tags":["ask","programming"]},{"short_id":"lqasvg","short_id_url":"https://lobste.rs/s/lqasvg","created_at":"2023-09-22T04:49:15.000-05:00","title":"How dplyr replaced my most common R idioms (2014)","url":"https://web.archive.org/web/20200223002527/http://www.onthelambda.com/2014/02/10/how-dplyr-replaced-my-most-common-r-idioms/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lqasvg/how_dplyr_replaced_my_most_common_r_idioms","submitter_user":{"username":"Sietsebb","created_at":"2017-01-03T08:32:51.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":3272,"avatar_url":"/avatars/Sietsebb-100.png","invited_by_user":"asthasr"},"tags":["plt"]},{"short_id":"b54afl","short_id_url":"https://lobste.rs/s/b54afl","created_at":"2023-09-22T03:49:30.000-05:00","title":"How the Minecraft Library of Babel Works","url":"https://youtu.be/WFFi9zVtvsw","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/b54afl/how_minecraft_library_babel_works","submitter_user":{"username":"cadey","created_at":"2019-03-08T17:23:38.000-06:00","is_admin":false,"about":"Xe Iaso\r\n\r\nkastermakfa\r\n\r\nko kanro","is_moderator":false,"karma":11307,"avatar_url":"/avatars/cadey-100.png","invited_by_user":"apg","github_username":"Xe","twitter_username":"theprincessxena","keybase_signatures":[{"kb_username":"xena","sig_hash":"a19dbebc33a79273556666968b3ec01d986d34e4a53cc9e0ece695b9bec4cd6c0f"}]},"tags":["cryptography","games","video"]},{"short_id":"nh2qli","short_id_url":"https://lobste.rs/s/nh2qli","created_at":"2023-09-22T01:27:40.000-05:00","title":"CodeMusings","url":"https://codemusings.nl/about","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nh2qli/codemusings","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":23194,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["practices","web"]},{"short_id":"tvhfwd","short_id_url":"https://lobste.rs/s/tvhfwd","created_at":"2023-09-22T00:34:10.000-05:00","title":"Drawing Hat tiling using Racket","url":"https://rdivyanshu.github.io/hat.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tvhfwd/drawing_hat_tiling_using_racket","submitter_user":{"username":"rdivyanshu","created_at":"2014-03-04T09:27:59.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":4,"avatar_url":"/avatars/rdivyanshu-100.png","invited_by_user":"lauris"},"tags":["lisp","math"]},{"short_id":"h3va2e","short_id_url":"https://lobste.rs/s/h3va2e","created_at":"2023-09-21T23:32:39.000-05:00","title":"Introducing the Azure Quantum Development Kit Preview","url":"https://devblogs.microsoft.com/qsharp/introducing-the-azure-quantum-development-kit-preview/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h3va2e/introducing_azure_quantum_development","submitter_user":{"username":"briankung","created_at":"2017-04-03T00:20:29.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2184,"avatar_url":"/avatars/briankung-100.png","invited_by_user":"gsylvie"},"tags":["nodejs","programming","python","rust"]},{"short_id":"f18rax","short_id_url":"https://lobste.rs/s/f18rax","created_at":"2023-09-21T20:57:25.000-05:00","title":"I'm Re-Imagining the Command Line Interpreter","url":"https://youtu.be/NxsaHxON350?si=e178BNvF7N8zUuiF","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/f18rax/i_m_re_imagining_command_line_interpreter","submitter_user":{"username":"bernhard","created_at":"2023-06-13T11:28:29.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":88,"avatar_url":"/avatars/bernhard-100.png","invited_by_user":"offby1"},"tags":["programming","video"]},{"short_id":"3rnney","short_id_url":"https://lobste.rs/s/3rnney","created_at":"2023-09-21T20:08:50.000-05:00","title":"Nintendo 3DS architecture","url":"https://www.copetti.org/writings/consoles/nintendo-3ds/","score":12,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3rnney/nintendo_3ds_architecture","submitter_user":{"username":"classichasclass","created_at":"2018-11-05T18:45:47.000-06:00","is_admin":false,"about":"no you're off topic","is_moderator":false,"karma":3333,"avatar_url":"/avatars/classichasclass-100.png","invited_by_user":"sevan"},"tags":["games","hardware"]},{"short_id":"rm9xnh","short_id_url":"https://lobste.rs/s/rm9xnh","created_at":"2023-09-21T19:05:52.000-05:00","title":"Taming the OOM killer","url":"https://lwn.net/Articles/317814/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rm9xnh/taming_oom_killer","submitter_user":{"username":"weakforce","created_at":"2016-02-18T13:37:31.000-06:00","is_admin":false,"about":"Science + Programming = Awesomeness","is_moderator":false,"karma":360,"avatar_url":"/avatars/weakforce-100.png","invited_by_user":"pushcx"},"tags":["linux"]},{"short_id":"ncwngm","short_id_url":"https://lobste.rs/s/ncwngm","created_at":"2023-09-21T18:55:52.000-05:00","title":"Godot Binding System Explained","url":"https://gist.github.com/reduz/cb05fe96079e46785f08a79ec3b0ef21","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ncwngm/godot_binding_system_explained","submitter_user":{"username":"Decabytes","created_at":"2023-06-30T15:01:10.000-05:00","is_admin":false,"about":"An enjoyer of programming and technology. I run the blog https://www.deusinmachina.net/","is_moderator":false,"karma":314,"avatar_url":"/avatars/Decabytes-100.png","invited_by_user":"gerikson"},"tags":["games"]},{"short_id":"ttscua","short_id_url":"https://lobste.rs/s/ttscua","created_at":"2023-09-21T18:45:11.000-05:00","title":"Why Are There So Many Python Dataframes?","url":"https://ponder.io/why-are-there-so-many-python-dataframes/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ttscua/why_are_there_so_many_python_dataframes","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":7498,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["python"]},{"short_id":"bvypaa","short_id_url":"https://lobste.rs/s/bvypaa","created_at":"2023-09-21T16:34:07.000-05:00","title":"buzz - A small/lightweight statically typed scripting language","url":"https://buzz-lang.dev","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bvypaa/buzz_small_lightweight_statically_typed","submitter_user":{"username":"g-w1","created_at":"2021-03-13T20:03:22.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":716,"avatar_url":"/avatars/g-w1-100.png","invited_by_user":"vaibhavsagar","github_username":"g-w1"},"tags":["plt","zig"]},{"short_id":"cjyajl","short_id_url":"https://lobste.rs/s/cjyajl","created_at":"2023-09-21T16:21:53.000-05:00","title":"SCUDO Hardened Allocator ‚Äî Unofficial Internals Documentation","url":"https://trenchant.io/scudo-hardened-allocator-unofficial-internals-documentation/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cjyajl/scudo_hardened_allocator_unofficial","submitter_user":{"username":"fro","created_at":"2016-04-13T15:27:31.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1893,"avatar_url":"/avatars/fro-100.png","invited_by_user":"xero"},"tags":["security"]},{"short_id":"iovz9o","short_id_url":"https://lobste.rs/s/iovz9o","created_at":"2023-09-21T16:00:24.000-05:00","title":"The State of Async Rust","url":"https://corrode.dev/blog/async/","score":13,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iovz9o/state_async_rust","submitter_user":{"username":"robey","created_at":"2013-12-19T22:12:04.000-06:00","is_admin":false,"about":"Hi, I'm Robey. Generally interested in crypto, programming languages, and distributed systems.\r\n\r\n- fediverse: @robey@messydesk.social\r\n- gitea: https://code.lag.net/robey/\r\n","is_moderator":false,"karma":1925,"avatar_url":"/avatars/robey-100.png","invited_by_user":"seldo","github_username":"robey"},"tags":["rust"]},{"short_id":"hx8vjb","short_id_url":"https://lobste.rs/s/hx8vjb","created_at":"2023-09-21T15:01:58.000-05:00","title":"The WebP 0day","url":"https://blog.isosceles.com/the-webp-0day/","score":17,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hx8vjb/webp_0day","submitter_user":{"username":"nwf","created_at":"2023-07-14T10:31:17.000-05:00","is_admin":false,"about":"Computer architecture, operating systems, and programming languages weenie.","is_moderator":false,"karma":22,"avatar_url":"/avatars/nwf-100.png","invited_by_user":"david_chisnall"},"tags":["security"]},{"short_id":"fvalqf","short_id_url":"https://lobste.rs/s/fvalqf","created_at":"2023-09-21T14:53:41.000-05:00","title":"AWK for Exploratory Data Analysis of Humanities Data","url":"https://awk.dev/eda.html","score":12,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fvalqf/awk_for_exploratory_data_analysis","submitter_user":{"username":"benhoyt","created_at":"2020-05-20T17:24:04.000-05:00","is_admin":false,"about":"Software engineer at Canonical. Author of [GoAWK](https://github.com/benhoyt/goawk), a POSIX-compatible AWK interpreter written in Go. Author of Python's [`os.scandir()`](https://peps.python.org/pep-0471/). Husband, father, Christian. See my website at [BenHoyt.com](https://benhoyt.com/).","is_moderator":false,"karma":1647,"avatar_url":"/avatars/benhoyt-100.png","invited_by_user":"mvdan"},"tags":["education"]},{"short_id":"psdmso","short_id_url":"https://lobste.rs/s/psdmso","created_at":"2023-09-21T14:53:12.000-05:00","title":"Matrix 2.0: The Future of Matrix","url":"https://matrix.org/blog/2023/09/matrix-2-0/","score":35,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/psdmso/matrix_2_0_future_matrix","submitter_user":{"username":"ptman","created_at":"2017-06-07T09:22:20.000-05:00","is_admin":false,"about":"https://paul.totterman.name/","is_moderator":false,"karma":1405,"avatar_url":"/avatars/ptman-100.png","invited_by_user":"lau","github_username":"ptman","twitter_username":"ptotterm"},"tags":["networking"]},{"short_id":"tkzyme","short_id_url":"https://lobste.rs/s/tkzyme","created_at":"2023-09-21T14:19:03.000-05:00","title":"How do databases execute expressions?","url":"https://notes.eatonphil.com/2023-09-21-how-do-databases-execute-expressions.html","score":15,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tkzyme/how_do_databases_execute_expressions","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Info at eatonphil.com.\r\n\r\nphil@eatonphil.com","is_moderator":false,"karma":5169,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"tags":["compilers","databases"]},{"short_id":"yst7r6","short_id_url":"https://lobste.rs/s/yst7r6","created_at":"2023-09-21T12:59:11.000-05:00","title":"Behind the scenes with FawltyDeps v0.13.0: Matching imports with dependencies","url":"https://www.tweag.io/blog/2023-09-21-fawltydeps-mapping-strategy/","score":3,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yst7r6/behind_scenes_with_fawltydeps_v0_13_0","submitter_user":{"username":"myme","created_at":"2019-04-12T15:15:36.000-05:00","is_admin":false,"about":"Software developer by trade and passion: https://myme.no / https://mastodon.social/@myme","is_moderator":false,"karma":270,"avatar_url":"/avatars/myme-100.png","invited_by_user":"dlowe","github_username":"myme","twitter_username":"ubermyme"},"tags":["python"]},{"short_id":"xr24nd","short_id_url":"https://lobste.rs/s/xr24nd","created_at":"2023-09-21T12:58:59.000-05:00","title":"Memories of a really goofy phone from the late 80s","url":"https://rachelbythebay.com/w/2023/09/20/fv1000/","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xr24nd/memories_really_goofy_phone_from_late_80s","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":13033,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["hardware","historical"]},{"short_id":"rtepnw","short_id_url":"https://lobste.rs/s/rtepnw","created_at":"2023-09-21T12:26:55.000-05:00","title":"Most UI Applications are Broken Real-time Applications","url":"https://thelig.ht/ui-apps-are-broken/","score":31,"flags":0,"comment_count":26,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rtepnw/most_ui_applications_are_broken_real_time","submitter_user":{"username":"herbalmist","created_at":"2023-08-18T11:56:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":58,"avatar_url":"/avatars/herbalmist-100.png","invited_by_user":"sujayakar"},"tags":["graphics","linux","mac","windows"]},{"short_id":"rlkuts","short_id_url":"https://lobste.rs/s/rlkuts","created_at":"2023-09-21T10:52:34.000-05:00","title":"The CHERI Instruction-Set Architecture, Version 9","url":"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-987.html","score":6,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis technical report describes CHERI ISAv9, the ninth version of the CHERI architecture being developed by SRI International and the University of Cambridge. This design captures thirteen years of research, development, experimentation, refinement, formal analysis, and validation through hardware and software implementation.\u003c/p\u003e\n\u003cp\u003eCHERI introduces an architecture-neutral capability-based protection model, which has been instantiated in various commodity base architectures to give CHERI-RISC-V, Arm‚Äôs prototype Morello architecture, and (sketched) CHERI-x86-64. It enables software to efficiently implement fine-grained memory protection and scalable software compartmentalization, by providing strong, deterministic, efficient mechanisms to support the principles of least privilege and intentional use in the execution of software at multiple levels of abstraction, preventing and mitigating vulnerabilities. Design goals include incremental adoptability from current ISAs and software stacks, low performance overhead for memory protection, significant performance improvements for software compartmentalization, formal grounding, and programmer-friendly underpinnings.\u003c/p\u003e\n\u003cp\u003eCHERI blends traditional paged virtual memory with an in-address-space capability model that includes capability values in registers, capability instructions, and tagged memory to enforce capability integrity. This hybrid approach addresses the performance and robustness issues that arise when trying to express more secure, privilege minimising programming models, above conventional architectures that provide only MMU-based protection. CHERI builds on the C-language fat-pointer literature: its capabilities can describe fine-grained regions of memory, and can be substituted for data or code pointers in generated code, protecting data and improving control-flow robustness. Strong capability integrity and monotonicity properties allow CHERI to express a variety of protection idioms, from enforcing valid C-language pointer provenance and bounds checking to implementing the isolation and controlled communication structures required for software compartmentalization.\u003c/p\u003e\n\u003cp\u003eCHERI‚Äôs hybrid approach allows incremental adoption of capability-oriented design: critical components can be ported and recompiled to use capabilities throughout, providing finegrain memory protection, or be largely unmodified but encapsulated in ways that permit only controlled interaction. Potential early deployment scenarios include low-level software Trusted Computing Bases (TCBs) such as separation kernels, hypervisors, and operating-system kernels, userspace TCBs such as language runtimes and web browsers, and particularly high-risk software libraries such as data compression, protocol parsing, and image processing (which are concentrations of both complex and historically vulnerability-prone code exposed to untrustworthy data sources).\u003c/p\u003e\n\u003cp\u003eCHERI ISAv9 is a substantial enhancement to prior ISA versions. CHERI-RISC-V has replaced CHERI-MIPS as the primary reference platform, and CHERI-MIPS has been removed from the specification. CHERI architectures now always use merged register files where existing general-purpose registers are extended to support capabilities. CHERI architectures have adopted two design decisions from Arm Morello: 1) CHERI architectures now clear tags rather than raising exceptions if an instruction attempts a non-monotonic modification of a capability; and 2) DDC and PCC no longer relocate legacy memory accesses by default. CHERI-RISC-V has received numerous updates to serve as a better baseline for an upstream standard proposal including a more mature definition of compressed instructions in capability mode. CHERI-x86- 64 now includes details of extensions to existing x86 instructions and proposed new instructions in a separate ISA reference chapter along with various other updates.\u003c/p\u003e\n","description_plain":"This technical report describes CHERI ISAv9, the ninth version of the CHERI architecture being developed by SRI International and the University of Cambridge. This design captures thirteen years of research, development, experimentation, refinement, formal analysis, and validation through hardware and software implementation.\r\n\r\nCHERI introduces an architecture-neutral capability-based protection model, which has been instantiated in various commodity base architectures to give CHERI-RISC-V, Arm‚Äôs prototype Morello architecture, and (sketched) CHERI-x86-64. It enables software to efficiently implement fine-grained memory protection and scalable software compartmentalization, by providing strong, deterministic, efficient mechanisms to support the principles of least privilege and intentional use in the execution of software at multiple levels of abstraction, preventing and mitigating vulnerabilities. Design goals include incremental adoptability from current ISAs and software stacks, low performance overhead for memory protection, significant performance improvements for software compartmentalization, formal grounding, and programmer-friendly underpinnings.\r\n\r\nCHERI blends traditional paged virtual memory with an in-address-space capability model that includes capability values in registers, capability instructions, and tagged memory to enforce capability integrity. This hybrid approach addresses the performance and robustness issues that arise when trying to express more secure, privilege minimising programming models, above conventional architectures that provide only MMU-based protection. CHERI builds on the C-language fat-pointer literature: its capabilities can describe fine-grained regions of memory, and can be substituted for data or code pointers in generated code, protecting data and improving control-flow robustness. Strong capability integrity and monotonicity properties allow CHERI to express a variety of protection idioms, from enforcing valid C-language pointer provenance and bounds checking to implementing the isolation and controlled communication structures required for software compartmentalization.\r\n\r\nCHERI‚Äôs hybrid approach allows incremental adoption of capability-oriented design: critical components can be ported and recompiled to use capabilities throughout, providing finegrain memory protection, or be largely unmodified but encapsulated in ways that permit only controlled interaction. Potential early deployment scenarios include low-level software Trusted Computing Bases (TCBs) such as separation kernels, hypervisors, and operating-system kernels, userspace TCBs such as language runtimes and web browsers, and particularly high-risk software libraries such as data compression, protocol parsing, and image processing (which are concentrations of both complex and historically vulnerability-prone code exposed to untrustworthy data sources).\r\n\r\nCHERI ISAv9 is a substantial enhancement to prior ISA versions. CHERI-RISC-V has replaced CHERI-MIPS as the primary reference platform, and CHERI-MIPS has been removed from the specification. CHERI architectures now always use merged register files where existing general-purpose registers are extended to support capabilities. CHERI architectures have adopted two design decisions from Arm Morello: 1) CHERI architectures now clear tags rather than raising exceptions if an instruction attempts a non-monotonic modification of a capability; and 2) DDC and PCC no longer relocate legacy memory accesses by default. CHERI-RISC-V has received numerous updates to serve as a better baseline for an upstream standard proposal including a more mature definition of compressed instructions in capability mode. CHERI-x86- 64 now includes details of extensions to existing x86 instructions and proposed new instructions in a separate ISA reference chapter along with various other updates.","comments_url":"https://lobste.rs/s/rlkuts/cheri_instruction_set_architecture","submitter_user":{"username":"nwf","created_at":"2023-07-14T10:31:17.000-05:00","is_admin":false,"about":"Computer architecture, operating systems, and programming languages weenie.","is_moderator":false,"karma":22,"avatar_url":"/avatars/nwf-100.png","invited_by_user":"david_chisnall"},"tags":["hardware","pdf","release"]},{"short_id":"dkfkva","short_id_url":"https://lobste.rs/s/dkfkva","created_at":"2023-09-21T10:45:06.000-05:00","title":"State of HTML 2023","url":"https://survey.devographics.com/en-US/survey/state-of-html/2023","score":-1,"flags":2,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dkfkva/state_html_2023","submitter_user":{"username":"dz4k","created_at":"2022-12-21T15:27:51.000-06:00","is_admin":false,"about":"I'm https://denizaksimsek.com","is_moderator":false,"karma":472,"avatar_url":"/avatars/dz4k-100.png","invited_by_user":"1cg","github_username":"dz4k"},"tags":["web"]},{"short_id":"ph57od","short_id_url":"https://lobste.rs/s/ph57od","created_at":"2023-09-21T10:42:32.000-05:00","title":"Mastodon 4.2","url":"https://blog.joinmastodon.org/2023/09/mastodon-4.2/","score":45,"flags":0,"comment_count":20,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ph57od/mastodon_4_2","submitter_user":{"username":"andypiper","created_at":"2023-04-05T06:52:37.000-05:00","is_admin":false,"about":"[maker](https://github.com/andypiper), [tinkerer](https://forgeandcraft.co.uk), [podcaster](https://gamesatwork.biz)","is_moderator":false,"karma":63,"avatar_url":"/avatars/andypiper-100.png","invited_by_user":"edent","github_username":"andypiper"},"tags":["release"]},{"short_id":"bu9mfy","short_id_url":"https://lobste.rs/s/bu9mfy","created_at":"2023-09-21T09:58:40.000-05:00","title":"Supply Chain Issues in PyPI","url":"https://stiankri.substack.com/p/supply-chain-issues-in-pypi","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bu9mfy/supply_chain_issues_pypi","submitter_user":{"username":"wayphinder","created_at":"2023-07-25T14:12:49.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":5,"avatar_url":"/avatars/wayphinder-100.png","invited_by_user":"Foxboron"},"tags":["python","security"]}]