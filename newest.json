[{"short_id":"r8awbv","short_id_url":"https://lobste.rs/s/r8awbv","created_at":"2024-11-20T10:43:04.000-06:00","title":"AI-generated poetry is indistinguishable from human-written poetry and is rated more favorably","url":"https://www.nature.com/articles/s41598-024-76900-1","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r8awbv/ai_generated_poetry_is","submitter_user":"coby","user_is_author":false,"tags":["ai"]},{"short_id":"w5vg8n","short_id_url":"https://lobste.rs/s/w5vg8n","created_at":"2024-11-20T10:23:37.000-06:00","title":"Using gRPC for (local) inter-process communication","url":"https://www.mpi-hd.mpg.de/personalhomes/fwerner/research/2021/09/grpc-for-ipc/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/w5vg8n/using_grpc_for_local_inter_process","submitter_user":"danthegoodman1","user_is_author":false,"tags":["distributed"]},{"short_id":"gqwgnf","short_id_url":"https://lobste.rs/s/gqwgnf","created_at":"2024-11-20T10:00:44.000-06:00","title":"For the first time ever researchers crack RSA and AES data encryption","url":"https://www.thebrighterside.news/post/for-the-first-time-ever-researchers-crack-rsa-and-aes-data-encryption/","score":1,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gqwgnf/for_first_time_ever_researchers_crack_rsa","submitter_user":"wink","user_is_author":false,"tags":["cryptography"]},{"short_id":"dykh3g","short_id_url":"https://lobste.rs/s/dykh3g","created_at":"2024-11-20T09:57:01.000-06:00","title":"kloak: Keystroke-level online anonymization kernel","url":"https://github.com/Whonix/kloak","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dykh3g/kloak_keystroke_level_online","submitter_user":"Seirdy","user_is_author":false,"tags":["linux","privacy"]},{"short_id":"ew5kc4","short_id_url":"https://lobste.rs/s/ew5kc4","created_at":"2024-11-20T09:53:37.000-06:00","title":"How Many Business Values Does a True/False Field Have?","url":"https://johndehope.mataroa.blog/blog/how-many-business-values-does-a-truefalse-field-have/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ew5kc4/how_many_business_values_does_true_false","submitter_user":"JohnDeHope","user_is_author":true,"tags":["philosophy","programming"]},{"short_id":"scmoye","short_id_url":"https://lobste.rs/s/scmoye","created_at":"2024-11-20T09:36:46.000-06:00","title":"Five Principles for Good Systems Design","url":"https://youtu.be/RcofAOF0Icc","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/scmoye/five_principles_for_good_systems_design","submitter_user":"matklad","user_is_author":false,"tags":["distributed","practices","video"]},{"short_id":"qyoxpq","short_id_url":"https://lobste.rs/s/qyoxpq","created_at":"2024-11-20T09:28:29.000-06:00","title":"mimic: eBPF UDP -\u003e TCP obfuscator","url":"https://github.com/hack3ric/mimic","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qyoxpq/mimic_ebpf_udp_tcp_obfuscator","submitter_user":"gioele","user_is_author":false,"tags":["linux","networking"]},{"short_id":"3a8qrd","short_id_url":"https://lobste.rs/s/3a8qrd","created_at":"2024-11-20T09:23:59.000-06:00","title":"Organizing Recipes with ML For Creative Cooking","url":"https://aggressivelyparaphrasing.me/2024/11/19/organizing-recipes-with-ml-for-creative-cooking/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eI organized all my recipes using ML!  My old Google Doc crashes during search since there’s too much content now.  I tried some existing recipe management apps and they all were a little disappointing, especially for search.  I’m a very flexible cook but I use recipes for inspiration so I really want fuzzy search when looking for recipes.  So I built it!\u003c/p\u003e\n\u003cp\u003eHighlights:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003esearching for shrimp will suggest prawns, seafood, fish…\u003c/li\u003e\n\u003cli\u003esearching for “tomatoes and eggs” will suggest “tomato and egg” to be more inclusive\u003c/li\u003e\n\u003cli\u003esearching for “ratatouie” will suggest “ratatouille” cause my spelling is mid and I cook a lot of languages that are romanized inconsistently (chow mein, chao main)\u003c/li\u003e\n\u003cli\u003eit’ll show related recipes – “Red Braised Pork” suggests “Orange and Milk Braised Pork Carnitas”, “Sukiyaki Ginger Pork”, “Brown Sugar Bourbon Apple Pork Chops”\u003c/li\u003e\n\u003cli\u003esupports searching through linked content (youtube subtitles, descriptions, comments section).  Just drop a link and it’ll be searchable!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou can \u003ca href=\"https://aggressivelyparaphrasing.me/2024/11/19/organizing-recipes-with-ml-for-creative-cooking/\" rel=\"ugc\"\u003eread about it on my blog\u003c/a\u003e or \u003ca href=\"https://aggressivelyparaphrasing.me/2024/11/19/organizing-recipes-with-ml-for-creative-cooking/\" rel=\"ugc\"\u003eplay around with the actual web app\u003c/a\u003e.\u003c/p\u003e\n","description_plain":"I organized all my recipes using ML!  My old Google Doc crashes during search since there's too much content now.  I tried some existing recipe management apps and they all were a little disappointing, especially for search.  I'm a very flexible cook but I use recipes for inspiration so I really want fuzzy search when looking for recipes.  So I built it!\r\n\r\nHighlights:\r\n* searching for shrimp will suggest prawns, seafood, fish...\r\n* searching for \"tomatoes and eggs\" will suggest \"tomato and egg\" to be more inclusive\r\n* searching for \"ratatouie\" will suggest \"ratatouille\" cause my spelling is mid and I cook a lot of languages that are romanized inconsistently (chow mein, chao main)\r\n* it'll show related recipes -- \"Red Braised Pork\" suggests \"Orange and Milk Braised Pork Carnitas\", \"Sukiyaki Ginger Pork\", \"Brown Sugar Bourbon Apple Pork Chops\"\r\n* supports searching through linked content (youtube subtitles, descriptions, comments section).  Just drop a link and it'll be searchable!\r\n\r\nYou can [read about it on my blog](https://aggressivelyparaphrasing.me/2024/11/19/organizing-recipes-with-ml-for-creative-cooking/) or [play around with the actual web app](https://aggressivelyparaphrasing.me/2024/11/19/organizing-recipes-with-ml-for-creative-cooking/).","comments_url":"https://lobste.rs/s/3a8qrd/organizing_recipes_with_ml_for_creative","submitter_user":"markerz","user_is_author":true,"tags":["ai","show","web"]},{"short_id":"etolms","short_id_url":"https://lobste.rs/s/etolms","created_at":"2024-11-20T09:08:54.000-06:00","title":"Fargate vs EC2","url":"https://www.pulumi.com/blog/fargate-vs-ec2/","score":3,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/etolms/fargate_vs_ec2","submitter_user":"adamgordonbell","user_is_author":true,"tags":["devops"]},{"short_id":"xq8e96","short_id_url":"https://lobste.rs/s/xq8e96","created_at":"2024-11-20T09:07:28.000-06:00","title":"Abusing Talon to use my eye tracker in a project","url":"https://ntietz.com/blog/abusing-talon-eyetracker/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xq8e96/abusing_talon_use_my_eye_tracker_project","submitter_user":"crmsnbleyd","user_is_author":false,"tags":["python"]},{"short_id":"1ygjph","short_id_url":"https://lobste.rs/s/1ygjph","created_at":"2024-11-20T08:15:57.000-06:00","title":"The Rust Foundation's 2nd bad draft trademark policy","url":"https://diziet.dreamwidth.org/19151.html","score":4,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1ygjph/rust_foundation_s_2nd_bad_draft_trademark","submitter_user":"Foxboron","user_is_author":false,"tags":["law","rust"]},{"short_id":"8xps75","short_id_url":"https://lobste.rs/s/8xps75","created_at":"2024-11-20T08:15:33.000-06:00","title":"State of Kotlin Scripting 2024","url":"https://blog.jetbrains.com/kotlin/2024/11/state-of-kotlin-scripting-2024/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8xps75/state_kotlin_scripting_2024","submitter_user":"aarroyoc","user_is_author":false,"tags":["kotlin"]},{"short_id":"pxpwwt","short_id_url":"https://lobste.rs/s/pxpwwt","created_at":"2024-11-20T08:00:45.000-06:00","title":"Why I stopped using OpenBSD","url":"https://dataswamp.org/~solene/2024-11-15-why-i-stopped-using-openbsd.html","score":22,"flags":1,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pxpwwt/why_i_stopped_using_openbsd","submitter_user":"calvin","user_is_author":false,"tags":["openbsd"]},{"short_id":"vvosch","short_id_url":"https://lobste.rs/s/vvosch","created_at":"2024-11-20T06:43:52.000-06:00","title":"FireDucks : Pandas but 100x faster","url":"https://hwisnu.bearblog.dev/fireducks-pandas-but-100x-faster/","score":9,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vvosch/fireducks_pandas_100x_faster","submitter_user":"knl","user_is_author":false,"tags":["python"]},{"short_id":"jenpvy","short_id_url":"https://lobste.rs/s/jenpvy","created_at":"2024-11-20T06:34:06.000-06:00","title":"vim-history: Very very old history of Vim (from v1.14 to v6.4)","url":"https://github.com/vim/vim-history","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jenpvy/vim_history_very_very_old_history_vim_from","submitter_user":"hwayne","user_is_author":false,"tags":["historical","vim"]},{"short_id":"pamogv","short_id_url":"https://lobste.rs/s/pamogv","created_at":"2024-11-20T06:25:18.000-06:00","title":"Announcing GitHub Secure Open Source Fund","url":"https://github.blog/news-insights/company-news/announcing-github-secure-open-source-fund/","score":1,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pamogv/announcing_github_secure_open_source","submitter_user":"popey","user_is_author":false,"tags":["security"]},{"short_id":"onhd7w","short_id_url":"https://lobste.rs/s/onhd7w","created_at":"2024-11-20T06:09:36.000-06:00","title":"WavPack's roundtrip advantage over FLAC","url":"https://dbohdan.com/wavpack","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/onhd7w/wavpack_s_roundtrip_advantage_over_flac","submitter_user":"mesaoptimizer","user_is_author":false,"tags":["performance"]},{"short_id":"3zbdil","short_id_url":"https://lobste.rs/s/3zbdil","created_at":"2024-11-20T05:54:37.000-06:00","title":"Async/Await Is Real And Can Hurt You","url":"https://trouble.mataroa.blog/blog/asyncawait-is-real-and-can-hurt-you/","score":15,"flags":0,"comment_count":24,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3zbdil/async_await_is_real_can_hurt_you","submitter_user":"airdrop","user_is_author":true,"tags":["rust"]},{"short_id":"o2xl17","short_id_url":"https://lobste.rs/s/o2xl17","created_at":"2024-11-20T05:01:35.000-06:00","title":"Ghosts of Departed Proofs (2018)","url":"https://iohk.io/en/research/library/papers/ghosts-of-departed-proofs-functional-pearls/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o2xl17/ghosts_departed_proofs_2018","submitter_user":"fanf","user_is_author":false,"tags":["haskell","pdf"]},{"short_id":"bfbmqs","short_id_url":"https://lobste.rs/s/bfbmqs","created_at":"2024-11-20T03:54:50.000-06:00","title":"Let’s Encrypt: Ten Years","url":"https://letsencrypt.org/2014/11/18/announcing-lets-encrypt/","score":18,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bfbmqs/let_s_encrypt_ten_years","submitter_user":"freddyb","user_is_author":false,"tags":["security"]},{"short_id":"ekhclm","short_id_url":"https://lobste.rs/s/ekhclm","created_at":"2024-11-20T03:18:20.000-06:00","title":"chatgpt-shell goes multi-model","url":"https://lmno.lol/alvaro/chatgpt-shell-goes-multi-model","score":4,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ekhclm/chatgpt_shell_goes_multi_model","submitter_user":"xenodium","user_is_author":true,"tags":["ai","emacs","lisp"]},{"short_id":"8okeos","short_id_url":"https://lobste.rs/s/8okeos","created_at":"2024-11-20T02:28:14.000-06:00","title":"Loading the World! OpenStreetMap Import In Under 4 Hours","url":"https://www.crunchydata.com/blog/loading-the-world-openstreetmap-import-in-under-4-hours","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8okeos/loading_world_openstreetmap_import","submitter_user":"sjamaan","user_is_author":false,"tags":["databases","performance"]},{"short_id":"6e8zc3","short_id_url":"https://lobste.rs/s/6e8zc3","created_at":"2024-11-20T02:02:32.000-06:00","title":"AAA - Analytical Anti-Aliasing","url":"https://blog.frost.kiwi/analytical-anti-aliasing/","score":25,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6e8zc3/aaa_analytical_anti_aliasing","submitter_user":"FrostKiwi","user_is_author":true,"tags":["graphics"]},{"short_id":"stdvxh","short_id_url":"https://lobste.rs/s/stdvxh","created_at":"2024-11-20T01:50:25.000-06:00","title":"Spineless Traversal for Layout Invalidation","url":"https://arxiv.org/pdf/2411.10659","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eLatency is a major concern for web rendering engines like those in Chrome, Safari, and Firefox. These engines reduce latency by using an incremental layout algorithm to redraw the page when the user interacts with it. In such an algorithm, elements that change frame-to-frame are marked dirty; only the dirty elements need be processed to draw the next frame, dramatically reducing latency. However, the standard incremental layout algorithm must search the page for dirty elements, accessing a number of auxiliary elements in the process. These auxiliary elements add cache misses and stalled cycles, and are responsible for a sizable fraction of all layout latency. We introduce a new, faster incremental layout algorithm called Spineless Traversal. Spineless Traversal uses a more computationally demanding priority queue algorithm to avoid the need to access auxiliary nodes and thus reduces cache traffic and stalls. This leads to dramatic speedups on the most latency-critical interactions such as hovering, typing, or animations. Moreover, thanks to numerous low-level optimizations, we are able to make Spineless Traversal competitive across the whole spectrum of incremental layout workloads. As a result, across 2216 benchmarks, Spineless Traversal is faster on 78.2% of the benchmark, with a mean speedup of 3.23x concentrated in the most latency-critical interactions such as hovering, typing, and animations.\u003c/p\u003e\n","description_plain":"Latency is a major concern for web rendering engines like those in Chrome, Safari, and Firefox. These engines reduce latency by using an incremental layout algorithm to redraw the page when the user interacts with it. In such an algorithm, elements that change frame-to-frame are marked dirty; only the dirty elements need be processed to draw the next frame, dramatically reducing latency. However, the standard incremental layout algorithm must search the page for dirty elements, accessing a number of auxiliary elements in the process. These auxiliary elements add cache misses and stalled cycles, and are responsible for a sizable fraction of all layout latency. We introduce a new, faster incremental layout algorithm called Spineless Traversal. Spineless Traversal uses a more computationally demanding priority queue algorithm to avoid the need to access auxiliary nodes and thus reduces cache traffic and stalls. This leads to dramatic speedups on the most latency-critical interactions such as hovering, typing, or animations. Moreover, thanks to numerous low-level optimizations, we are able to make Spineless Traversal competitive across the whole spectrum of incremental layout workloads. As a result, across 2216 benchmarks, Spineless Traversal is faster on 78.2% of the benchmark, with a mean speedup of 3.23x concentrated in the most latency-critical interactions such as hovering, typing, and animations.","comments_url":"https://lobste.rs/s/stdvxh/spineless_traversal_for_layout","submitter_user":"asb","user_is_author":false,"tags":["browsers","pdf","performance"]},{"short_id":"qhdfdg","short_id_url":"https://lobste.rs/s/qhdfdg","created_at":"2024-11-20T01:12:59.000-06:00","title":"webvm: Virtual Machine for the Web","url":"https://github.com/leaningtech/webvm","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qhdfdg/webvm_virtual_machine_for_web","submitter_user":"txxnano","user_is_author":false,"tags":["wasm"]}]