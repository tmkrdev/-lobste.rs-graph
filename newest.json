[{"short_id":"ohrxgf","short_id_url":"https://lobste.rs/s/ohrxgf","created_at":"2024-12-30T23:46:31.000-06:00","title":"LG smart TVs have started displaying ads when idle","url":"https://www.theverge.com/2024/9/26/24254935/lg-smart-tv-oled-screensaver-ads-idle-mode","score":1,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ohrxgf/lg_smart_tvs_have_started_displaying_ads","submitter_user":"j3s","user_is_author":false,"tags":["culture"]},{"short_id":"q5tuic","short_id_url":"https://lobste.rs/s/q5tuic","created_at":"2024-12-30T23:10:25.000-06:00","title":"huffmunch: A practical generic lossless compression library for the NES or other 6502 platforms","url":"https://github.com/bbbradsmith/huffmunch","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/q5tuic/huffmunch_practical_generic_lossless","submitter_user":"JordiGH","user_is_author":false,"tags":["compsci","retrocomputing"]},{"short_id":"telusg","short_id_url":"https://lobste.rs/s/telusg","created_at":"2024-12-30T22:43:40.000-06:00","title":"Solving the Traveling Salesman Problem: From Heuristics to a Potential Polynomial-Time Breakthrough","url":"https://prat8897.github.io/posts/Travelling-Salesman-Problem/travellingsalesman.html","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/telusg/solving_traveling_salesman_problem_from","submitter_user":"signal-11","user_is_author":false,"tags":["compsci","programming"]},{"short_id":"ruoprg","short_id_url":"https://lobste.rs/s/ruoprg","created_at":"2024-12-30T20:48:11.000-06:00","title":"Implementing a client side IPVS-based load balancer","url":"https://blog.davidv.dev/posts/ipvs-lb/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ruoprg/implementing_client_side_ipvs_based_load","submitter_user":"charlottia","user_is_author":false,"tags":["linux","networking"]},{"short_id":"etzi9f","short_id_url":"https://lobste.rs/s/etzi9f","created_at":"2024-12-30T20:41:29.000-06:00","title":"A tiny library for switches and sum types in Lua","url":"https://github.com/alurm/lua-match","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/etzi9f/tiny_library_for_switches_sum_types_lua","submitter_user":"alurm","user_is_author":true,"tags":["lua"]},{"short_id":"vrjdre","short_id_url":"https://lobste.rs/s/vrjdre","created_at":"2024-12-30T20:03:55.000-06:00","title":"So You Want to Write Java in Neovim","url":"https://ptrtojoel.dev/posts/so-you-want-to-write-java-in-neovim/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vrjdre/so_you_want_write_java_neovim","submitter_user":"Aks","user_is_author":false,"tags":["editors","java","vim"]},{"short_id":"f6nbe4","short_id_url":"https://lobste.rs/s/f6nbe4","created_at":"2024-12-30T19:17:37.000-06:00","title":"Demoscene Basics from a Basic Demoscener","url":"https://demobasics.pixienop.net/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/f6nbe4/demoscene_basics_from_basic_demoscener","submitter_user":"indigo","user_is_author":false,"tags":["graphics"]},{"short_id":"wof0rz","short_id_url":"https://lobste.rs/s/wof0rz","created_at":"2024-12-30T18:14:17.000-06:00","title":"LineageOS 22 released","url":"https://lineageos.org/Changelog-29/","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wof0rz/lineageos_22_released","submitter_user":"timschumi","user_is_author":false,"tags":["android"]},{"short_id":"ieig85","short_id_url":"https://lobste.rs/s/ieig85","created_at":"2024-12-30T17:36:16.000-06:00","title":"Passkey technology is elegant, but it’s most definitely not usable security","url":"https://arstechnica.com/security/2024/12/passkey-technology-is-elegant-but-its-most-definitely-not-usable-security/","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ieig85/passkey_technology_is_elegant_it_s_most","submitter_user":"bitfield","user_is_author":false,"tags":["security"]},{"short_id":"jfwinv","short_id_url":"https://lobste.rs/s/jfwinv","created_at":"2024-12-30T16:14:54.000-06:00","title":"What is a dependency?","url":"https://matklad.github.io/2024/12/30/what-is-dependency.html","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jfwinv/what_is_dependency","submitter_user":"carlana","user_is_author":false,"tags":["programming"]},{"short_id":"tayebo","short_id_url":"https://lobste.rs/s/tayebo","created_at":"2024-12-30T14:16:00.000-06:00","title":"How to Quit Mainstream Social Media and Join Mastodon: A Healthier Way to Connect","url":"https://unboundroutes.com/2024/11/29/quit-social-media-join-mastodon/","score":4,"flags":8,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tayebo/how_quit_mainstream_social_media_join","submitter_user":"craftyguy","user_is_author":false,"tags":["web"]},{"short_id":"ipl6q8","short_id_url":"https://lobste.rs/s/ipl6q8","created_at":"2024-12-30T13:22:15.000-06:00","title":"Adding a fully-bootstrapped Mono to GNU Guix","url":"https://guix.gnu.org/en/blog/2024/adding-a-fully-bootstrapped-mono/","score":14,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ipl6q8/adding_fully_bootstrapped_mono_gnu_guix","submitter_user":"awilfox","user_is_author":false,"tags":["compilers","dotnet","linux"]},{"short_id":"7h61dr","short_id_url":"https://lobste.rs/s/7h61dr","created_at":"2024-12-30T11:52:27.000-06:00","title":"The Homa network protocol","url":"https://lwn.net/SubscriberLink/1003059/41b1d2ea281b6779/","score":14,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7h61dr/homa_network_protocol","submitter_user":"calvin","user_is_author":false,"tags":["networking"]},{"short_id":"2tk1en","short_id_url":"https://lobste.rs/s/2tk1en","created_at":"2024-12-30T11:02:47.000-06:00","title":"lmno.lol - Drag and drop blogging minus the yucky bits of the modern web","url":"https://lmno.lol","score":31,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2tk1en/lmno_lol_drag_drop_blogging_minus_yucky","submitter_user":"xenodium","user_is_author":true,"tags":["show","web"]},{"short_id":"33rhfe","short_id_url":"https://lobste.rs/s/33rhfe","created_at":"2024-12-30T10:59:58.000-06:00","title":"Software Design is Knowledge Building","url":"https://olano.dev/blog/software-design-is-knowledge-building/","score":15,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/33rhfe/software_design_is_knowledge_building","submitter_user":"facundoolano","user_is_author":true,"tags":["practices"]},{"short_id":"csfbtr","short_id_url":"https://lobste.rs/s/csfbtr","created_at":"2024-12-30T10:42:50.000-06:00","title":"Jido – Run 10k agents at 25KB each","url":"https://github.com/agentjido/jido","score":3,"flags":1,"comment_count":0,"description":"\u003cp\u003eI’m Mike Hostetler and I built Jido, an Agent SDK in Elixir that lets you run thousands of agents without heavy infrastructure.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRepo: \u003ca href=\"https://github.com/agentjido/jido\" rel=\"ugc\"\u003ehttps://github.com/agentjido/jido\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eGetting Started: \u003ca href=\"https://hexdocs.pm/jido/getting-started.html\" rel=\"ugc\"\u003ehttps://hexdocs.pm/jido/getting-started.html\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhy another framework?\u003c/p\u003e\n\u003cp\u003eAfter using several popular Agent frameworks and platforms, I had two key challenges:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eRunning multiple agents required process-heavy infrastructure like Docker or K8s. Running 50,000 agents in parallel was costly and diminished the benefits of agentic programming.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eToday’s agents require too much human intervention when building workflows. Why couldn’t agents manage their own WDLC (Workflow Design Life Cycle)? This felt like a major missing piece.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAgentic frameworks were written for humans. LLMs working with this code were constantly working around human work-style assumptions. So, I wrote a framework specifically for LLMs to code and operate their own agentic flows.\u003c/p\u003e\n\u003cp\u003eElixir was a natural choice because of it’s functional nature, rock-solid concurrency primitives and “let-it-crash” philosophy with dynamic error compensation. Hot code reloading was a bonus.\u003c/p\u003e\n\u003cp\u003eAgents in Jido use 25Kb of memory at rest and can easily serialize then hibernate for long-lived access. Agents possess the APIs to dynamically start and manage their own sub-agents or any other Elixir process utilizing Elixir’s OTP architecture.\u003c/p\u003e\n\u003cp\u003eJido Actions are functional primitives that Agents can dynamically orchestrate into workflows. Generated code can either run in a separate process in the current VM or in another BEAM VM that’s linked and hardened before introduction into the Agent VM.\u003c/p\u003e\n\u003cp\u003eI’m excited to help enable a world where thousands of agents work seamlessly on behalf of their human operators.\u003c/p\u003e\n","description_plain":"I'm Mike Hostetler and I built Jido, an Agent SDK in Elixir that lets you run thousands of agents without heavy infrastructure.\r\n\r\n- Repo: https://github.com/agentjido/jido \r\n- Getting Started: https://hexdocs.pm/jido/getting-started.html\r\n\r\nWhy another framework?\r\n\r\nAfter using several popular Agent frameworks and platforms, I had two key challenges:\r\n\r\n- Running multiple agents required process-heavy infrastructure like Docker or K8s. Running 50,000 agents in parallel was costly and diminished the benefits of agentic programming.\r\n\r\n- Today's agents require too much human intervention when building workflows. Why couldn't agents manage their own WDLC (Workflow Design Life Cycle)? This felt like a major missing piece.\r\n\r\nAgentic frameworks were written for humans. LLMs working with this code were constantly working around human work-style assumptions. So, I wrote a framework specifically for LLMs to code and operate their own agentic flows.\r\n\r\nElixir was a natural choice because of it's functional nature, rock-solid concurrency primitives and \"let-it-crash\" philosophy with dynamic error compensation. Hot code reloading was a bonus.\r\n\r\nAgents in Jido use 25Kb of memory at rest and can easily serialize then hibernate for long-lived access. Agents possess the APIs to dynamically start and manage their own sub-agents or any other Elixir process utilizing Elixir's OTP architecture.\r\n\r\nJido Actions are functional primitives that Agents can dynamically orchestrate into workflows. Generated code can either run in a separate process in the current VM or in another BEAM VM that's linked and hardened before introduction into the Agent VM.\r\n\r\nI'm excited to help enable a world where thousands of agents work seamlessly on behalf of their human operators.","comments_url":"https://lobste.rs/s/csfbtr/jido_run_10k_agents_at_25kb_each","submitter_user":"mikehostetler","user_is_author":true,"tags":["ai","elixir"]},{"short_id":"v95gm5","short_id_url":"https://lobste.rs/s/v95gm5","created_at":"2024-12-30T10:28:40.000-06:00","title":"My thoughts on the new NVIDIA Jetson Orin Nano","url":"https://www.jeremymorgan.com/blog/tech/nvidia-jetson-orin-nano/","score":8,"flags":1,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/v95gm5/my_thoughts_on_new_nvidia_jetson_orin_nano","submitter_user":"JeremyMorgan","user_is_author":true,"tags":["ai"]},{"short_id":"3ytoab","short_id_url":"https://lobste.rs/s/3ytoab","created_at":"2024-12-30T08:56:26.000-06:00","title":"Collection of insane and fun facts about SQLite","url":"https://avi.im/blag/2024/sqlite-facts","score":78,"flags":2,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3ytoab/collection_insane_fun_facts_about_sqlite","submitter_user":"av","user_is_author":true,"tags":["databases","historical"]},{"short_id":"pyfrdt","short_id_url":"https://lobste.rs/s/pyfrdt","created_at":"2024-12-30T08:50:28.000-06:00","title":"The Curious Case of Quentell","url":"https://blog.startifact.com/posts/the-curious-case-of-quentell/","score":12,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pyfrdt/curious_case_quentell","submitter_user":"fancybone","user_is_author":false,"tags":["ai"]},{"short_id":"y62lgp","short_id_url":"https://lobste.rs/s/y62lgp","created_at":"2024-12-30T07:57:23.000-06:00","title":"Flame graphs can hide small overheads with big overall impact","url":"https://ankush.dev/p/flamegraph-missing-forest-for-trees","score":28,"flags":0,"comment_count":7,"description":"\u003cp\u003eI wanted to share this not-so-popular flag \u003ccode\u003e--reverse\u003c/code\u003e on \u003ccode\u003eflamegraph.pl\u003c/code\u003e and how it helped uncover a performance problem that was otherwise not so visible in default flame graphs.\u003c/p\u003e\n\u003cp\u003eThe post is just listing 1 major example but I did find quite a few other overheads that were on its own \u0026lt;10us but in biger picture contributed ~1%.\u003c/p\u003e\n","description_plain":"I wanted to share this not-so-popular flag `--reverse` on `flamegraph.pl` and how it helped uncover a performance problem that was otherwise not so visible in default flame graphs.\r\n\r\nThe post is just listing 1 major example but I did find quite a few other overheads that were on its own \u003c10us but in biger picture contributed ~1%.","comments_url":"https://lobste.rs/s/y62lgp/flame_graphs_can_hide_small_overheads","submitter_user":"ankush","user_is_author":true,"tags":["performance"]},{"short_id":"3ycwuq","short_id_url":"https://lobste.rs/s/3ycwuq","created_at":"2024-12-30T07:39:06.000-06:00","title":"GitHub GraphQL API and TypeScript","url":"https://medv.io/blog/github-graphql-api-and-typescript","score":4,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3ycwuq/github_graphql_api_typescript","submitter_user":"antonmedv","user_is_author":true,"tags":["javascript"]},{"short_id":"5srkwz","short_id_url":"https://lobste.rs/s/5srkwz","created_at":"2024-12-30T06:16:43.000-06:00","title":"Fabrice Bellard's ts_sms: Short Message Compression using LLM","url":"https://bellard.org/ts_sms/","score":28,"flags":0,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5srkwz/fabrice_bellard_s_ts_sms_short_message","submitter_user":"BiteCode","user_is_author":false,"tags":["ai"]},{"short_id":"enfhri","short_id_url":"https://lobste.rs/s/enfhri","created_at":"2024-12-30T05:25:41.000-06:00","title":"Exported for tests only: Precise control over API visibility with custom warnings","url":"https://tech.scrive.com/exported-for-tests-only-precise-control-over-api-visibility-with-custom-warnings/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/enfhri/exported_for_tests_only_precise_control","submitter_user":"Hecate","user_is_author":false,"tags":["haskell"]},{"short_id":"h4udgl","short_id_url":"https://lobste.rs/s/h4udgl","created_at":"2024-12-30T05:19:35.000-06:00","title":"Installing NetBSD on the Nintendo Wii","url":"https://youtu.be/KO9bNwE3Vps","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h4udgl/installing_netbsd_on_nintendo_wii","submitter_user":"jaypatelani","user_is_author":false,"tags":["netbsd","video"]},{"short_id":"68xmon","short_id_url":"https://lobste.rs/s/68xmon","created_at":"2024-12-30T05:12:50.000-06:00","title":"What are you doing this week?","url":"","score":7,"flags":0,"comment_count":16,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/68xmon/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]}]