[{"short_id":"0vzv0m","short_id_url":"https://lobste.rs/s/0vzv0m","created_at":"2024-04-02T04:45:04.000-05:00","title":"termlisp: A lisp dialect based on pattern matching and term rewriting","url":"https://github.com/abuseofnotation/termlisp","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0vzv0m/termlisp_lisp_dialect_based_on_pattern","submitter_user":"jencelpanic","user_is_author":true,"tags":["haskell","lisp","show"]},{"short_id":"iwut04","short_id_url":"https://lobste.rs/s/iwut04","created_at":"2024-04-02T04:34:09.000-05:00","title":"std::launder: the most obscure new feature of C++17 (2016)","url":"https://miyuki.github.io/2016/10/21/std-launder.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iwut04/std_launder_most_obscure_new_feature_c_17","submitter_user":"knl","user_is_author":false,"tags":["c++"]},{"short_id":"hsuvav","short_id_url":"https://lobste.rs/s/hsuvav","created_at":"2024-04-02T04:02:53.000-05:00","title":"The xz attack shell script","url":"https://research.swtch.com/xz-script","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hsuvav/xz_attack_shell_script","submitter_user":"c--","user_is_author":false,"tags":["security"]},{"short_id":"jb1o6q","short_id_url":"https://lobste.rs/s/jb1o6q","created_at":"2024-04-02T01:28:48.000-05:00","title":"Cosmic Drift","url":"https://rgbcu.be/blog/cosmic-drift/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jb1o6q/cosmic_drift","submitter_user":"RGBCube","user_is_author":true,"tags":["hardware"]},{"short_id":"hzs0ay","short_id_url":"https://lobste.rs/s/hzs0ay","created_at":"2024-04-01T23:20:24.000-05:00","title":"Bun 1.1","url":"https://bun.sh/blog/bun-v1.1","score":13,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hzs0ay/bun_1_1","submitter_user":"sanxiyn","user_is_author":false,"tags":["nodejs","release"]},{"short_id":"jiubct","short_id_url":"https://lobste.rs/s/jiubct","created_at":"2024-04-01T23:01:58.000-05:00","title":"CentOS Stream ISA Optimized Packages Show Great Results On Intel Xeon Emerald Rapids","url":"https://www.phoronix.com/review/centos-isa-optimized","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jiubct/centos_stream_isa_optimized_packages","submitter_user":"xoranth","user_is_author":false,"tags":["linux","performance"]},{"short_id":"nbztsg","short_id_url":"https://lobste.rs/s/nbztsg","created_at":"2024-04-01T22:56:40.000-05:00","title":"Timeline of the xz open source attack","url":"https://research.swtch.com/xz-timeline","score":37,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nbztsg/timeline_xz_open_source_attack","submitter_user":"carlana","user_is_author":false,"tags":["security"]},{"short_id":"6cmq3i","short_id_url":"https://lobste.rs/s/6cmq3i","created_at":"2024-04-01T21:10:40.000-05:00","title":"April Cools 2024: Physics Edition","url":"https://tinkering.xyz/april-cools-2024/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6cmq3i/april_cools_2024_physics_edition","submitter_user":"zmitchell","user_is_author":true,"tags":["science"]},{"short_id":"5i8hn7","short_id_url":"https://lobste.rs/s/5i8hn7","created_at":"2024-04-01T21:07:33.000-05:00","title":"libmui: Classic MacOS \u0026 GS/OS widget library for linux (and other?)","url":"https://github.com/buserror/libmui","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5i8hn7/libmui_classic_macos_gs_os_widget_library","submitter_user":"calvin","user_is_author":false,"tags":["programming"]},{"short_id":"3pbjks","short_id_url":"https://lobste.rs/s/3pbjks","created_at":"2024-04-01T18:19:34.000-05:00","title":"Ed Catmurâ€™s Triliteral Esolang","url":"https://quuxplusone.github.io/blog/2024/03/31/ed-catmurs-triliteral/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3pbjks/ed_catmur_s_triliteral_esolang","submitter_user":"kaycebasques","user_is_author":false,"tags":["plt"]},{"short_id":"ezsobc","short_id_url":"https://lobste.rs/s/ezsobc","created_at":"2024-04-01T14:05:54.000-05:00","title":"Zen Mind, Google Intern's Mind","url":"https://jorge.olano.dev/blog/zen-mind-google-interns-mind","score":9,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ezsobc/zen_mind_google_intern_s_mind","submitter_user":"facundoolano","user_is_author":true,"tags":["go"]},{"short_id":"a6f2zl","short_id_url":"https://lobste.rs/s/a6f2zl","created_at":"2024-04-01T14:03:11.000-05:00","title":"A Sniff Test for Some Query Optimizers","url":"https://buttondown.email/jaffray/archive/a-sniff-test-for-some-query-optimizers/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/a6f2zl/sniff_test_for_some_query_optimizers","submitter_user":"eatonphil","user_is_author":false,"tags":["databases"]},{"short_id":"sqyyyp","short_id_url":"https://lobste.rs/s/sqyyyp","created_at":"2024-04-01T13:41:12.000-05:00","title":"Book Review: \"Tidy First?\" by Kent Beck","url":"https://www.pathsensitive.com/2024/04/book-review-tidy-first.html","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sqyyyp/book_review_tidy_first_by_kent_beck","submitter_user":"jkoppel","user_is_author":true,"tags":["programming"]},{"short_id":"wzlcgl","short_id_url":"https://lobste.rs/s/wzlcgl","created_at":"2024-04-01T12:53:38.000-05:00","title":"LiveView is best with Svelte","url":"https://blog.sequin.io/liveview-is-best-with-svelte/","score":12,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wzlcgl/liveview_is_best_with_svelte","submitter_user":"acco","user_is_author":true,"tags":["elixir","javascript"]},{"short_id":"mge4t2","short_id_url":"https://lobste.rs/s/mge4t2","created_at":"2024-04-01T12:49:58.000-05:00","title":"43 Years of Actors: A Taxonomy of Actor Models and Their Key Properties (2016)","url":"http://soft.vub.ac.be/Publications/2016/vub-soft-tr-16-11.pdf","score":10,"flags":0,"comment_count":1,"description":"\u003cp\u003eThe Actor Model is a message passing concurrency model that was originally proposed by Hewitt et al. in 1973. It is now 43 years later and since then researchers have explored a plethora of variations on this model. This paper presents a history of the Actor Model throughout those years. The goal of this paper is not to provide an exhaustive overview of every actor system in existence but rather to give an overview of some of the exemplar languages and libraries that influenced the design and rationale of other actor systems throughout those years. This paper therefore shows that most actor systems can be roughly classified into four families, namely: Classic Actors, Active Objects, Processes and Communicating Event-Loops. This paper also defines the Isolated Turn Principle as a unifying principle across those four families. Additionally this paper lists some of the key properties along which actor systems can be evaluated and formulates some general insights about the design and rationale of the different actor families across those dimensions.\u003c/p\u003e\n","description_plain":"The Actor Model is a message passing concurrency model that was originally proposed by Hewitt et al. in 1973. It is now 43 years later and since then researchers have explored a plethora of variations on this model. This paper presents a history of the Actor Model throughout those years. The goal of this paper is not to provide an exhaustive overview of every actor system in existence but rather to give an overview of some of the exemplar languages and libraries that influenced the design and rationale of other actor systems throughout those years. This paper therefore shows that most actor systems can be roughly classified into four families, namely: Classic Actors, Active Objects, Processes and Communicating Event-Loops. This paper also defines the Isolated Turn Principle as a unifying principle across those four families. Additionally this paper lists some of the key properties along which actor systems can be evaluated and formulates some general insights about the design and rationale of the different actor families across those dimensions.","comments_url":"https://lobste.rs/s/mge4t2/43_years_actors_taxonomy_actor_models","submitter_user":"Corbin","user_is_author":false,"tags":["pdf","plt"]},{"short_id":"ix3zb2","short_id_url":"https://lobste.rs/s/ix3zb2","created_at":"2024-04-01T11:43:24.000-05:00","title":"A simple collision resolution algorithm for 2D action games","url":"https://c.har.li/e/2024/03/28/implementing-robust-2D-collision-resolution.html","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ix3zb2/simple_collision_resolution_algorithm","submitter_user":"nc","user_is_author":true,"tags":["games"]},{"short_id":"wdrrxk","short_id_url":"https://lobste.rs/s/wdrrxk","created_at":"2024-04-01T10:35:08.000-05:00","title":"Here is why vim uses hjkl keys as arrow keys","url":"https://catonmat.net/why-vim-uses-hjkl-as-arrow-keys","score":5,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wdrrxk/here_is_why_vim_uses_hjkl_keys_as_arrow_keys","submitter_user":"av","user_is_author":false,"tags":["vim"]},{"short_id":"adjjur","short_id_url":"https://lobste.rs/s/adjjur","created_at":"2024-04-01T10:04:35.000-05:00","title":"Survey of Distributed File System Design Choices","url":"https://dl.acm.org/doi/10.1145/3465405","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/adjjur/survey_distributed_file_system_design","submitter_user":"eatonphil","user_is_author":false,"tags":["distributed","osdev"]},{"short_id":"np8vfh","short_id_url":"https://lobste.rs/s/np8vfh","created_at":"2024-04-01T09:31:28.000-05:00","title":"so i guess i hacked samsung?","url":"https://maia.crimew.gay/posts/i-hacked-samsung/","score":40,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/np8vfh/so_i_guess_i_hacked_samsung","submitter_user":"inverse","user_is_author":false,"tags":["security"]},{"short_id":"maymyv","short_id_url":"https://lobste.rs/s/maymyv","created_at":"2024-04-01T08:50:52.000-05:00","title":"10 \u003e 64, in QR codes","url":"https://huonw.github.io/blog/2024/03/qr-base10-base64/","score":18,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/maymyv/10_64_qr_codes","submitter_user":"yvan","user_is_author":false,"tags":["programming"]},{"short_id":"vlkzik","short_id_url":"https://lobste.rs/s/vlkzik","created_at":"2024-04-01T08:19:36.000-05:00","title":"A lazy and flippant classification of programming languages","url":"https://blog.brycekerley.net/2024/04/01/p-langs.html","score":36,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vlkzik/lazy_flippant_classification","submitter_user":"bryce","user_is_author":true,"tags":["satire"]},{"short_id":"4pzifd","short_id_url":"https://lobste.rs/s/4pzifd","created_at":"2024-04-01T07:34:29.000-05:00","title":"The Wi-Fi only works when it's raining","url":"https://predr.ag/blog/wifi-only-works-when-its-raining/","score":84,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4pzifd/wi_fi_only_works_when_it_s_raining","submitter_user":"eBPF","user_is_author":false,"tags":["debugging","hardware"]},{"short_id":"wx1n28","short_id_url":"https://lobste.rs/s/wx1n28","created_at":"2024-04-01T07:04:51.000-05:00","title":"Which Build Tool For A Bootstrappable Project?","url":"http://jackkelly.name/blog/archives/2024/04/01/which_build_tool_for_a_bootstrappable_project/index.html","score":15,"flags":0,"comment_count":25,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wx1n28/which_build_tool_for_bootstrappable","submitter_user":"jackdk","user_is_author":true,"tags":["c","practices"]},{"short_id":"dhkqmg","short_id_url":"https://lobste.rs/s/dhkqmg","created_at":"2024-04-01T06:21:07.000-05:00","title":"Intelli Python To Orchestrate AI Models Collaboration As Graph","url":"https://github.com/intelligentnode/Intelli?tab=readme-ov-file#create-ai-flows","score":-2,"flags":3,"comment_count":1,"description":"\u003cp\u003eIntelli handles the integration of multiple models collaboration using graph theory, autonomously managing the input and output between different models like language and image and visualising your tasks.\u003c/p\u003e\n\u003cp\u003eCreate an agent whether for an offline open model like Gemma or an API-based model like claude3, then assign the agent to a task and intelli flow will handle the relations between the models.\u003c/p\u003e\n\u003cp\u003eTo start:\npip install intelli\u003c/p\u003e\n\u003cp\u003eExample using Gemma with stability image model to create data science assistant:\n\u003ca href=\"https://www.kaggle.com/code/jaguar00/data-science-teaching-agent-graph-approach\" rel=\"ugc\"\u003ehttps://www.kaggle.com/code/jaguar00/data-science-teaching-agent-graph-approach\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Intelli handles the integration of multiple models collaboration using graph theory, autonomously managing the input and output between different models like language and image and visualising your tasks.\r\n\r\nCreate an agent whether for an offline open model like Gemma or an API-based model like claude3, then assign the agent to a task and intelli flow will handle the relations between the models.\r\n\r\nTo start:\r\npip install intelli\r\n\r\n\r\nExample using Gemma with stability image model to create data science assistant:\r\nhttps://www.kaggle.com/code/jaguar00/data-science-teaching-agent-graph-approach","comments_url":"https://lobste.rs/s/dhkqmg/intelli_python_orchestrate_ai_models","submitter_user":"jaguar","user_is_author":true,"tags":["ai","programming"]},{"short_id":"2drpsh","short_id_url":"https://lobste.rs/s/2drpsh","created_at":"2024-04-01T05:58:08.000-05:00","title":"Why Do Python Lists Multiply Oddly? Exploring the CPython Source Code","url":"https://codeconfessions.substack.com/p/why-do-python-lists-multiply-oddly","score":7,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2drpsh/why_do_python_lists_multiply_oddly","submitter_user":"abhi9u","user_is_author":true,"tags":["c","python"]}]