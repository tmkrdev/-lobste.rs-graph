[{"short_id":"mdavnq","short_id_url":"https://lobste.rs/s/mdavnq","created_at":"2023-01-12T10:12:11.000-06:00","title":"My org-roam workflows for taking notes and writing articles — Dominik Honnef","url":"https://honnef.co/articles/my-org-roam-workflows-for-taking-notes-and-writing-articles/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mdavnq/my_org_roam_workflows_for_taking_notes","submitter_user":{"username":"chrispickard","created_at":"2019-05-09T09:43:10.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":588,"avatar_url":"/avatars/chrispickard-100.png","invited_by_user":"cadey"},"tags":["emacs"]},{"short_id":"9k6gof","short_id_url":"https://lobste.rs/s/9k6gof","created_at":"2023-01-12T10:06:00.000-06:00","title":"Predicting Resource Usage From Increased Traffic","url":"https://two-wrongs.com/predicting-resource-usage-from-increased-traffic","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9k6gof/predicting_resource_usage_from","submitter_user":{"username":"lcapaldo","created_at":"2014-02-25T10:56:12.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":478,"avatar_url":"/avatars/lcapaldo-100.png","invited_by_user":"ckolderup"},"tags":["performance"]},{"short_id":"ouogwa","short_id_url":"https://lobste.rs/s/ouogwa","created_at":"2023-01-12T09:48:26.000-06:00","title":"Why Polars uses less memory than Pandas","url":"https://pythonspeed.com/articles/polars-memory-pandas/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ouogwa/why_polars_uses_less_memory_than_pandas","submitter_user":{"username":"itamarst","created_at":"2016-04-28T10:05:47.000-05:00","is_admin":false,"about":"Writing about Python performance and faster development at https://pythonspeed.com, as well as offering consulting services. Writing about work/life balance and other software engineering skills at https://codewithoutrules.com.\r\n","is_moderator":false,"karma":5086,"avatar_url":"/avatars/itamarst-100.png","invited_by_user":"0x2ba22e11"},"tags":["performance","python"]},{"short_id":"k1cu7b","short_id_url":"https://lobste.rs/s/k1cu7b","created_at":"2023-01-12T09:36:19.000-06:00","title":"OpenBSD Errata: January 13, 2022 (tcp)","url":"https://marc.info/?l=openbsd-tech\u0026m=167353049316451\u0026w=2","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/k1cu7b/openbsd_errata_january_13_2022_tcp","submitter_user":{"username":"kuijsten","created_at":"2018-09-06T05:56:47.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":668,"avatar_url":"/avatars/kuijsten-100.png","invited_by_user":"taal","github_username":"timkuijsten"},"tags":["openbsd","security"]},{"short_id":"g0dq6j","short_id_url":"https://lobste.rs/s/g0dq6j","created_at":"2023-01-12T08:59:59.000-06:00","title":"C--","url":"https://www.cs.tufts.edu/~nr/c--/","score":3,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g0dq6j/c","submitter_user":{"username":"steinuil","created_at":"2018-08-14T19:50:45.000-05:00","is_admin":false,"about":"aka steenuil on #lobsters","is_moderator":false,"karma":1462,"avatar_url":"/avatars/steinuil-100.png","invited_by_user":"alynpost"},"tags":["assembly","compilers"]},{"short_id":"u7cyfj","short_id_url":"https://lobste.rs/s/u7cyfj","created_at":"2023-01-12T08:48:24.000-06:00","title":"mongovi v2.0.0 - command line interface for MongoDB","url":"https://github.com/timkuijsten/mongovi/releases/tag/v2.0.0","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/u7cyfj/mongovi_v2_0_0_command_line_interface_for","submitter_user":{"username":"kuijsten","created_at":"2018-09-06T05:56:47.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":668,"avatar_url":"/avatars/kuijsten-100.png","invited_by_user":"taal","github_username":"timkuijsten"},"tags":["databases","show"]},{"short_id":"kinyxv","short_id_url":"https://lobste.rs/s/kinyxv","created_at":"2023-01-12T08:46:57.000-06:00","title":"The Go runtime isn't aware of CFS quotas","url":"https://vladimir.varank.in/notes/2023/01/go-runtime-vs-cfs-quota/","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kinyxv/go_runtime_isn_t_aware_cfs_quotas","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":7325,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["go","performance"]},{"short_id":"z9qe68","short_id_url":"https://lobste.rs/s/z9qe68","created_at":"2023-01-12T08:42:15.000-06:00","title":"atomfeed.py - A single file atom feed library with no dependencies","url":"https://github.com/no-gravity/atomfeed","score":0,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/z9qe68/atomfeed_py_single_file_atom_feed_library","submitter_user":{"username":"no_gravity","created_at":"2015-02-02T12:38:26.000-06:00","is_admin":false,"about":"I build online tools. Serial entrepreneur. Like to meet like-minded people.","is_moderator":false,"karma":801,"avatar_url":"/avatars/no_gravity-100.png","invited_by_user":"SomeKittens"},"tags":["python","web"]},{"short_id":"zdorpb","short_id_url":"https://lobste.rs/s/zdorpb","created_at":"2023-01-12T08:21:20.000-06:00","title":"Turn-based strategy card game Duelyst open-sourced","url":"https://github.com/open-duelyst/duelyst","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zdorpb/turn_based_strategy_card_game_duelyst","submitter_user":{"username":"nil","created_at":"2015-07-21T00:14:19.000-05:00","is_admin":false,"about":"Just graduated from college. I enjoy philosophizing on various design fields—especially programming languages, user interfaces, and (rare around here) video games—and have an intense interest in mathematics, science, cryptology, privacy, security, and all else arcane and cabalistic.","is_moderator":false,"karma":2165,"avatar_url":"/avatars/nil-100.png","invited_by_user":"zgrep","github_username":"ron-wolf","twitter_username":"flownor"},"tags":["games"]},{"short_id":"88hqrc","short_id_url":"https://lobste.rs/s/88hqrc","created_at":"2023-01-12T08:09:39.000-06:00","title":"Praxis-ide: An online IDE for visual programming in Prolog","url":"https://github.com/toblotron/praxis-ide","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/88hqrc/praxis_ide_online_ide_for_visual","submitter_user":{"username":"janus","created_at":"2017-09-04T12:41:26.000-05:00","is_admin":false,"about":"My name is Janus Troelsen, I like to work on open source stuff, especially in Haskell and development tools.","is_moderator":false,"karma":513,"avatar_url":"/avatars/janus-100.png","invited_by_user":"singpolyma","github_username":"ysangkok","twitter_username":"ysangkok"},"tags":["visualization"]},{"short_id":"aupccm","short_id_url":"https://lobste.rs/s/aupccm","created_at":"2023-01-12T07:33:22.000-06:00","title":"Sometimes it actually is a kernel bug: bind() in Linux 6.0.16","url":"https://utcc.utoronto.ca/~cks/space/blog/linux/KernelBindBugIn6016","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aupccm/sometimes_it_actually_is_kernel_bug_bind","submitter_user":{"username":"technetium","created_at":"2020-02-06T19:52:39.000-06:00","is_admin":false,"about":"A sentient lump of a certain high-density material.\r\n\r\nI'm working on a traditional roguelike: [GitHub](https://github.com/kiedtl/roguelike)","is_moderator":false,"karma":4957,"avatar_url":"/avatars/technetium-100.png","invited_by_user":"ngoldbaum","github_username":"kiedtl"},"tags":["linux"]},{"short_id":"mpb2ht","short_id_url":"https://lobste.rs/s/mpb2ht","created_at":"2023-01-12T06:52:58.000-06:00","title":"NetBSD ASCII flag for the bootloader","url":"https://www.cambus.net/netbsd-ascii-flag-for-the-bootloader/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mpb2ht/netbsd_ascii_flag_for_bootloader","submitter_user":{"username":"fcambus","created_at":"2012-09-10T08:43:10.000-05:00","is_admin":false,"about":"System and Network engineer.\r\n\r\nInterests: ANSI Art, DNS, NetBSD, OpenBSD, Security, and Text Mode.\r\n\r\nSite: https://www.cambus.net","is_moderator":false,"karma":3852,"avatar_url":"/avatars/fcambus-100.png","invited_by_user":"gmcabrita","github_username":"fcambus","twitter_username":"fcambus"},"tags":["art","netbsd"]},{"short_id":"7rl8th","short_id_url":"https://lobste.rs/s/7rl8th","created_at":"2023-01-12T04:37:14.000-06:00","title":"Basti – connect to AWS DBs with no idle cost. No SSH keys. IAM-driven","url":"https://github.com/BohdanPetryshyn/basti","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7rl8th/basti_connect_aws_dbs_with_no_idle_cost_no","submitter_user":{"username":"RomanHotsiy","created_at":"2017-06-14T06:50:39.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":12,"avatar_url":"/avatars/RomanHotsiy-100.png","invited_by_user":"IvanGoncharov","keybase_signatures":[{"kb_username":"rhotsiy","sig_hash":"f7dcc99467e58a30a91651fd91fd3491eabfb7c69a5101b0a6cf2481ad6b9daa0f"}]},"tags":["networking"]},{"short_id":"7l6q8y","short_id_url":"https://lobste.rs/s/7l6q8y","created_at":"2023-01-12T01:50:01.000-06:00","title":"A practical guide to implementing SLO","url":"https://last9.io/blog/a-practical-guide-to-implementing-slos/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7l6q8y/practical_guide_implementing_slo","submitter_user":{"username":"prathamesh","created_at":"2017-08-26T12:12:33.000-05:00","is_admin":false,"about":"Curious","is_moderator":false,"karma":114,"avatar_url":"/avatars/prathamesh-100.png","invited_by_user":"schneems"},"tags":["devops"]},{"short_id":"de28g8","short_id_url":"https://lobste.rs/s/de28g8","created_at":"2023-01-12T01:17:10.000-06:00","title":"Pictures of a Working Garbage Collector","url":"https://www.oilshell.org/blog/2023/01/garbage-collector.html","score":6,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/de28g8/pictures_working_garbage_collector","submitter_user":{"username":"andyc","created_at":"2016-11-29T12:37:37.000-06:00","is_admin":false,"about":"Working on http://www.oilshell.org/\r\n","is_moderator":false,"karma":8126,"avatar_url":"/avatars/andyc-100.png","invited_by_user":"flyingfisch"},"tags":["programming","unix"]},{"short_id":"qtsbtf","short_id_url":"https://lobste.rs/s/qtsbtf","created_at":"2023-01-12T00:41:13.000-06:00","title":"Conc: Better structured concurrency for Go","url":"https://github.com/sourcegraph/conc","score":14,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qtsbtf/conc_better_structured_concurrency_for","submitter_user":{"username":"usrme","created_at":"2021-10-05T04:34:58.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":301,"avatar_url":"/avatars/usrme-100.png","invited_by_user":"gerikson"},"tags":["go"]},{"short_id":"igtj11","short_id_url":"https://lobste.rs/s/igtj11","created_at":"2023-01-11T23:56:13.000-06:00","title":"Attack Techniques: Phishing via Local Files","url":"https://textslashplain.com/2023/01/11/attack-techniques-phishing-via-local-files/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/igtj11/attack_techniques_phishing_via_local","submitter_user":{"username":"freddyb","created_at":"2017-02-02T09:12:16.000-06:00","is_admin":false,"about":"I like browser security and web security. Both at work (for Mozilla from Berlin, Germany) and for fun.","is_moderator":false,"karma":9642,"avatar_url":"/avatars/freddyb-100.png","invited_by_user":"stas","keybase_signatures":[{"kb_username":"freddyb","sig_hash":"550e2f5b27d4b5d558c02dfb2b23a628e90635183c93f993eeea4e16b20c51150f"}]},"tags":["security"]},{"short_id":"3yzebi","short_id_url":"https://lobste.rs/s/3yzebi","created_at":"2023-01-11T23:55:02.000-06:00","title":"ImageMagick Security Policy Evaluator","url":"https://blog.doyensec.com//2023/01/10/imagemagick-security-policy-evaluator.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3yzebi/imagemagick_security_policy_evaluator","submitter_user":{"username":"freddyb","created_at":"2017-02-02T09:12:16.000-06:00","is_admin":false,"about":"I like browser security and web security. Both at work (for Mozilla from Berlin, Germany) and for fun.","is_moderator":false,"karma":9642,"avatar_url":"/avatars/freddyb-100.png","invited_by_user":"stas","keybase_signatures":[{"kb_username":"freddyb","sig_hash":"550e2f5b27d4b5d558c02dfb2b23a628e90635183c93f993eeea4e16b20c51150f"}]},"tags":["security"]},{"short_id":"nsymer","short_id_url":"https://lobste.rs/s/nsymer","created_at":"2023-01-11T22:04:21.000-06:00","title":"The yaml document from hell","url":"https://ruudvanasseldonk.com/2023/01/11/the-yaml-document-from-hell","score":23,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nsymer/yaml_document_from_hell","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":7325,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["programming","rant"]},{"short_id":"zveogk","short_id_url":"https://lobste.rs/s/zveogk","created_at":"2023-01-11T20:05:21.000-06:00","title":"The Unison Cloud Platform","url":"https://www.unison.cloud/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zveogk/unison_cloud_platform","submitter_user":{"username":"adamshaylor","created_at":"2020-10-26T20:04:57.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1913,"avatar_url":"/avatars/adamshaylor-100.png","invited_by_user":"peterc","github_username":"adamshaylor","keybase_signatures":[{"kb_username":"adamshaylor","sig_hash":"0ebd1a3d88d97f20922147a75889dfcae02b632d94156b9315a6d93384ae2e4f0f"}]},"tags":["distributed"]},{"short_id":"n16aps","short_id_url":"https://lobste.rs/s/n16aps","created_at":"2023-01-11T18:51:58.000-06:00","title":"What if writing tests was a joyful experience?","url":"https://blog.janestreet.com/the-joy-of-expect-tests/","score":20,"flags":0,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n16aps/what_if_writing_tests_was_joyful","submitter_user":{"username":"jparise","created_at":"2020-10-16T10:33:21.000-05:00","is_admin":false,"about":"Trying to leave things better than I find them.","is_moderator":false,"karma":384,"avatar_url":"/avatars/jparise-100.png","invited_by_user":"chrislloyd","github_username":"jparise"},"tags":["testing"]},{"short_id":"wi1r4a","short_id_url":"https://lobste.rs/s/wi1r4a","created_at":"2023-01-11T17:37:25.000-06:00","title":"How do you securely manage secrets in scripts and development environments?","url":"","score":5,"flags":0,"comment_count":21,"description":"\u003cp\u003eBefore laying out my question, let me put it into context.  It seems that lately attackers are more successful by targeting administrators or developers than attacking the actual deployments and servers.  Meanwhile some attacks social engineer employees into credential theft or reset, other attacks go after operational credentials that are used in semi-automated operations or development scripts.\u003c/p\u003e\n\u003cp\u003eTo be clear, I don’t want to focus on the issue of secure online credential management (I hope we all use some form of password manager), or the security of online authentication protocols (even OAuth seems to be lacking), or the security of MFAs, not even the security of cloud API keys that are actively used by unattended running services (if the attacker has compromised the actual server he most likely already has access to all the sensitive data he wants).\u003c/p\u003e\n\u003cp\u003eWhat I want to focus on is those credentials that are used mainly for semi-automated operational or development scripts.  Like for example AWS secret keys used to deploy or to gain access to the underlying buckets or backups;  or passwords used to access the SQL database for maintenance;  or other such secrets that are used outside the browser or specialized applications like SSH.\u003c/p\u003e\n\u003cp\u003eAlso, let’s assume we are speaking in the context of a small company with at most 10 employees.  Large companies probably have 10 people on the security team tasked only with this topic, thus perhaps this problem is solved in more complex ways.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eSo, how do the administrators and developers in this community manage such secrets when writing semi-automatic scripts?\u003c/p\u003e\n\u003cp\u003eI’m interested especially on the following aspects:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ewhere do you store the secrets?  in plain-text files, protected with GPG or Age, or even Google Drive?\u003c/li\u003e\n\u003cli\u003ehow do you share the secrets between employees?  just throw the sensitive material in Slack or email?  (can one actually safely remove something from Slack or GMail?)\u003c/li\u003e\n\u003cli\u003ehow do you dispose of the secrets once they aren’t needed (or have been exposed)?  (because if they are in Git, good-luck with that…)\u003c/li\u003e\n\u003cli\u003ehow do you keep track of what credentials are still required and in use?  \u003ccode\u003egrep\u003c/code\u003e-ing the scripts code for random looking tokens?\u003c/li\u003e\n\u003cli\u003ehow do you know who has access to what?\u003c/li\u003e\n\u003cli\u003ehow often, and how do you actually rotate such secrets?  (I admit I don’t want to answer this question…)\u003c/li\u003e\n\u003cli\u003ehow do you actually provide it to the scripts?  via environment variables?  via command line arguments?  via world-readable files in \u003ccode\u003e/tmp\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eis anyone actually using any of the PKCS#11-related tools out there?\u003c/li\u003e\n\u003cli\u003ewhat if you need to pass such a secret to a tool that runs on a remote system which you access via SSH?  do you just \u003ccode\u003escp\u003c/code\u003e it to \u003ccode\u003e/tmp\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003edo you use any existing tool for this purpose?  or is everything built in house?\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eSorry for the lengthy question, but I do wonder about this for some time…\u003c/p\u003e\n","description_plain":"Before laying out my question, let me put it into context.  It seems that lately attackers are more successful by targeting administrators or developers than attacking the actual deployments and servers.  Meanwhile some attacks social engineer employees into credential theft or reset, other attacks go after operational credentials that are used in semi-automated operations or development scripts.\r\n\r\nTo be clear, I don't want to focus on the issue of secure online credential management (I hope we all use some form of password manager), or the security of online authentication protocols (even OAuth seems to be lacking), or the security of MFAs, not even the security of cloud API keys that are actively used by unattended running services (if the attacker has compromised the actual server he most likely already has access to all the sensitive data he wants).\r\n\r\nWhat I want to focus on is those credentials that are used mainly for semi-automated operational or development scripts.  Like for example AWS secret keys used to deploy or to gain access to the underlying buckets or backups;  or passwords used to access the SQL database for maintenance;  or other such secrets that are used outside the browser or specialized applications like SSH.\r\n\r\nAlso, let's assume we are speaking in the context of a small company with at most 10 employees.  Large companies probably have 10 people on the security team tasked only with this topic, thus perhaps this problem is solved in more complex ways.\r\n\r\n----\r\n\r\nSo, how do the administrators and developers in this community manage such secrets when writing semi-automatic scripts?\r\n\r\nI'm interested especially on the following aspects:\r\n* where do you store the secrets?  in plain-text files, protected with GPG or Age, or even Google Drive?\r\n* how do you share the secrets between employees?  just throw the sensitive material in Slack or email?  (can one actually safely remove something from Slack or GMail?)\r\n* how do you dispose of the secrets once they aren't needed (or have been exposed)?  (because if they are in Git, good-luck with that...)\r\n* how do you keep track of what credentials are still required and in use?  `grep`-ing the scripts code for random looking tokens?\r\n* how do you know who has access to what?\r\n* how often, and how do you actually rotate such secrets?  (I admit I don't want to answer this question...)\r\n* how do you actually provide it to the scripts?  via environment variables?  via command line arguments?  via world-readable files in `/tmp`?\r\n* is anyone actually using any of the PKCS#11-related tools out there?\r\n* what if you need to pass such a secret to a tool that runs on a remote system which you access via SSH?  do you just `scp` it to `/tmp`?\r\n* do you use any existing tool for this purpose?  or is everything built in house?\r\n\r\n----\r\n\r\nSorry for the lengthy question, but I do wonder about this for some time...","comments_url":"https://lobste.rs/s/wi1r4a/how_do_you_securely_manage_secrets","submitter_user":{"username":"ciprian_craciun","created_at":"2022-02-14T13:47:43.000-06:00","is_admin":false,"about":"IT enthusiast, from programming to operating systems, from networking to cryptography, from cloud to hardware, from Erlang to Java.","is_moderator":false,"karma":600,"avatar_url":"/avatars/ciprian_craciun-100.png","invited_by_user":"syn-ack"},"tags":["ask","security"]},{"short_id":"g0r6i0","short_id_url":"https://lobste.rs/s/g0r6i0","created_at":"2023-01-11T16:11:05.000-06:00","title":"Horizon EDA","url":"https://github.com/horizon-eda/horizon","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g0r6i0/horizon_eda","submitter_user":{"username":"pta2002","created_at":"2018-01-29T15:55:16.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":390,"avatar_url":"/avatars/pta2002-100.png","invited_by_user":"yumaikas","github_username":"pta2002"},"tags":["hardware"]},{"short_id":"oickpy","short_id_url":"https://lobste.rs/s/oickpy","created_at":"2023-01-11T15:21:13.000-06:00","title":"Erlang: The Movie","url":"https://www.youtube.com/watch?v=xrIjfIjssLE","score":27,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oickpy/erlang_movie","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I’m Tristan B. Kildaire (or deavmi on the Internet) and I’m a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I’m really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There’s so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I’ve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I’m not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":128,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["erlang","video"]},{"short_id":"djmase","short_id_url":"https://lobste.rs/s/djmase","created_at":"2023-01-11T15:07:38.000-06:00","title":"Let Me Unwind That For You: Exceptions to Backward-Edge Protection","url":"https://download.vusec.net/papers/chop_ndss23.pdf","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/djmase/let_me_unwind_for_you_exceptions_backward","submitter_user":{"username":"saaramar","created_at":"2022-03-22T06:41:55.000-05:00","is_admin":false,"about":"My name is Saar Amar. I'm a security researcher, passionate and focused on reverse engineering, mitigations, exploit development, computer architecture, and everything low level.\r\n\r\nMetadata:\r\nCompany: I'm a security researcher at MSRC\r\nTwitter: @AmarSaar","is_moderator":false,"karma":99,"avatar_url":"/avatars/saaramar-100.png","invited_by_user":"david_chisnall"},"tags":["pdf","security"]}]