[{"short_id":"nitj04","short_id_url":"https://lobste.rs/s/nitj04","created_at":"2024-09-15T13:12:52.000-05:00","title":"A (more) Modern CSS Reset","url":"https://piccalil.li/blog/a-more-modern-css-reset/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nitj04/more_modern_css_reset","submitter_user":"MatheusRich","user_is_author":false,"tags":["css","web"]},{"short_id":"i4j1cb","short_id_url":"https://lobste.rs/s/i4j1cb","created_at":"2024-09-15T12:47:00.000-05:00","title":"Say hello to blog.haskell.org","url":"https://discourse.haskell.org/t/say-hello-to-blog-haskell-org/10355","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/i4j1cb/say_hello_blog_haskell_org","submitter_user":"Hecate","user_is_author":false,"tags":["haskell"]},{"short_id":"wfgevl","short_id_url":"https://lobste.rs/s/wfgevl","created_at":"2024-09-15T12:18:38.000-05:00","title":"MiniLang: A type-safe C successor","url":"https://github.com/NICUP14/MiniLang","score":1,"flags":0,"comment_count":1,"description":"\u003cstrong\u003eMiniLang\u003c/strong\u003e\n\u003cp\u003eA type-safe C successor that compiles to various platforms.\u003c/p\u003e\n\u003cstrong\u003eQuickStart\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NICUP14/MiniLang/blob/main/QUICKSTART.md\" rel=\"ugc\"\u003eLanguage Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NICUP14/MiniLang/blob/main/STDLIB.md\" rel=\"ugc\"\u003eStandard Library Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NICUP14/MiniLang/blob/main/docs/stdlib/examples.md\" rel=\"ugc\"\u003eStandard Library Usage Examples\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cstrong\u003eDesign choices\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eModern\u003c/li\u003e\n\u003cli\u003eCompiled\u003c/li\u003e\n\u003cli\u003eProcedural\u003c/li\u003e\n\u003cli\u003eStrongly typed\u003c/li\u003e\n\u003cli\u003eType and memory safe\u003c/li\u003e\n\u003cli\u003eClosely match C features\u003c/li\u003e\n\u003cli\u003eBidirectionally compatible with C\u003c/li\u003e\n\u003cli\u003eML must be easy to learn and use\u003c/li\u003e\n\u003cli\u003eML abstractions introduce zero-overhead compared to C\u003c/li\u003e\n\u003c/ul\u003e\n\u003cstrong\u003eMotivation\u003c/strong\u003e\n\u003cp\u003eThe language is designed to closely match c features along with some zero-overhead quality of life improvements that you would find in a modern language, while maintaining the ease of learning the language (in about 10 minutes or less via QUICKSTART). Moreover, the type system is stricter than c, which prevents common bugs (flaws) of the c language. Memory safety is also a primary concern. As for c compatibility, the language is bidirectionally compatible with c (c can be used in ML, ML can be used in c).\u003c/p\u003e\n\u003cstrong\u003eGoodies\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eRAII\u003c/li\u003e\n\u003cli\u003eBuiltins\u003c/li\u003e\n\u003cli\u003eBooleans\u003c/li\u003e\n\u003cli\u003eReferences\u003c/li\u003e\n\u003cli\u003eFixed-length integers\u003c/li\u003e\n\u003cli\u003eFixed-length pointers\u003c/li\u003e\n\u003cli\u003eType inference\u003c/li\u003e\n\u003cli\u003eHeredocs\u003c/li\u003e\n\u003cli\u003eAliases\u003c/li\u003e\n\u003cli\u003eDefers\u003c/li\u003e\n\u003cli\u003eImports\u003c/li\u003e\n\u003cli\u003eNamespaces\u003c/li\u003e\n\u003cli\u003eHygienic macros\u003c/li\u003e\n\u003cli\u003eFor-each loops\u003c/li\u003e\n\u003cli\u003eGeneric functions\u003c/li\u003e\n\u003cli\u003eFunction overloading\u003c/li\u003e\n\u003cli\u003eFunction signatures\u003c/li\u003e\n\u003cli\u003eUniform function call syntax (UFCS)\u003c/li\u003e\n\u003cli\u003eMulti-line statements\u003c/li\u003e\n\u003c/ul\u003e\n\u003cstrong\u003eHello Word Sample\u003c/strong\u003e\n\u003cpre\u003e\u003ccode\u003eimport stdlib.io.print\n\nfun main: int32\n    print \"Hello World!\"\n    ret 0\nend\n\u003c/code\u003e\u003c/pre\u003e\n\u003cstrong\u003eString-UFCS Sample\u003c/strong\u003e\n\u003cpre\u003e\u003ccode\u003eimport stdlib.io.print\nimport stdlib.string\n\nfun main: int32\n    # Is equivalent to:\n    # print(concat(str(\"Hello \"), str(\"World!\")))\n    (str(\"Hello \").\n        concat(str(\"World!\")).\n        print)\nend\n\u003c/code\u003e\u003c/pre\u003e\n","description_plain":"# MiniLang\r\n\r\nA type-safe C successor that compiles to various platforms.\r\n\r\n## QuickStart\r\n\r\n* [Language Documentation](https://github.com/NICUP14/MiniLang/blob/main/QUICKSTART.md)\r\n* [Standard Library Documentation](https://github.com/NICUP14/MiniLang/blob/main/STDLIB.md)\r\n* [Standard Library Usage Examples](https://github.com/NICUP14/MiniLang/blob/main/docs/stdlib/examples.md)\r\n\r\n## Design choices\r\n\r\n* Modern\r\n* Compiled\r\n* Procedural\r\n* Strongly typed\r\n* Type and memory safe\r\n* Closely match C features\r\n* Bidirectionally compatible with C\r\n* ML must be easy to learn and use\r\n* ML abstractions introduce zero-overhead compared to C\r\n\r\n## Motivation\r\n\r\nThe language is designed to closely match c features along with some zero-overhead quality of life improvements that you would find in a modern language, while maintaining the ease of learning the language (in about 10 minutes or less via QUICKSTART). Moreover, the type system is stricter than c, which prevents common bugs (flaws) of the c language. Memory safety is also a primary concern. As for c compatibility, the language is bidirectionally compatible with c (c can be used in ML, ML can be used in c).\r\n\r\n## Goodies\r\n\r\n* RAII\r\n* Builtins\r\n* Booleans\r\n* References\r\n* Fixed-length integers\r\n* Fixed-length pointers\r\n* Type inference\r\n* Heredocs\r\n* Aliases\r\n* Defers\r\n* Imports\r\n* Namespaces\r\n* Hygienic macros\r\n* For-each loops\r\n* Generic functions\r\n* Function overloading\r\n* Function signatures\r\n* Uniform function call syntax (UFCS)\r\n* Multi-line statements\r\n\r\n## Hello Word Sample\r\n\r\n```\r\nimport stdlib.io.print\r\n\r\nfun main: int32\r\n    print \"Hello World!\"\r\n    ret 0\r\nend\r\n```\r\n\r\n## String-UFCS Sample\r\n\r\n```\r\nimport stdlib.io.print\r\nimport stdlib.string\r\n\r\nfun main: int32\r\n    # Is equivalent to:\r\n    # print(concat(str(\"Hello \"), str(\"World!\")))\r\n    (str(\"Hello \").\r\n        concat(str(\"World!\")).\r\n        print)\r\nend\r\n```","comments_url":"https://lobste.rs/s/wfgevl/minilang_type_safe_c_successor","submitter_user":"NICUP14","user_is_author":true,"tags":["c","compilers","compsci","python"]},{"short_id":"2gohxl","short_id_url":"https://lobste.rs/s/2gohxl","created_at":"2024-09-15T12:18:06.000-05:00","title":"private lines","url":"https://computer.rip/2024-09-08-private-lines.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2gohxl/private_lines","submitter_user":"w0nder1ng","user_is_author":false,"tags":["hardware","historical"]},{"short_id":"hnejpg","short_id_url":"https://lobste.rs/s/hnejpg","created_at":"2024-09-15T12:15:57.000-05:00","title":"Turning Disposable Vapes into a Fast Charge Power Bank","url":"https://youtu.be/ehp23hrrEHY","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hnejpg/turning_disposable_vapes_into_fast","submitter_user":"gmem","user_is_author":false,"tags":["hardware","video"]},{"short_id":"trqpxj","short_id_url":"https://lobste.rs/s/trqpxj","created_at":"2024-09-15T11:35:03.000-05:00","title":"Fuzzers vs Games","url":"https://addisoncrump.info/research/fuzzers-and-gaming/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/trqpxj/fuzzers_vs_games","submitter_user":"louismerlin","user_is_author":false,"tags":["security"]},{"short_id":"rpwalz","short_id_url":"https://lobste.rs/s/rpwalz","created_at":"2024-09-15T11:20:38.000-05:00","title":"AT\u0026T’s CRISP Hobbits","url":"https://thechipletter.substack.com/p/at-and-ts-crisp-hobbits","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rpwalz/at_t_s_crisp_hobbits","submitter_user":"fanf","user_is_author":false,"tags":["hardware","historical"]},{"short_id":"6oixu6","short_id_url":"https://lobste.rs/s/6oixu6","created_at":"2024-09-15T10:53:40.000-05:00","title":"Saving Voyager 1","url":"https://www.youtube.com/watch?v=dF_9YcehCZo","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6oixu6/saving_voyager_1","submitter_user":"kuijsten","user_is_author":false,"tags":["debugging","hardware","reversing","video"]},{"short_id":"3k2dmv","short_id_url":"https://lobste.rs/s/3k2dmv","created_at":"2024-09-15T10:42:16.000-05:00","title":"A fast full-text cli reader (works also with lobste.rs articles content)","url":"https://github.com/piqoni/cast-text","score":6,"flags":0,"comment_count":2,"description":"\u003cp\u003eWrote this for my personal usage as I wanted a simple reader that is used entirely with arrow keys (and hjkl). I prefetch the article content of adjacent list so it loads instantly.\u003c/p\u003e\n\u003cp\u003eFor lobster, start it as “cast-text -rss \u003ca href=\"https://lobste.rs/rss\" rel=\"ugc\"\u003ehttps://lobste.rs/rss\u003c/a\u003e”\u003c/p\u003e\n","description_plain":"Wrote this for my personal usage as I wanted a simple reader that is used entirely with arrow keys (and hjkl). I prefetch the article content of adjacent list so it loads instantly. \r\n\r\nFor lobster, start it as \"cast-text -rss https://lobste.rs/rss\"","comments_url":"https://lobste.rs/s/3k2dmv/fast_full_text_cli_reader_works_also_with","submitter_user":"el_piqo","user_is_author":true,"tags":["go","release","show"]},{"short_id":"9a1nnf","short_id_url":"https://lobste.rs/s/9a1nnf","created_at":"2024-09-15T07:56:02.000-05:00","title":"LLMs don't know what they are talking about","url":"https://danthegoodman.substack.com/p/notes-llms-dont-know-what-they-are","score":2,"flags":1,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9a1nnf/llms_don_t_know_what_they_are_talking_about","submitter_user":"danthegoodman1","user_is_author":true,"tags":["ai"]},{"short_id":"3jo60l","short_id_url":"https://lobste.rs/s/3jo60l","created_at":"2024-09-15T06:04:27.000-05:00","title":"Will we be writing Hare in 2099?","url":"https://www.youtube.com/watch?v=42y2Q9io3Xs","score":14,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3jo60l/will_we_be_writing_hare_2099","submitter_user":"kuijsten","user_is_author":false,"tags":["osdev","plt","video"]},{"short_id":"begr4l","short_id_url":"https://lobste.rs/s/begr4l","created_at":"2024-09-15T04:04:02.000-05:00","title":"How to hide lobste.rs submissions that include specific keywords with uBlock Origin","url":"","score":16,"flags":0,"comment_count":4,"description":"\u003cp\u003eHello, I wanted to share some examples of how to hide stories from view using uBlock Origin’s filtering syntax, since the site does not implement custom filters.\u003c/p\u003e\n\u003cp\u003eYou’ll need to enter these filters, one per line, in uBlock’s Origin’s settings, under the tab \u003cstrong\u003eMy filters\u003c/strong\u003e. You will need to select \u003ccode\u003eEnable my custom filters\u003c/code\u003e too.\u003c/p\u003e\n\u003cstrong\u003eExample using the submission’s title:\u003c/strong\u003e\n\u003cpre\u003e\u003ccode\u003elobste.rs##li.story:has(span[role=\"heading\"].link \u0026gt; a:has-text(\"LLM\")):remove()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cstrong\u003eExample using the submission’s \u003cem\u003edomain\u003c/em\u003e:\u003c/strong\u003e\n\u003cpre\u003e\u003ccode\u003elobste.rs##li.story:has(a.domain:has-text(\"oilshell\")):remove()\n\u003c/code\u003e\u003c/pre\u003e\n","description_plain":"Hello, I wanted to share some examples of how to hide stories from view using uBlock Origin's filtering syntax, since the site does not implement custom filters.\r\n\r\nYou'll need to enter these filters, one per line, in uBlock's Origin's settings, under the tab **My filters**. You will need to select `Enable my custom filters` too.\r\n\r\n## Example using the submission's title:\r\n\r\n    lobste.rs##li.story:has(span[role=\"heading\"].link \u003e a:has-text(\"LLM\")):remove()\r\n\r\n## Example using the submission's *domain*:\r\n\r\n    lobste.rs##li.story:has(a.domain:has-text(\"oilshell\")):remove()","comments_url":"https://lobste.rs/s/begr4l/how_hide_lobste_rs_submissions_include","submitter_user":"epilys","user_is_author":true,"tags":["meta"]},{"short_id":"vqvul7","short_id_url":"https://lobste.rs/s/vqvul7","created_at":"2024-09-15T02:58:36.000-05:00","title":"Rust error handling is perfect actually","url":"https://bitfieldconsulting.com/posts/rust-errors-option-result","score":23,"flags":2,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vqvul7/rust_error_handling_is_perfect_actually","submitter_user":"bitfield","user_is_author":true,"tags":["rust"]},{"short_id":"mgc2lf","short_id_url":"https://lobste.rs/s/mgc2lf","created_at":"2024-09-15T00:41:51.000-05:00","title":"fair: A Go library for serving resources fairly","url":"https://github.com/satmihir/fair/","score":6,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis is a go implementation of stochastic blue paper\u003c/p\u003e\n","description_plain":"This is a go implementation of stochastic blue paper","comments_url":"https://lobste.rs/s/mgc2lf/fair_go_library_for_serving_resources","submitter_user":"palash25","user_is_author":false,"tags":["distributed","go"]},{"short_id":"s7cbfg","short_id_url":"https://lobste.rs/s/s7cbfg","created_at":"2024-09-15T00:22:29.000-05:00","title":"A Time Consuming Pitfall for 32-bit Applications on AArch64","url":"https://sigma-star.at/blog/2024/02/aarch64-32-bit-compat-pitfall/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/s7cbfg/time_consuming_pitfall_for_32_bit","submitter_user":"raymii","user_is_author":false,"tags":["linux"]},{"short_id":"grqy5d","short_id_url":"https://lobste.rs/s/grqy5d","created_at":"2024-09-14T20:59:14.000-05:00","title":"Fractran","url":"https://wiki.xxiivv.com/site/fractran.html","score":16,"flags":0,"comment_count":4,"description":"\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://git.sr.ht/~rabbits/fractran/tree/main/item/examples/life.fra\" rel=\"ugc\"\u003eGame of Life\u003c/a\u003e in Fractran; \u003ca href=\"https://merveilles.town/@neauoire/113137309598389113\" rel=\"ugc\"\u003evideo\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"- [Game of Life](https://git.sr.ht/~rabbits/fractran/tree/main/item/examples/life.fra) in Fractran; [video](https://merveilles.town/@neauoire/113137309598389113)","comments_url":"https://lobste.rs/s/grqy5d/fractran","submitter_user":"technetium","user_is_author":false,"tags":["plt"]},{"short_id":"rbtfuw","short_id_url":"https://lobste.rs/s/rbtfuw","created_at":"2024-09-14T20:41:25.000-05:00","title":"Impact of global struct size in Toybox","url":"http://lists.landley.net/pipermail/toybox-landley.net/2024-January/029957.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rbtfuw/impact_global_struct_size_toybox","submitter_user":"jmillikin","user_is_author":false,"tags":["performance","unix"]},{"short_id":"bawfrd","short_id_url":"https://lobste.rs/s/bawfrd","created_at":"2024-09-14T18:00:48.000-05:00","title":"Unbindable Kemmy Schmidt","url":"https://keymaterial.net/2024/09/14/unbindable-kemmy-schmidt/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bawfrd/unbindable_kemmy_schmidt","submitter_user":"crazyloglad","user_is_author":false,"tags":["cryptography"]},{"short_id":"r00pdf","short_id_url":"https://lobste.rs/s/r00pdf","created_at":"2024-09-14T17:43:09.000-05:00","title":"inferred implicit parameters for ergonomic object capabilities","url":"https://paper.wf/binarycat/inferred-implicit-parameters-for-ergonomic-object-capabilities","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r00pdf/inferred_implicit_parameters_for","submitter_user":"calvin","user_is_author":false,"tags":["programming"]},{"short_id":"qlovcp","short_id_url":"https://lobste.rs/s/qlovcp","created_at":"2024-09-14T15:03:47.000-05:00","title":"Oxidize Conference: How Rust makes Oxide possible","url":"https://www.youtube.com/watch?v=q8qn0dyT3xc","score":18,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qlovcp/oxidize_conference_how_rust_makes_oxide","submitter_user":"kuijsten","user_is_author":false,"tags":["osdev","rust","video"]},{"short_id":"on3jol","short_id_url":"https://lobste.rs/s/on3jol","created_at":"2024-09-14T14:20:04.000-05:00","title":"Chrome AP Firmware Embraces the x86_64 Architecture","url":"https://blog.osfw.foundation/chrome-ap-firmware-adopting-to-x86_64-architecture/","score":6,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/on3jol/chrome_ap_firmware_embraces_x86_64","submitter_user":"jamesw","user_is_author":false,"tags":["programming"]},{"short_id":"svnbav","short_id_url":"https://lobste.rs/s/svnbav","created_at":"2024-09-14T14:04:55.000-05:00","title":"Don't Use JS for That: Moving Features to CSS and HTML","url":"https://www.youtube.com/watch?v=IP_rtWEMR0o","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/svnbav/don_t_use_js_for_moving_features_css_html","submitter_user":"edoput","user_is_author":false,"tags":["browsers","css","javascript","video","web"]},{"short_id":"w1llcv","short_id_url":"https://lobste.rs/s/w1llcv","created_at":"2024-09-14T13:24:41.000-05:00","title":"Falsehoods programmers believe about TCP","url":"https://lwn.net/Articles/990281/","score":24,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/w1llcv/falsehoods_programmers_believe_about","submitter_user":"gioele","user_is_author":false,"tags":["networking"]},{"short_id":"ne7mih","short_id_url":"https://lobste.rs/s/ne7mih","created_at":"2024-09-14T13:12:57.000-05:00","title":"LiveView Native Is Here","url":"https://dockyard.com/blog/2024/09/09/liveview-native-is-here","score":24,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ne7mih/liveview_native_is_here","submitter_user":"slondr","user_is_author":false,"tags":["elixir","mobile"]},{"short_id":"fouybm","short_id_url":"https://lobste.rs/s/fouybm","created_at":"2024-09-14T13:01:18.000-05:00","title":"Tiny Thumbnail Hashes with AVIF","url":"https://juliobbv.com/avifhash.html","score":27,"flags":0,"comment_count":10,"description":"\u003cp\u003eAvifHash leverages the power of AVIF to create image placeholders that are both compact \u0026amp; efficient.\u003c/p\u003e\n\u003cp\u003eThis Proof of Concept shows promising results: at 27 characters, AvifHash outperforms BlurHash \u003ca href=\"https://blurha.sh/\" rel=\"ugc\"\u003ehttps://blurha.sh/\u003c/a\u003e (using 4x3 components) in quality and detail retention. At a similar quality, BlurHash needs 54 (5x5) to 76 characters (6x6 components).\u003c/p\u003e\n\u003cp\u003eGiven that AVIF decoding is done by the web engine, AvifHash is very small: the entire demo page (including parsing and re-hydration code) is only 2.3 kB gzipped.\u003c/p\u003e\n","description_plain":"AvifHash leverages the power of AVIF to create image placeholders that are both compact \u0026 efficient.\r\n\r\nThis Proof of Concept shows promising results: at 27 characters, AvifHash outperforms BlurHash https://blurha.sh/ (using 4x3 components) in quality and detail retention. At a similar quality, BlurHash needs 54 (5x5) to 76 characters (6x6 components).\r\n\r\nGiven that AVIF decoding is done by the web engine, AvifHash is very small: the entire demo page (including parsing and re-hydration code) is only 2.3 kB gzipped.","comments_url":"https://lobste.rs/s/fouybm/tiny_thumbnail_hashes_with_avif","submitter_user":"gianni","user_is_author":false,"tags":["browsers","web"]}]