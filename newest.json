[{"short_id":"kjqmnj","short_id_url":"https://lobste.rs/s/kjqmnj","created_at":"2022-07-12T12:08:12.000-05:00","title":"Maintaining Software Correctness","url":"https://blog.danlew.net/2022/06/22/maintaining-software-correctness/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kjqmnj/maintaining_software_correctness","submitter_user":{"username":"pushcx","created_at":"2012-08-14T20:25:08.000-05:00","is_admin":true,"about":"Hi, I'm [Peter Bhat Harkins](https://malaprop.org), a programmer and entrepreneur from Chicago. From June 2014 to winter of 2015 I typically posted a dozen stories per day to [help](https://lobste.rs/s/9pm09z/what_is_on_topic_what_is_not/comments/nie0yn#c_nie0yn) the site reach a critical mass of regular visitors. In October 2017 I became the site administrator after the site creator @jcs stepped down.\r\n\r\n * Please don‚Äôt message me for an invitation if we're complete strangers; check \u003ca href=\"https://lobste.rs/u\"\u003ethe user list\u003c/a\u003e for someone you know or ask [in chat](https://lobste.rs/chat).\r\n * Submit a [`meta`](https://lobste.rs/t/meta) post for feature requests (including new tags) to let the community discuss. Bug reports and \"is this a bug?\" should go to [the issue tracker](https://github.com/lobsters/lobsters/issues).\r\n * [Message me](https://lobste.rs/messages?to=pushcx) for administrative and moderator things. I don't see everything and I gotta sleep sometime.\r\n * E-mail my first name @malaprop.org regarding site security or if you can't log in to message me. If I've posted or commented about something here or in the chat room, I'd almost certainly love to talk more about it.\r\n","is_moderator":true,"avatar_url":"/avatars/pushcx-100.png","invited_by_user":"jcs","github_username":"pushcx","twitter_username":"pushcx","keybase_signatures":[{"kb_username":"pushcx","sig_hash":"de6fb28b501c211e88fabddeacc834c6b922d738efd6b4108ce871879d039e510f"}]},"tags":["programming"]},{"short_id":"rbmacc","short_id_url":"https://lobste.rs/s/rbmacc","created_at":"2022-07-12T12:07:29.000-05:00","title":"Retbleed: Arbitrary Speculative Code Execution with Return Instructions","url":"https://comsec.ethz.ch/research/microarch/retbleed/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rbmacc/retbleed_arbitrary_speculative_code","submitter_user":{"username":"lattera","created_at":"2014-05-30T07:30:38.000-05:00","is_admin":false,"about":"Cofounder of HardenedBSD, lover of most things opensource.","is_moderator":false,"karma":4899,"avatar_url":"/avatars/lattera-100.png","invited_by_user":"xmj","github_username":"lattera","twitter_username":"lattera"},"tags":["security"]},{"short_id":"axgnnm","short_id_url":"https://lobste.rs/s/axgnnm","created_at":"2022-07-12T11:24:38.000-05:00","title":"FizzBuzz in GNU make","url":"https://citizen428.net/blog/fizzbuzz-in-gnu-make/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/axgnnm/fizzbuzz_gnu_make","submitter_user":{"username":"citizen428","created_at":"2019-02-21T19:24:42.000-06:00","is_admin":false,"about":"Your friendly neighborhood anarcho-cynicalist. Taming bits and herding developers (aka engineering lead). \r\n\r\n¬Ø\\\\_(„ÉÑ)_/¬Ø and (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª are my two natural states. \r\n\r\nüá¶üáπ living in üáπüá≠.","is_moderator":false,"karma":63,"avatar_url":"/avatars/citizen428-100.png","invited_by_user":"antifuchs","github_username":"citizen428","twitter_username":"citizen428","keybase_signatures":[{"kb_username":"citizen428","sig_hash":"8cff2c0c1154dc071343960129fdb1be32c31e79c021ae5935a70e7a0edd6c4b0f"}]},"tags":["unix"]},{"short_id":"omusc5","short_id_url":"https://lobste.rs/s/omusc5","created_at":"2022-07-12T08:44:57.000-05:00","title":"Postgres 15 improves UNIQUE and NULL","url":"https://blog.rustprooflabs.com/2022/07/postgres-15-unique-improvement-with-null","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/omusc5/postgres_15_improves_unique_null","submitter_user":{"username":"tyoung","created_at":"2022-04-01T15:50:55.000-05:00","is_admin":false,"about":"Senior dev at Felt, writing Elixir and React full time. Interested in FP more broadly, especially Elm, as well as Swift, C++, and Python.","is_moderator":false,"karma":44,"avatar_url":"/avatars/tyoung-100.png","invited_by_user":"can","github_username":"s3cur3","twitter_username":"TylerAYoung"},"tags":["databases"]},{"short_id":"wdtojd","short_id_url":"https://lobste.rs/s/wdtojd","created_at":"2022-07-12T05:44:07.000-05:00","title":"Fantastic tail calls, and how to implement them","url":"https://medium.com/leaningtech/fantastic-tail-calls-and-how-to-implement-them-8c6bd52fd271","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eWASM is close to standardizing tail calls. It just needs a second web browser implementation, which is in this PR: \u003ca href=\"https://github.com/WebKit/WebKit/pull/2065\" rel=\"ugc\"\u003ehttps://github.com/WebKit/WebKit/pull/2065\u003c/a\u003e\u003c/p\u003e\n","description_plain":"WASM is close to standardizing tail calls. It just needs a second web browser implementation, which is in this PR: https://github.com/WebKit/WebKit/pull/2065","comments_url":"https://lobste.rs/s/wdtojd/fantastic_tail_calls_how_implement_them","submitter_user":{"username":"doug-moen","created_at":"2019-01-24T07:57:04.000-06:00","is_admin":false,"about":"I'm working on Curv: a pure functional programming language, for procedural generation of 3D printable shapes, represented by signed distance fields, which are rendered by compiling Curv programs into GPU shader programs. https://github.com/curv3d","is_moderator":false,"karma":931,"avatar_url":"/avatars/doug-moen-100.png","invited_by_user":"sebastien"},"tags":["wasm"]},{"short_id":"aqx7vi","short_id_url":"https://lobste.rs/s/aqx7vi","created_at":"2022-07-12T04:21:52.000-05:00","title":"Column order in PostgreSQL does matter","url":"https://www.cybertec-postgresql.com/en/column-order-in-postgresql-does-matter/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aqx7vi/column_order_postgresql_does_matter","submitter_user":{"username":"sjamaan","created_at":"2018-08-30T05:08:17.000-05:00","is_admin":false,"about":"Scheme enthusiast from the Netherlands. Core maintainer of CHICKEN Scheme. Check out [my blog](https://www.more-magic.net/) for more information.","is_moderator":false,"karma":3963,"avatar_url":"/avatars/sjamaan-100.png","invited_by_user":"evhan"},"tags":["databases","performance"]},{"short_id":"zb7tgs","short_id_url":"https://lobste.rs/s/zb7tgs","created_at":"2022-07-12T03:59:17.000-05:00","title":"How MirageOS Powers Docker Desktop","url":"https://mirage.io/blog/2022-04-06.vpnkit","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zb7tgs/how_mirageos_powers_docker_desktop","submitter_user":{"username":"zem","created_at":"2014-03-22T03:23:01.000-05:00","is_admin":false,"about":"* martindemello@gmail.com\r\n\r\n* http://www.github.com/martindemello\r\n\r\n* http://www.twitter.com/zem42","is_moderator":false,"karma":5200,"avatar_url":"/avatars/zem-100.png","invited_by_user":"vjoel","github_username":"martindemello"},"tags":["ml","virtualization"]},{"short_id":"muasok","short_id_url":"https://lobste.rs/s/muasok","created_at":"2022-07-12T01:26:06.000-05:00","title":"Formally Verifying Industry Cryptography","url":"https://www.computer.org/csdl/magazine/sp/2022/03/09733177/1BENJJewLKw","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/muasok/formally_verifying_industry","submitter_user":{"username":"df","created_at":"2019-12-17T11:43:16.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":982,"avatar_url":"/avatars/df-100.png","invited_by_user":"roshanravan"},"tags":["cryptography","formalmethods"]},{"short_id":"lsfkc0","short_id_url":"https://lobste.rs/s/lsfkc0","created_at":"2022-07-12T00:14:37.000-05:00","title":"The practical Unix API is more than system calls (or POSIX) (2018)","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/UnixAPIMoreThanSyscalls","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lsfkc0/practical_unix_api_is_more_than_system","submitter_user":{"username":"f96","created_at":"2022-06-05T14:48:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":168,"avatar_url":"/avatars/f96-100.png","invited_by_user":"varjag"},"tags":["unix"]},{"short_id":"luojbu","short_id_url":"https://lobste.rs/s/luojbu","created_at":"2022-07-11T23:57:45.000-05:00","title":"Clickable Links Inside XML","url":"https://tdarb.org/blog/rss-click.html","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/luojbu/clickable_links_inside_xml","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":16664,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["web"]},{"short_id":"fqbr7t","short_id_url":"https://lobste.rs/s/fqbr7t","created_at":"2022-07-11T22:59:34.000-05:00","title":"How Bazel Works","url":"https://sluongng.hashnode.dev/bazel-caching-explained-pt-1-how-bazel-works","score":8,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fqbr7t/how_bazel_works","submitter_user":{"username":"sluongng","created_at":"2019-08-11T12:16:27.000-05:00","is_admin":false,"about":"- **Title**: SRE @ Booking.com, Technology enthusiast.\r\n\r\n- **Interest**: Rust, Golang, Java.\r\n\r\n- **Location**: Amsterdam, Netherlands.","is_moderator":false,"karma":171,"avatar_url":"/avatars/sluongng-100.png","invited_by_user":"aleph","github_username":"sluongng","twitter_username":"sluongng"},"tags":["devops","scaling"]},{"short_id":"nfkbw1","short_id_url":"https://lobste.rs/s/nfkbw1","created_at":"2022-07-11T21:46:07.000-05:00","title":"The Universal Library; A novel approach to teaching category theory (2021)","url":"https://www.youtube.com/watch?v=hNRETzXkE5M","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nfkbw1/universal_library_novel_approach","submitter_user":{"username":"Corbin","created_at":"2018-10-13T21:40:32.000-05:00","is_admin":false,"about":"Secure distributed computation should not be hard.\r\n\r\nmi pu'i tavla fo lo jbobau .i mi'e la korvo","is_moderator":false,"karma":3894,"avatar_url":"/avatars/Corbin-100.png","invited_by_user":"infinisil"},"tags":["math","plt","video"]},{"short_id":"yrrdw5","short_id_url":"https://lobste.rs/s/yrrdw5","created_at":"2022-07-11T20:44:11.000-05:00","title":"Slower Memory Zeroing Through Parallelism","url":"https://randomascii.wordpress.com/2022/07/11/slower-memory-zeroing-through-parallelism/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yrrdw5/slower_memory_zeroing_through","submitter_user":{"username":"jparise","created_at":"2020-10-16T10:33:21.000-05:00","is_admin":false,"about":"Trying to leave things better than I find them.","is_moderator":false,"karma":48,"avatar_url":"/avatars/jparise-100.png","invited_by_user":"chrislloyd"},"tags":["performance","windows"]},{"short_id":"lhn5gt","short_id_url":"https://lobste.rs/s/lhn5gt","created_at":"2022-07-11T19:36:23.000-05:00","title":"NASA‚Äôs Webb Delivers Deepest Infrared Image of Universe Yet","url":"https://www.nasa.gov/image-feature/goddard/2022/nasa-s-webb-delivers-deepest-infrared-image-of-universe-yet","score":21,"flags":2,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lhn5gt/nasa_s_webb_delivers_deepest_infrared","submitter_user":{"username":"Kye","created_at":"2020-02-20T18:34:42.000-06:00","is_admin":false,"about":"they/them\r\n\r\nhttps://kyefox.com/\r\n\r\nhttps://ko-fi.com/kyefox\r\n\r\nkye@kyefox.com","is_moderator":false,"karma":33,"avatar_url":"/avatars/Kye-100.png","invited_by_user":"tptacek","twitter_username":"KyeFox"},"tags":["science"]},{"short_id":"bpbd01","short_id_url":"https://lobste.rs/s/bpbd01","created_at":"2022-07-11T18:23:29.000-05:00","title":"SimpleX - the first messaging  operating without user identifiers of any kind","url":"https://github.com/simplex-chat/simplex-chat","score":13,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bpbd01/simplex_first_messaging_operating","submitter_user":{"username":"atoponce","created_at":"2018-05-27T14:17:15.000-05:00","is_admin":false,"about":"Security researcher, amateur cryptographer, password enthusiast, Linux system administrator. I'm the one who what3words threatened with legal action for sharing the WhatFreeWords JavaScript source code.","is_moderator":false,"karma":902,"avatar_url":"/avatars/atoponce-100.png","invited_by_user":"355E3B","github_username":"atoponce","keybase_signatures":[{"kb_username":"atoponce","sig_hash":"c88adc48e09b4c5b8763ff77cf8c207dda6dde0419561cc7f6253efc061ba9c40f"}]},"tags":["cryptography","privacy"]},{"short_id":"jmrgsq","short_id_url":"https://lobste.rs/s/jmrgsq","created_at":"2022-07-11T17:59:18.000-05:00","title":"DoD Open Source Software FAQ","url":"https://dodcio.defense.gov/open-source-software-faq/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jmrgsq/dod_open_source_software_faq","submitter_user":{"username":"jakob","created_at":"2018-03-02T15:45:42.000-06:00","is_admin":false,"about":"Website: \u003chttp://jakob.space\u003e\r\n\r\nMastodon: \u003chttps://mastodon.sdf.org/@jakob\u003e","is_moderator":false,"karma":710,"avatar_url":"/avatars/jakob-100.png","invited_by_user":"calvin","github_username":"TsarFox"},"tags":["law","security"]},{"short_id":"anusje","short_id_url":"https://lobste.rs/s/anusje","created_at":"2022-07-11T17:25:58.000-05:00","title":"Desktop Environments Resource Usage Comparison","url":"https://vermaden.wordpress.com/2022/07/12/desktop-environments-resource-usage-comparison/","score":18,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/anusje/desktop_environments_resource_usage","submitter_user":{"username":"vermaden","created_at":"2018-04-13T03:53:33.000-05:00","is_admin":false,"about":"Another ${RANDOM} sysadmin sharing his experiences of work at IT industry.\r\n\r\nOn the VERMADEN.WORDPRESS.COM I share knowledge and experience that I gathered by working 10+ years as sysadmin (now architect) at IT industry.\r\n\r\nCountless times various articles or blog posts helped me, so its time to give back.\r\n","is_moderator":false,"karma":4119,"avatar_url":"/avatars/vermaden-100.png","invited_by_user":"gerikson"},"tags":["freebsd","unix"]},{"short_id":"odvpbd","short_id_url":"https://lobste.rs/s/odvpbd","created_at":"2022-07-11T17:22:54.000-05:00","title":"GCC Rust approved by GCC Steering Committee","url":"https://gcc.gnu.org/pipermail/gcc/2022-July/239057.html","score":49,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/odvpbd/gcc_rust_approved_by_gcc_steering","submitter_user":{"username":"fcambus","created_at":"2012-09-10T08:43:10.000-05:00","is_admin":false,"about":"System and Network engineer.\r\n\r\nInterests: ANSI Art, DNS, NetBSD, OpenBSD, Security, and Text Mode.\r\n\r\nSite: https://www.cambus.net","is_moderator":false,"karma":3780,"avatar_url":"/avatars/fcambus-100.png","invited_by_user":"gmcabrita","github_username":"fcambus","twitter_username":"fcambus"},"tags":["compilers","rust"]},{"short_id":"fjelgc","short_id_url":"https://lobste.rs/s/fjelgc","created_at":"2022-07-11T16:56:32.000-05:00","title":"Talos Linux- The Kubernetes Operating System","url":"https://www.talos.dev/","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fjelgc/talos_linux_kubernetes_operating_system","submitter_user":{"username":"Vaelatern","created_at":"2017-11-21T12:33:02.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":2157,"avatar_url":"/avatars/Vaelatern-100.png","invited_by_user":"duncaen"},"tags":["linux"]},{"short_id":"yi0xed","short_id_url":"https://lobste.rs/s/yi0xed","created_at":"2022-07-11T15:58:23.000-05:00","title":"Yes, I have opinions on your open source contributions","url":"https://www.b-list.org/weblog/2022/jul/11/pypi/","score":40,"flags":1,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yi0xed/yes_i_have_opinions_on_your_open_source","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":5042,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["practices","security"]},{"short_id":"8d5wts","short_id_url":"https://lobste.rs/s/8d5wts","created_at":"2022-07-11T15:51:39.000-05:00","title":"CLI tools for capturing CPU \u0026 Memory metrics of running application? (doing HTTP loading testing)","url":"","score":2,"flags":0,"comment_count":1,"description":"\u003cp\u003eAny recommendations for CLI tools which allow you to capture the memory and CPU utilization of a running application?\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBackground Context\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI am doing HTTP benchmarking on two different servers using a HTTP load testing tool. Both servers are written in 2 different languages. Ideally, I‚Äôd like to not write any app code to capture the system information (CPU, Memory) while HTTP load test is happening.\u003c/li\u003e\n\u003cli\u003eWhat I envision this looking like: run HTTP benchmarking tool on running server, while the other CLI tool is capturing system info (CPU / memory stats) without any modification to the code of each server\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAt a high level, i‚Äôm wondering if such a tool exists that has the ease of an HTTP benckmarking tool and simply spits out a summarized description of the load measured:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# this is a http benchmarking tool (but im looking for a tool for CPU \u0026amp; memory\n\n‚ûú autocannon -c 100 -d 30 -p 10 http://localhost:3000/small-json-payload\nRunning 30s test @ http://localhost:3000/small-json-payload\n100 connections with 10 pipelining factor\n\n\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ Stat    ‚îÇ 2.5%   ‚îÇ 50%    ‚îÇ 97.5%  ‚îÇ 99%    ‚îÇ Avg       ‚îÇ Stdev    ‚îÇ Max    ‚îÇ\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n‚îÇ Latency ‚îÇ 460 ms ‚îÇ 487 ms ‚îÇ 667 ms ‚îÇ 705 ms ‚îÇ 500.59 ms ‚îÇ 50.07 ms ‚îÇ 781 ms ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ Stat      ‚îÇ 1%      ‚îÇ 2.5%    ‚îÇ 50%     ‚îÇ 97.5%   ‚îÇ Avg     ‚îÇ Stdev   ‚îÇ Min     ‚îÇ\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n‚îÇ Req/Sec   ‚îÇ 1160    ‚îÇ 1160    ‚îÇ 2000    ‚îÇ 2287    ‚îÇ 1984.57 ‚îÇ 219.1   ‚îÇ 1160    ‚îÇ\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n‚îÇ Bytes/Sec ‚îÇ 22.7 MB ‚îÇ 22.7 MB ‚îÇ 39.1 MB ‚îÇ 44.7 MB ‚îÇ 38.8 MB ‚îÇ 4.28 MB ‚îÇ 22.7 MB ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\nReq/Bytes counts sampled once per second.\n# of samples: 30\n\n61k requests in 30.17s, 1.16 GB read\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOr something similar to docker stats (i‚Äôm not using docker though)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.docker.com/engine/reference/commandline/stats/#examples\" rel=\"ugc\"\u003ehttps://docs.docker.com/engine/reference/commandline/stats/#examples\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"Any recommendations for CLI tools which allow you to capture the memory and CPU utilization of a running application? \r\n\r\n**Background Context**:\r\n- I am doing HTTP benchmarking on two different servers using a HTTP load testing tool. Both servers are written in 2 different languages. Ideally, I'd like to not write any app code to capture the system information (CPU, Memory) while HTTP load test is happening.\r\n- What I envision this looking like: run HTTP benchmarking tool on running server, while the other CLI tool is capturing system info (CPU / memory stats) without any modification to the code of each server\r\n\r\n\r\n\r\nAt a high level, i'm wondering if such a tool exists that has the ease of an HTTP benckmarking tool and simply spits out a summarized description of the load measured:\r\n\r\n```\r\n# this is a http benchmarking tool (but im looking for a tool for CPU \u0026 memory\r\n\r\n‚ûú autocannon -c 100 -d 30 -p 10 http://localhost:3000/small-json-payload\r\nRunning 30s test @ http://localhost:3000/small-json-payload\r\n100 connections with 10 pipelining factor\r\n\r\n\r\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\r\n‚îÇ Stat    ‚îÇ 2.5%   ‚îÇ 50%    ‚îÇ 97.5%  ‚îÇ 99%    ‚îÇ Avg       ‚îÇ Stdev    ‚îÇ Max    ‚îÇ\r\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\r\n‚îÇ Latency ‚îÇ 460 ms ‚îÇ 487 ms ‚îÇ 667 ms ‚îÇ 705 ms ‚îÇ 500.59 ms ‚îÇ 50.07 ms ‚îÇ 781 ms ‚îÇ\r\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\r\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\r\n‚îÇ Stat      ‚îÇ 1%      ‚îÇ 2.5%    ‚îÇ 50%     ‚îÇ 97.5%   ‚îÇ Avg     ‚îÇ Stdev   ‚îÇ Min     ‚îÇ\r\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\r\n‚îÇ Req/Sec   ‚îÇ 1160    ‚îÇ 1160    ‚îÇ 2000    ‚îÇ 2287    ‚îÇ 1984.57 ‚îÇ 219.1   ‚îÇ 1160    ‚îÇ\r\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\r\n‚îÇ Bytes/Sec ‚îÇ 22.7 MB ‚îÇ 22.7 MB ‚îÇ 39.1 MB ‚îÇ 44.7 MB ‚îÇ 38.8 MB ‚îÇ 4.28 MB ‚îÇ 22.7 MB ‚îÇ\r\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\r\n\r\nReq/Bytes counts sampled once per second.\r\n# of samples: 30\r\n\r\n61k requests in 30.17s, 1.16 GB read\r\n```\r\n\r\nOr something similar to docker stats (i'm not using docker though)\r\n- https://docs.docker.com/engine/reference/commandline/stats/#examples","comments_url":"https://lobste.rs/s/8d5wts/cli_tools_for_capturing_cpu_memory","submitter_user":{"username":"cliffordfajardo","created_at":"2020-12-23T17:40:47.000-06:00","is_admin":false,"about":"Software Engineer at LinkedIn. \r\nInterests: Open Source Research \u0026 Software, Developer tooling, BASBüß†, Education, Communities","is_moderator":false,"karma":38,"avatar_url":"/avatars/cliffordfajardo-100.png","invited_by_user":"chriskrycho","github_username":"cliffordfajardo","twitter_username":"cliffordfajard0"},"tags":["ask","performance"]},{"short_id":"cp5z0f","short_id_url":"https://lobste.rs/s/cp5z0f","created_at":"2022-07-11T14:11:03.000-05:00","title":"How \"let it fail\" leads to simpler code","url":"https://yiming.dev/blog/2022/07/10/how-let-it-fail-leads-to-simpler-code/","score":16,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cp5z0f/how_let_it_fail_leads_simpler_code","submitter_user":{"username":"tbonesteaks","created_at":"2019-09-24T11:30:46.000-05:00","is_admin":false,"about":"Feel free to email at: tbonesteaks at protonmail.com","is_moderator":false,"karma":1240,"avatar_url":"/avatars/tbonesteaks-100.png","invited_by_user":"wink"},"tags":["elixir","erlang"]},{"short_id":"m63bjj","short_id_url":"https://lobste.rs/s/m63bjj","created_at":"2022-07-11T12:39:17.000-05:00","title":"Screencast: Message Persistence and Streaming with NATS JetStream","url":"https://rethink.synadia.com/episodes/2/","score":6,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/m63bjj/screencast_message_persistence","submitter_user":{"username":"codegangsta","created_at":"2014-01-24T15:40:07.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":12,"avatar_url":"/avatars/codegangsta-100.png","invited_by_user":"bemurphy"},"tags":["distributed","go"]},{"short_id":"8r9has","short_id_url":"https://lobste.rs/s/8r9has","created_at":"2022-07-11T11:57:46.000-05:00","title":"(Non) Static Data Members Initialization, from C++11 till C++20","url":"https://www.cppstories.com/2015/02/non-static-data-members-initialization/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8r9has/non_static_data_members_initialization","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":16664,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"ecuzvc","short_id_url":"https://lobste.rs/s/ecuzvc","created_at":"2022-07-11T11:40:57.000-05:00","title":"Toward Hybrid Post-Quantum Signatures","url":"https://scottarc.blog/2022/07/11/toward-hybrid-post-quantum-signatures/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ecuzvc/toward_hybrid_post_quantum_signatures","submitter_user":{"username":"sarciszewski","created_at":"2017-03-15T16:19:59.000-05:00","is_admin":false,"about":"Possibly the biggest cryptography nerd of the PHP community. [Blog posts](https://paragonie.com/blog/author/scott-arciszewski).","is_moderator":false,"karma":261,"avatar_url":"/avatars/sarciszewski-100.png","invited_by_user":"tptacek","github_username":"paragonie-scott","twitter_username":"CiPHPerCoder"},"tags":["cryptography"]}]