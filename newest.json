[{"short_id":"8gtm4y","short_id_url":"https://lobste.rs/s/8gtm4y","created_at":"2022-08-02T14:58:30.000-05:00","title":"Microsoft unveils sneak peak at Windows 12","url":"https://lunduke.substack.com/p/microsoft-unveils-sneak-peak-at-windows","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8gtm4y/microsoft_unveils_sneak_peak_at_windows","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":17075,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["linux","satire"]},{"short_id":"zi5bmc","short_id_url":"https://lobste.rs/s/zi5bmc","created_at":"2022-08-02T14:49:12.000-05:00","title":"Crustaceans, what is the best quality Mac laptop?","url":"","score":5,"flags":0,"comment_count":14,"description":"\u003cp\u003eHi all,\u003c/p\u003e\n\u003cp\u003eI feel that people don‚Äôt recognize quality any-more, they associate it with price. This is what leads to people buying and recommending these trash ear-buds which is way overpriced for what they are and advertised by every other Youtuber. (the brand starting with ‚Äúray‚Äù and finishing with ‚Äúcon‚Äù)\u003c/p\u003e\n\u003cp\u003eThis is why I‚Äôm asking you crustaceans, you‚Äôre the only ones I can trust. (This is why I love this community :) )\u003c/p\u003e\n\u003cp\u003eI‚Äôm not a MacOS nor Apple-hardware person. I‚Äôve never used any. But my partner does, and I think it‚Äôs perfect for her. (I lock her account down, and make sure everything is installed through \u003ccode\u003ebrew\u003c/code\u003e/\u003ccode\u003ecask\u003c/code\u003e, like I do on my daily driver with \u003ccode\u003ednf\u003c/code\u003e)\u003c/p\u003e\n\u003cp\u003eBut I‚Äôve heard from Apple lovers that the quality went down. 5 years ago, I was recommended by someone which judgement I trust ‚Äújust buy a Macbook Air, it‚Äôs the last one still made in aluminium, and not overheating.‚Äù (The macbook pro had heating problems at that time)\u003c/p\u003e\n\u003cp\u003eBut what was true 5 years ago may not hold anymore. What‚Äôs the current state of affairs in the Apple world? Crustaceans, what would you recommend?\u003c/p\u003e\n","description_plain":"Hi all,\r\n\r\nI feel that people don't recognize quality any-more, they associate it with price. This is what leads to people buying and recommending these trash ear-buds which is way overpriced for what they are and advertised by every other Youtuber. (the brand starting with \"ray\" and finishing with \"con\")\r\n\r\nThis is why I'm asking you crustaceans, you're the only ones I can trust. (This is why I love this community :) )\r\n\r\nI'm not a MacOS nor Apple-hardware person. I've never used any. But my partner does, and I think it's perfect for her. (I lock her account down, and make sure everything is installed through `brew`/`cask`, like I do on my daily driver with `dnf`)\r\n\r\nBut I've heard from Apple lovers that the quality went down. 5 years ago, I was recommended by someone which judgement I trust \"just buy a Macbook Air, it's the last one still made in aluminium, and not overheating.\" (The macbook pro had heating problems at that time)\r\n\r\nBut what was true 5 years ago may not hold anymore. What's the current state of affairs in the Apple world? Crustaceans, what would you recommend?","comments_url":"https://lobste.rs/s/zi5bmc/crustaceans_what_is_best_quality_mac","submitter_user":{"username":"acatton","created_at":"2015-02-13T18:54:10.000-06:00","is_admin":false,"about":"I'm just a software engineer who likes his job.\r\n\r\nI'm currently a Site Reliability Engineer at Google, Inc.\r\n\r\n**Opinions are my own, and NOT the views of my current or past employers**","is_moderator":false,"karma":1603,"avatar_url":"/avatars/acatton-100.png","invited_by_user":"csantosb","github_username":"acatton"},"tags":["ask","mac"]},{"short_id":"50boy4","short_id_url":"https://lobste.rs/s/50boy4","created_at":"2022-08-02T14:03:08.000-05:00","title":"Announcing Docusaurus 2.0","url":"https://docusaurus.io/blog/2022/08/01/announcing-docusaurus-2.0","score":0,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/50boy4/announcing_docusaurus_2_0","submitter_user":{"username":"mmazzarolo","created_at":"2021-08-13T05:26:19.000-05:00","is_admin":false,"about":"https://mmazzarolo.com/","is_moderator":false,"karma":136,"avatar_url":"/avatars/mmazzarolo-100.png","invited_by_user":"nerosnm"},"tags":["practices","release"]},{"short_id":"ciryc1","short_id_url":"https://lobste.rs/s/ciryc1","created_at":"2022-08-02T13:07:30.000-05:00","title":"Go 1.19 Released","url":"https://go.dev/doc/go1.19","score":17,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ciryc1/go_1_19_released","submitter_user":{"username":"mperham","created_at":"2015-11-16T14:45:04.000-06:00","is_admin":false,"about":"Open source developer and entrepreneur, creator of Sidekiq and Faktory","is_moderator":false,"karma":1792,"avatar_url":"/avatars/mperham-100.png","invited_by_user":"benlovell","github_username":"mperham"},"tags":["go"]},{"short_id":"no1kg7","short_id_url":"https://lobste.rs/s/no1kg7","created_at":"2022-08-02T12:27:50.000-05:00","title":"flecs: A fast entity component system (ECS) for C \u0026 C++","url":"https://github.com/SanderMertens/flecs","score":6,"flags":0,"comment_count":0,"description":"\u003cp\u003eRelated: \u003ca href=\"https://github.com/SanderMertens/ecs-faq\" rel=\"ugc\"\u003eEntity Conponent Systems FAQ\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eRelease announcement: \u003ca href=\"https://ajmmertens.medium.com/flecs-3-0-is-out-5ca1ac92e8a4\" rel=\"ugc\"\u003eFlecs 3.0 is out!\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Related: [Entity Conponent Systems FAQ](https://github.com/SanderMertens/ecs-faq)\r\n\r\nRelease announcement: [Flecs 3.0 is out!](https://ajmmertens.medium.com/flecs-3-0-is-out-5ca1ac92e8a4)","comments_url":"https://lobste.rs/s/no1kg7/flecs_fast_entity_component_system_ecs","submitter_user":{"username":"technetium","created_at":"2020-02-06T19:52:39.000-06:00","is_admin":false,"about":"A sentient lump of a certain high-density material.","is_moderator":false,"karma":4436,"avatar_url":"/avatars/technetium-100.png","invited_by_user":"ngoldbaum"},"tags":["c","c++","games"]},{"short_id":"g4ku0m","short_id_url":"https://lobste.rs/s/g4ku0m","created_at":"2022-08-02T11:53:00.000-05:00","title":"Search less, browse more","url":"https://buttondown.email/hillelwayne/archive/search-less-browse-more-7595/","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g4ku0m/search_less_browse_more","submitter_user":{"username":"telemachus","created_at":"2012-08-10T12:36:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":950,"avatar_url":"/avatars/telemachus-100.png","invited_by_user":"jcs"},"tags":["practices","programming"]},{"short_id":"yrqg2t","short_id_url":"https://lobste.rs/s/yrqg2t","created_at":"2022-08-02T11:04:06.000-05:00","title":"t√§k≈ç: A Polymorphic Cache Hierarchy for General-Purpose Optimization of Data Movement","url":"https://www.cs.cmu.edu/~beckmann/publications/papers/2022.isca.tako.pdf","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yrqg2t/tako_polymorphic_cache_hierarchy_for","submitter_user":{"username":"aidancully","created_at":"2022-07-21T01:48:32.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":4,"avatar_url":"/avatars/aidancully-100.png","invited_by_user":"HeinrichHartmann"},"tags":["hardware","pdf","performance","virtualization"]},{"short_id":"xz56ig","short_id_url":"https://lobste.rs/s/xz56ig","created_at":"2022-08-02T10:09:21.000-05:00","title":"Experimental ClojureScript to ES6 module compiler","url":"https://github.com/borkdude/cherry","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xz56ig/experimental_clojurescript_es6_module","submitter_user":{"username":"Yogthos","created_at":"2017-05-26T15:31:12.000-05:00","is_admin":false,"about":"A sentience trapped in a prison of meat.\r\nhttp://yogthos.net/","is_moderator":false,"karma":8199,"avatar_url":"/avatars/Yogthos-100.png","invited_by_user":"gered"},"tags":["clojure","javascript"]},{"short_id":"x1g8oo","short_id_url":"https://lobste.rs/s/x1g8oo","created_at":"2022-08-02T09:44:38.000-05:00","title":"C xor C++: Situations where the same code has different meaning in C and C++","url":"https://docs.google.com/document/d/16B36r0HksR0LqQAGLA1syYCtZvYaVC0hEF2D00ZAd0o/view","score":11,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/x1g8oo/c_xor_c_situations_where_same_code_has","submitter_user":{"username":"jmillikin","created_at":"2021-07-22T09:39:26.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":155,"avatar_url":"/avatars/jmillikin-100.png","invited_by_user":"pushcx"},"tags":["c","c++"]},{"short_id":"oefn8h","short_id_url":"https://lobste.rs/s/oefn8h","created_at":"2022-08-02T08:14:10.000-05:00","title":"Rust linux kernel development","url":"https://www.jackos.io/rust-kernel/rust-for-linux.html","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oefn8h/rust_linux_kernel_development","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":17075,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["linux","rust"]},{"short_id":"g3r08q","short_id_url":"https://lobste.rs/s/g3r08q","created_at":"2022-08-02T07:33:05.000-05:00","title":"Interneting Is Hard","url":"https://www.internetingishard.com","score":19,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g3r08q/interneting_is_hard","submitter_user":{"username":"telemachus","created_at":"2012-08-10T12:36:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":950,"avatar_url":"/avatars/telemachus-100.png","invited_by_user":"jcs"},"tags":["programming","web"]},{"short_id":"p8gpkn","short_id_url":"https://lobste.rs/s/p8gpkn","created_at":"2022-08-02T02:40:51.000-05:00","title":"The tools I use to build my website","url":"https://benhoyt.com/writings/tools-i-use-to-build-my-website/","score":18,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p8gpkn/tools_i_use_build_my_website","submitter_user":{"username":"benhoyt","created_at":"2020-05-20T17:24:04.000-05:00","is_admin":false,"about":"Software engineer at Canonical. See my website at [BenHoyt.com](https://benhoyt.com/).","is_moderator":false,"karma":1239,"avatar_url":"/avatars/benhoyt-100.png","invited_by_user":"mvdan"},"tags":["web"]},{"short_id":"o6ejcd","short_id_url":"https://lobste.rs/s/o6ejcd","created_at":"2022-08-01T23:35:18.000-05:00","title":"Interpolating Polygons","url":"http://lambdafunk.com/2017-02-21-Interpolating-Polygons/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o6ejcd/interpolating_polygons","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":37947,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["graphics"]},{"short_id":"zqtrru","short_id_url":"https://lobste.rs/s/zqtrru","created_at":"2022-08-01T21:43:06.000-05:00","title":"Generic Recursion Applied to Algebraic Graphs","url":"https://aneksteind.github.io/posts/2022-07-31.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zqtrru/generic_recursion_applied_algebraic","submitter_user":{"username":"pao","created_at":"2020-07-05T19:33:28.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":50,"avatar_url":"/avatars/pao-100.png","invited_by_user":"kline"},"tags":["compsci","haskell","rust"]},{"short_id":"qdtqi2","short_id_url":"https://lobste.rs/s/qdtqi2","created_at":"2022-08-01T18:18:03.000-05:00","title":"Automatic memory management with short pauses that is simple to implement?","url":"","score":5,"flags":0,"comment_count":16,"description":"\u003cp\u003eI‚Äôm looking for recommendations for an automatic memory management scheme for a programming language. It must be portable, concurrent, and have short pause times. Simpler implementation is more important than good performance. Reference-counting and/or tracing garbage collection are both under consideration (I‚Äôm open to other suggestions too). The programmer should not have to think about memory management much, if at all (so, if reference-counting is used, the implementation should also detect reference cycles).\u003c/p\u003e\n\u003cp\u003eWhen I look at introductory literature, I see simple schemes with long pause times. When I look at popular programming language implementations, I see schemes that are performant at the cost of a complex implementation. But what I want is a simpler implementation, and I am willing to accept poor performance (except for my concern about pause times). By simpler to implement I mean fewer lines of code; if a library for garbage collection, the LOC in that library counts too. This is all all relative; it is understood that the simplest implementation with short pause times may still be pretty complex, and also in addition I will accept a little implementation complexity in exchange for a lot of performance. The criteria are:\u003c/p\u003e\n\u003cp\u003eportable, concurrent, short pause times \u0026gt; simple implementation \u0026gt; low memory usage \u0026gt; fast\u003c/p\u003e\n\u003cp\u003eI‚Äôm on the fence about compaction. I do want the user to be able to run programs for a long time without running out of memory. But compaction makes interop more complex. Various contemporary language implementations, such as Golang (Go) and Python have non-compacting GC and I don‚Äôt hear complaints about people‚Äôs programs crashing due to memory fragmentation. Is fragmentation only a theoretical issue that doesn‚Äôt come up in practice ‚Äì or, do those implementations  do something complicated to avoid fragmentation?\u003c/p\u003e\n\u003cp\u003eThis will be a high-level programming language with a runtime. The runtime will know where pointers are and could do things like box values and store GC metadata there, have write barriers and/or read barriers, reference count, etc.\u003c/p\u003e\n\u003cp\u003eWhy not a vanilla mark-sweep collector? That can have long pause times.\u003c/p\u003e\n\u003cp\u003eWhy not the Boehm-Demers-Weiser conservative garbage collector ( \u003ca href=\"https://www.hboehm.info/gc/\" rel=\"ugc\"\u003ehttps://www.hboehm.info/gc/\u003c/a\u003e )? (a) it is not portable; the docs say ‚ÄúOur collector is not, and cannot be, implemented as completely portable C code.‚Äù In concurrent, incremental mode it appears to be even less portable.\n(b) It has many lines of code.\n(c) Because our runtime will know where pointers are, we do not need a conservative collector.\u003c/p\u003e\n\u003cp\u003eWhat do you recommend? Thanks in advance.\u003c/p\u003e\n","description_plain":"I'm looking for recommendations for an automatic memory management scheme for a programming language. It must be portable, concurrent, and have short pause times. Simpler implementation is more important than good performance. Reference-counting and/or tracing garbage collection are both under consideration (I'm open to other suggestions too). The programmer should not have to think about memory management much, if at all (so, if reference-counting is used, the implementation should also detect reference cycles).\r\n\r\nWhen I look at introductory literature, I see simple schemes with long pause times. When I look at popular programming language implementations, I see schemes that are performant at the cost of a complex implementation. But what I want is a simpler implementation, and I am willing to accept poor performance (except for my concern about pause times). By simpler to implement I mean fewer lines of code; if a library for garbage collection, the LOC in that library counts too. This is all all relative; it is understood that the simplest implementation with short pause times may still be pretty complex, and also in addition I will accept a little implementation complexity in exchange for a lot of performance. The criteria are:\r\n\r\n  portable, concurrent, short pause times \u003e simple implementation \u003e low memory usage \u003e fast\r\n\r\nI'm on the fence about compaction. I do want the user to be able to run programs for a long time without running out of memory. But compaction makes interop more complex. Various contemporary language implementations, such as Golang (Go) and Python have non-compacting GC and I don't hear complaints about people's programs crashing due to memory fragmentation. Is fragmentation only a theoretical issue that doesn't come up in practice -- or, do those implementations  do something complicated to avoid fragmentation?\r\n\r\nThis will be a high-level programming language with a runtime. The runtime will know where pointers are and could do things like box values and store GC metadata there, have write barriers and/or read barriers, reference count, etc.\r\n\r\nWhy not a vanilla mark-sweep collector? That can have long pause times.\r\n\r\nWhy not the Boehm-Demers-Weiser conservative garbage collector ( https://www.hboehm.info/gc/ )? (a) it is not portable; the docs say \"Our collector is not, and cannot be, implemented as completely portable C code.\" In concurrent, incremental mode it appears to be even less portable.\r\n(b) It has many lines of code.\r\n(c) Because our runtime will know where pointers are, we do not need a conservative collector.\r\n\r\nWhat do you recommend? Thanks in advance.","comments_url":"https://lobste.rs/s/qdtqi2/automatic_memory_management_with_short","submitter_user":{"username":"bshanks","created_at":"2014-02-20T01:10:50.000-06:00","is_admin":false,"about":"Please see http://bayleshanks.com","is_moderator":false,"karma":431,"avatar_url":"/avatars/bshanks-100.png","invited_by_user":"MasonJar"},"tags":["ask","compilers","plt"]},{"short_id":"k6xdav","short_id_url":"https://lobste.rs/s/k6xdav","created_at":"2022-08-01T16:22:58.000-05:00","title":"Building websites using Nix Flakes and Zola","url":"https://ilanjoselevich.com/blog/building-websites-using-nix-flakes-and-zola/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/k6xdav/building_websites_using_nix_flakes_zola","submitter_user":{"username":"srid","created_at":"2019-12-15T08:34:41.000-06:00","is_admin":false,"about":"My latest project: https://github.com/srid/emanote","is_moderator":false,"karma":2537,"avatar_url":"/avatars/srid-100.png","invited_by_user":"Bowero","github_username":"srid","keybase_signatures":[{"kb_username":"srid","sig_hash":"e6701544d15d41cd50cf0b336aa711802c34f53d1df4356ae74f47b9aec5c6700f"}]},"tags":["nix"]},{"short_id":"bi3lur","short_id_url":"https://lobste.rs/s/bi3lur","created_at":"2022-08-01T16:01:42.000-05:00","title":"make python devex: Towards Clone to Red-Green-Refactor in One Command with a 45+-Year-Old Tool","url":"https://youtu.be/WTsiO3brQwE","score":3,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bi3lur/make_python_devex_towards_clone_red_green","submitter_user":{"username":"colindean","created_at":"2014-04-17T22:35:48.000-05:00","is_admin":false,"about":"Scholar. Bon vivant. Champion of the oppressed.","is_moderator":false,"karma":2958,"avatar_url":"/avatars/colindean-100.png","invited_by_user":"bruceadams","github_username":"colindean","twitter_username":"colindean"},"tags":["python","video"]},{"short_id":"63q4hz","short_id_url":"https://lobste.rs/s/63q4hz","created_at":"2022-08-01T14:44:45.000-05:00","title":"in which the word column has several meanings, none of them architectural","url":"https://technomancy.us/198","score":15,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/63q4hz/which_word_column_has_several_meanings","submitter_user":{"username":"robey","created_at":"2013-12-19T22:12:04.000-06:00","is_admin":false,"about":"Hi, I'm Robey. Generally interested in crypto, programming languages, and distributed systems.\r\n\r\n- fediverse: @robey@mastodon.technology\r\n","is_moderator":false,"karma":1516,"avatar_url":"/avatars/robey-100.png","invited_by_user":"seldo","github_username":"robey"},"tags":["a11y","programming"]},{"short_id":"606cll","short_id_url":"https://lobste.rs/s/606cll","created_at":"2022-08-01T14:15:14.000-05:00","title":"The Pine Formula","url":"https://tuxphones.com/pine-formula/","score":24,"flags":0,"comment_count":16,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/606cll/pine_formula","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":17075,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["hardware","linux"]},{"short_id":"ljdnnd","short_id_url":"https://lobste.rs/s/ljdnnd","created_at":"2022-08-01T14:13:59.000-05:00","title":"Wi-Fine: it is fine to use public Wi-Fi","url":"https://wifine.gitlab.io/","score":68,"flags":0,"comment_count":28,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ljdnnd/wi_fine_it_is_fine_use_public_wi_fi","submitter_user":{"username":"eloy","created_at":"2019-01-19T09:19:51.000-06:00","is_admin":false,"about":"https://eloydegen.com","is_moderator":false,"karma":925,"avatar_url":"/avatars/eloy-100.png","invited_by_user":"timvisee"},"tags":["security"]},{"short_id":"ke7owo","short_id_url":"https://lobste.rs/s/ke7owo","created_at":"2022-08-01T13:32:14.000-05:00","title":"Mental Health Treatment is an Obstacle Course","url":"https://blog.eldrid.ge/2022/07/15/mental-health-treatment-obstacle-course/","score":-2,"flags":3,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ke7owo/mental_health_treatment_is_obstacle","submitter_user":{"username":"eldridgea","created_at":"2017-06-07T16:48:15.000-05:00","is_admin":false,"about":"I'm do information security. I'm a magician, web designer, musician, nerd, technologist, videographer, blogger, and avid sweet tea drinker.","is_moderator":false,"karma":180,"avatar_url":"/avatars/eldridgea-100.png","invited_by_user":"james","github_username":"eldridgea","twitter_username":"magiceldridge"},"tags":["culture"]},{"short_id":"pckldh","short_id_url":"https://lobste.rs/s/pckldh","created_at":"2022-08-01T13:08:22.000-05:00","title":"The best way to find performance bottlenecks: observing production","url":"https://pythonspeed.com/articles/measure-performance-production/","score":8,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pckldh/best_way_find_performance_bottlenecks","submitter_user":{"username":"itamarst","created_at":"2016-04-28T10:05:47.000-05:00","is_admin":false,"about":"Writing about Python performance and faster development at https://pythonspeed.com, as well as offering consulting services. Writing about work/life balance and other software engineering skills at https://codewithoutrules.com.\r\n","is_moderator":false,"karma":4531,"avatar_url":"/avatars/itamarst-100.png","invited_by_user":"0x2ba22e11"},"tags":["performance"]},{"short_id":"zqgkrg","short_id_url":"https://lobste.rs/s/zqgkrg","created_at":"2022-08-01T12:44:40.000-05:00","title":"The Slotted Counter Pattern","url":"https://planetscale.com/blog/the-slotted-counter-pattern","score":16,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zqgkrg/slotted_counter_pattern","submitter_user":{"username":"samlambert","created_at":"2022-06-27T20:43:32.000-05:00","is_admin":false,"about":"CEO @ PlanetScale","is_moderator":false,"karma":15,"avatar_url":"/avatars/samlambert-100.png","invited_by_user":"epberry"},"tags":["databases","distributed","web"]},{"short_id":"exqimq","short_id_url":"https://lobste.rs/s/exqimq","created_at":"2022-08-01T11:47:02.000-05:00","title":"Crimes with Python's Pattern Matching","url":"https://www.hillelwayne.com/post/python-abc/","score":71,"flags":0,"comment_count":21,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/exqimq/crimes_with_python_s_pattern_matching","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":23221,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne","twitter_username":"Hillelogram"},"tags":["python"]},{"short_id":"pjtihz","short_id_url":"https://lobste.rs/s/pjtihz","created_at":"2022-08-01T11:17:27.000-05:00","title":"google/go-flow-levee","url":"https://github.com/google/go-flow-levee","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pjtihz/google_go_flow_levee","submitter_user":{"username":"wizardishungry","created_at":"2018-08-13T10:39:55.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":977,"avatar_url":"/avatars/wizardishungry-100.png","invited_by_user":"kusuriya","github_username":"WIZARDISHUNGRY","twitter_username":"WIZARDISHUNGRY","keybase_signatures":[{"kb_username":"wizardishungry","sig_hash":"c5e8c0f01d3e047b18f748ada5a8201b2cce3bf5bb2477ec7d404b1c99a5d94b0f"}]},"tags":["go","programming","security"]}]