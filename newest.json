[{"short_id":"8ljooi","short_id_url":"https://lobste.rs/s/8ljooi","created_at":"2024-11-17T23:45:30.000-06:00","title":"NAT is inevitable even with IPv6","url":"https://utcc.utoronto.ca/~cks/space/blog/tech/IPv6AndStillHavingNAT","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8ljooi/nat_is_inevitable_even_with_ipv6","submitter_user":"Vaelatern","user_is_author":false,"tags":["networking"]},{"short_id":"ywo4bd","short_id_url":"https://lobste.rs/s/ywo4bd","created_at":"2024-11-17T23:11:44.000-06:00","title":"ChatGPT is Slipping","url":"https://adriano.fyi/posts/chatgpt-is-slipping/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ywo4bd/chatgpt_is_slipping","submitter_user":"carlana","user_is_author":false,"tags":["ai"]},{"short_id":"elcjqa","short_id_url":"https://lobste.rs/s/elcjqa","created_at":"2024-11-17T21:23:05.000-06:00","title":"The missing text focused programming environment","url":"https://utcc.utoronto.ca/~cks/space/blog/programming/MissingTextProgrammingEnvironment","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/elcjqa/missing_text_focused_programming","submitter_user":"carlana","user_is_author":false,"tags":["editors","emacs","programming"]},{"short_id":"iqjj2g","short_id_url":"https://lobste.rs/s/iqjj2g","created_at":"2024-11-17T19:14:34.000-06:00","title":"Traceroute isn't real","url":"https://gekk.info/articles/traceroute.htm","score":19,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iqjj2g/traceroute_isn_t_real","submitter_user":"classichasclass","user_is_author":false,"tags":["networking"]},{"short_id":"7gicgp","short_id_url":"https://lobste.rs/s/7gicgp","created_at":"2024-11-17T17:19:02.000-06:00","title":"Styling Graphviz with CSS","url":"https://noncombatant.org/2024/11/16/styling-graphviz-with-css/index.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7gicgp/styling_graphviz_with_css","submitter_user":"fanf","user_is_author":false,"tags":["web"]},{"short_id":"5zaqqz","short_id_url":"https://lobste.rs/s/5zaqqz","created_at":"2024-11-17T16:40:23.000-06:00","title":"Reverse Engineering iOS 18 Inactivity Reboot","url":"https://naehrdine.blogspot.com/2024/11/reverse-engineering-ios-18-inactivity.html","score":12,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5zaqqz/reverse_engineering_ios_18_inactivity","submitter_user":"calvin","user_is_author":false,"tags":["ios","reversing","security"]},{"short_id":"yihdph","short_id_url":"https://lobste.rs/s/yihdph","created_at":"2024-11-17T16:07:27.000-06:00","title":"Story-time: C++, bounds checking, performance, and compilers","url":"https://chandlerc.blog/posts/2024/11/story-time-bounds-checking/","score":14,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yihdph/story_time_c_bounds_checking_performance","submitter_user":"calvin","user_is_author":false,"tags":["c++"]},{"short_id":"ui3ld4","short_id_url":"https://lobste.rs/s/ui3ld4","created_at":"2024-11-17T12:56:48.000-06:00","title":"Mirror: An LLM-powered programming-by-example programming language","url":"https://austinhenley.com/blog/mirrorlang.html","score":12,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ui3ld4/mirror_llm_powered_programming_by","submitter_user":"azhenley","user_is_author":true,"tags":["ai","plt"]},{"short_id":"6bjmd3","short_id_url":"https://lobste.rs/s/6bjmd3","created_at":"2024-11-17T12:42:07.000-06:00","title":"ML in Go with a Python sidecar","url":"https://eli.thegreenplace.net/2024/ml-in-go-with-a-python-sidecar/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6bjmd3/ml_go_with_python_sidecar","submitter_user":"eduard","user_is_author":false,"tags":["ai","go"]},{"short_id":"nx7pgd","short_id_url":"https://lobste.rs/s/nx7pgd","created_at":"2024-11-17T10:53:00.000-06:00","title":"Hyper-encryption [Provably unbreakable hyper-encryption in the limited access model]","url":"https://en.wikipedia.org/wiki/Hyper-encryption","score":0,"flags":2,"comment_count":3,"description":"\u003cp\u003eAuthor: Michael O Rabin\u003c/p\u003e\n\u003cp\u003eAbstract:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEncryption is a fundamental building block for computer and communications technologies. Existing encryption methods depend for their security on unproven assumptions. We propose a new model, the limited access model for enabling a simple and practical provably unbreakable encryption scheme. A voluntary network of tens of thousands of computers each maintain and update random pages, and act as page server nodes. A sender and receiver share a random key K. They use K to randomly select the same PSNs and download the same random pages. These are employed in groups of say 30 pages to extract one time pads common to S and R. Under reasonable assumptions of an adversary’s inability to monitor all PSNs, and easy ways for S and R to evade monitoring while downloading pages, hyper encryption is clearly unbreakable. […]\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"Author: Michael O Rabin\r\n\r\nAbstract:\r\n\u003e Encryption is a fundamental building block for computer and communications technologies. Existing encryption methods depend for their security on unproven assumptions. We propose a new model, the limited access model for enabling a simple and practical provably unbreakable encryption scheme. A voluntary network of tens of thousands of computers each maintain and update random pages, and act as page server nodes. A sender and receiver share a random key K. They use K to randomly select the same PSNs and download the same random pages. These are employed in groups of say 30 pages to extract one time pads common to S and R. Under reasonable assumptions of an adversary's inability to monitor all PSNs, and easy ways for S and R to evade monitoring while downloading pages, hyper encryption is clearly unbreakable. [...]","comments_url":"https://lobste.rs/s/nx7pgd/hyper_encryption_provably_unbreakable","submitter_user":"ciprian_craciun","user_is_author":false,"tags":["cryptography"]},{"short_id":"bfopp5","short_id_url":"https://lobste.rs/s/bfopp5","created_at":"2024-11-17T07:16:39.000-06:00","title":"Losing NFS locks and the SunOS SIGLOST signal","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/NFSLosingLocksAndSIGLOST","score":5,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bfopp5/losing_nfs_locks_sunos_siglost_signal","submitter_user":"jmillikin","user_is_author":false,"tags":["illumos","networking"]},{"short_id":"fki86o","short_id_url":"https://lobste.rs/s/fki86o","created_at":"2024-11-17T06:02:11.000-06:00","title":"CPython's Garbage Collector and its Impact on Application Performance","url":"https://blog.codingconfessions.com/p/connecting-cpythons-gc-internals","score":6,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fki86o/cpython_s_garbage_collector_its_impact_on","submitter_user":"abhi9u","user_is_author":true,"tags":["compilers","performance","python"]},{"short_id":"xfniz2","short_id_url":"https://lobste.rs/s/xfniz2","created_at":"2024-11-17T02:43:39.000-06:00","title":"Making healthy healthchecks","url":"https://lorentz.app/blog-item.html?id=healthy-health-checks","score":13,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xfniz2/making_healthy_healthchecks","submitter_user":"bitfield","user_is_author":false,"tags":["distributed","practices"]},{"short_id":"ptrr1a","short_id_url":"https://lobste.rs/s/ptrr1a","created_at":"2024-11-17T00:31:54.000-06:00","title":"AI Models for Decompiling Assembly Code","url":"https://blog.reveng.ai/training-an-llm-to-decompile-assembly-code/","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ptrr1a/ai_models_for_decompiling_assembly_code","submitter_user":"williballenthin","user_is_author":false,"tags":["ai","reversing"]},{"short_id":"6md8qv","short_id_url":"https://lobste.rs/s/6md8qv","created_at":"2024-11-16T23:36:11.000-06:00","title":"TPM-Backed SSH Keys on Windows 11","url":"https://cedwards.xyz/tpm-backed-ssh-keys-on-windows-11/","score":4,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6md8qv/tpm_backed_ssh_keys_on_windows_11","submitter_user":"raymii","user_is_author":false,"tags":["security"]},{"short_id":"wcjjyy","short_id_url":"https://lobste.rs/s/wcjjyy","created_at":"2024-11-16T22:45:52.000-06:00","title":"Scan on FreeBSD","url":"https://vermaden.wordpress.com/2024/11/17/scan-on-freebsd/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wcjjyy/scan_on_freebsd","submitter_user":"vermaden","user_is_author":true,"tags":["freebsd","hardware"]},{"short_id":"ritin8","short_id_url":"https://lobste.rs/s/ritin8","created_at":"2024-11-16T22:43:08.000-06:00","title":"Going a Little Further","url":"https://edanparker.hashnode.dev/going-a-little-further","score":13,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ritin8/going_little_further","submitter_user":"jaywhy13","user_is_author":false,"tags":["practices"]},{"short_id":"znsaxo","short_id_url":"https://lobste.rs/s/znsaxo","created_at":"2024-11-16T19:41:52.000-06:00","title":"One-parting some Commodore 64 utilities for fun and profit","url":"https://oldvcr.blogspot.com/2024/11/one-parting-some-commodore-64-utilities.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/znsaxo/one_parting_some_commodore_64_utilities","submitter_user":"classichasclass","user_is_author":true,"tags":["retrocomputing","reversing"]},{"short_id":"ttklux","short_id_url":"https://lobste.rs/s/ttklux","created_at":"2024-11-16T18:27:25.000-06:00","title":"shebanger: Convert a shell script into a series of shebang lines","url":"https://github.com/cdepillabout/shebanger","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ttklux/shebanger_convert_shell_script_into","submitter_user":"silby","user_is_author":false,"tags":["programming"]},{"short_id":"l6zetl","short_id_url":"https://lobste.rs/s/l6zetl","created_at":"2024-11-16T17:36:55.000-06:00","title":"VictoriaLogs v1.0.0 release","url":"https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.0.0-victorialogs","score":52,"flags":0,"comment_count":13,"description":"\u003cp\u003eI’m happy to announce that \u003ca href=\"https://docs.victoriametrics.com/victorialogs/\" rel=\"ugc\"\u003eVictoriaLogs\u003c/a\u003e - an open-source database for logs - is ready for production use (I’m the author of this system).\u003c/p\u003e\n\u003cp\u003eIt is designed in the way, which simplifies it’s usage. It consists of a single executable with zero external dependencies.\u003c/p\u003e\n\u003cp\u003eIt works optimally with default configs, e.g. you don’t need to have a PhD in yaml programming in order to configure and operate it.\u003c/p\u003e\n\u003cp\u003eIt accepts logs from all the popular log collectors and protocols, including Syslog and OpenTelemetry - see \u003ca href=\"https://docs.victoriametrics.com/victorialogs/data-ingestion/\" rel=\"ugc\"\u003ethese docs\u003c/a\u003e. So just try it in parallel with your existing system for logs.\u003c/p\u003e\n\u003cp\u003eIt provides interactive command-line tool for querying and analyzing logs - \u003ca href=\"https://docs.victoriametrics.com/victorialogs/querying/vlogscli/\" rel=\"ugc\"\u003evlogscli\u003c/a\u003e. It provides \u003ccode\u003ereadline\u003c/code\u003e-like query history and \u003ccode\u003eless\u003c/code\u003e-based pagination of query results.\u003c/p\u003e\n\u003cp\u003eIt provides easy to use query language with fast full-text search, data extraction/transformation and analytics capabilities - \u003ca href=\"https://docs.victoriametrics.com/victorialogs/logsql/\" rel=\"ugc\"\u003eLogsQL\u003c/a\u003e. For example, \u003ccode\u003e_time:1d | top 5 (kubernetes_container_name)\u003c/code\u003e shows top 5 Kubernetes containers with the biggest number of logs during the last day.\u003c/p\u003e\n\u003cp\u003eIt provides great integration with traditional Unix command-line tools - see \u003ca href=\"https://docs.victoriametrics.com/victorialogs/querying/#command-line\" rel=\"ugc\"\u003ethese docs\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIt usually requires much smaller amounts of disk space and RAM than Elasticsearch and Loki. \u003ca href=\"https://itnext.io/how-do-open-source-solutions-for-logs-work-elasticsearch-loki-and-victorialogs-9f7097ecbc2f\" rel=\"ugc\"\u003eThis article explains why\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIt supports plaintext logs, structured logs and wide events (these are structured logs with hundreds of fields containing big number of unique values - see \u003ca href=\"https://jeremymorrell.dev/blog/a-practitioners-guide-to-wide-events/\" rel=\"ugc\"\u003ethis article\u003c/a\u003e ), without additional configuration and tuning.\u003c/p\u003e\n\u003cp\u003eGive VictoriaLogs a try on your production workloads in parallel with the existing solutions for logs!\u003c/p\u003e\n\u003cp\u003ePlease ask any questions here - I’ll try answering all of them below.\u003c/p\u003e\n","description_plain":"I'm happy to announce that [VictoriaLogs](https://docs.victoriametrics.com/victorialogs/) - an open-source database for logs - is ready for production use (I'm the author of this system).\r\n\r\nIt is designed in the way, which simplifies it's usage. It consists of a single executable with zero external dependencies.\r\n\r\nIt works optimally with default configs, e.g. you don't need to have a PhD in yaml programming in order to configure and operate it.\r\n\r\nIt accepts logs from all the popular log collectors and protocols, including Syslog and OpenTelemetry - see [these docs](https://docs.victoriametrics.com/victorialogs/data-ingestion/). So just try it in parallel with your existing system for logs.\r\n\r\nIt provides interactive command-line tool for querying and analyzing logs - [vlogscli](https://docs.victoriametrics.com/victorialogs/querying/vlogscli/). It provides `readline`-like query history and `less`-based pagination of query results.\r\n\r\nIt provides easy to use query language with fast full-text search, data extraction/transformation and analytics capabilities - [LogsQL](https://docs.victoriametrics.com/victorialogs/logsql/). For example, `_time:1d | top 5 (kubernetes_container_name)` shows top 5 Kubernetes containers with the biggest number of logs during the last day.\r\n\r\nIt provides great integration with traditional Unix command-line tools - see [these docs](https://docs.victoriametrics.com/victorialogs/querying/#command-line).\r\n\r\nIt usually requires much smaller amounts of disk space and RAM than Elasticsearch and Loki. [This article explains why](https://itnext.io/how-do-open-source-solutions-for-logs-work-elasticsearch-loki-and-victorialogs-9f7097ecbc2f).\r\n\r\nIt supports plaintext logs, structured logs and wide events (these are structured logs with hundreds of fields containing big number of unique values - see [this article](https://jeremymorrell.dev/blog/a-practitioners-guide-to-wide-events/) ), without additional configuration and tuning.\r\n\r\nGive VictoriaLogs a try on your production workloads in parallel with the existing solutions for logs!\r\n\r\nPlease ask any questions here - I'll try answering all of them below.","comments_url":"https://lobste.rs/s/l6zetl/victorialogs_v1_0_0_release","submitter_user":"valyala","user_is_author":true,"tags":["devops","release"]},{"short_id":"03pfyt","short_id_url":"https://lobste.rs/s/03pfyt","created_at":"2024-11-16T15:56:56.000-06:00","title":"Any Python program fits in 30 characters*","url":"https://purplesyringa.moe/blog/any-python-program-fits-in-30-characters/","score":32,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/03pfyt/any_python_program_fits_30_characters","submitter_user":"EvanHahn","user_is_author":false,"tags":["python"]},{"short_id":"h13645","short_id_url":"https://lobste.rs/s/h13645","created_at":"2024-11-16T14:55:16.000-06:00","title":"The Secret Behind Valve's Flickering Lights","url":"https://www.alanzucconi.com/2021/06/15/valve-flickering-lights/","score":55,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h13645/secret_behind_valve_s_flickering_lights","submitter_user":"friendlysock","user_is_author":false,"tags":["graphics","historical"]},{"short_id":"1sd1q2","short_id_url":"https://lobste.rs/s/1sd1q2","created_at":"2024-11-16T14:01:22.000-06:00","title":"James Gleick's Chaos: The Software","url":"https://github.com/rudyrucker/chaos/","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1sd1q2/james_gleick_s_chaos_software","submitter_user":"sknebel","user_is_author":false,"tags":["art","historical","math"]},{"short_id":"67f56y","short_id_url":"https://lobste.rs/s/67f56y","created_at":"2024-11-16T11:01:33.000-06:00","title":"Protecting Signal Keys on Desktop","url":"https://cryptographycaffe.sandboxaq.com/posts/protecting-signal-desktop-keys/","score":14,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/67f56y/protecting_signal_keys_on_desktop","submitter_user":"emschwartz","user_is_author":false,"tags":["cryptography","hardware","privacy"]},{"short_id":"ia3zp4","short_id_url":"https://lobste.rs/s/ia3zp4","created_at":"2024-11-16T10:40:41.000-06:00","title":"Buggy code is biased code","url":"https://www.johndcook.com/blog/2010/10/19/buggy-simulation-code-is-biased/","score":13,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ia3zp4/buggy_code_is_biased_code","submitter_user":"spookylukey","user_is_author":false,"tags":["programming"]}]