[{"short_id":"g0vadn","short_id_url":"https://lobste.rs/s/g0vadn","created_at":"2023-04-05T09:48:00.000-05:00","title":"Single-Command Server Bootstrapping","url":"https://galowicz.de/2023/04/05/single-command-server-bootstrap/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eWhen you spin up a new VM or bare metal server at some cloud provider, what is the fastest and easiest way to get the server to run a certain configuration? In this article, the author shows how to do the partitioning, formatting, and installing of a fully configured NixOS, starting from a random rescue system, in 5 minutes and with literally a single command: nixos-anywhere.\u003c/p\u003e\n","description_plain":"When you spin up a new VM or bare metal server at some cloud provider, what is the fastest and easiest way to get the server to run a certain configuration? In this article, the author shows how to do the partitioning, formatting, and installing of a fully configured NixOS, starting from a random rescue system, in 5 minutes and with literally a single command: nixos-anywhere.","comments_url":"https://lobste.rs/s/g0vadn/single_command_server_bootstrapping","submitter_user":{"username":"marijan","created_at":"2022-12-16T09:54:58.000-06:00","is_admin":false,"about":"Consultant for Software Engineering and DevOps","is_moderator":false,"karma":0,"avatar_url":"/avatars/marijan-100.png","invited_by_user":"toastal","github_username":"marijanp","twitter_username":"marijanpe"},"tags":["devops","education","linux","nix"]},{"short_id":"lkra32","short_id_url":"https://lobste.rs/s/lkra32","created_at":"2023-04-05T09:31:38.000-05:00","title":"Goru: an experimental, Go-inspired concurrency library for Ruby","url":"https://github.com/bryanp/goru","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lkra32/goru_experimental_go_inspired","submitter_user":{"username":"bryanp","created_at":"2015-02-15T14:26:44.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":10,"avatar_url":"/avatars/bryanp-100.png","invited_by_user":"craigkerstiens"},"tags":["ruby"]},{"short_id":"kzgqkb","short_id_url":"https://lobste.rs/s/kzgqkb","created_at":"2023-04-05T09:21:08.000-05:00","title":"DNND 1: a Deep Neural Network Dive","url":"https://maxliani.wordpress.com/2023/03/17/dnnd-1-a-deep-neural-network-dive/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kzgqkb/dnnd_1_deep_neural_network_dive","submitter_user":{"username":"tgfrerer","created_at":"2020-07-29T05:36:54.000-05:00","is_admin":false,"about":"graphics, mostly.","is_moderator":false,"karma":89,"avatar_url":"/avatars/tgfrerer-100.png","invited_by_user":"355E3B","github_username":"tgfrerer","twitter_username":"tgfrerer"},"tags":["ai","c++","graphics"]},{"short_id":"wiv3yp","short_id_url":"https://lobste.rs/s/wiv3yp","created_at":"2023-04-05T08:46:25.000-05:00","title":"MLOps is Mostly Data Engineering","url":"https://www.cpard.xyz/posts/MLOps_is_Mostly_Data_Engineering/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wiv3yp/mlops_is_mostly_data_engineering","submitter_user":{"username":"mpweiher","created_at":"2019-11-22T11:22:25.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":1332,"avatar_url":"/avatars/mpweiher-100.png","invited_by_user":"mulle_nat","github_username":"mpw","twitter_username":"mpweiher"},"tags":["ai","devops"]},{"short_id":"l4dovq","short_id_url":"https://lobste.rs/s/l4dovq","created_at":"2023-04-05T08:16:21.000-05:00","title":"A definitive guide to sealed traits in Rust","url":"https://predr.ag/blog/definitive-guide-to-sealed-traits-in-rust/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/l4dovq/definitive_guide_sealed_traits_rust","submitter_user":{"username":"predrag","created_at":"2022-08-30T12:00:46.000-05:00","is_admin":false,"about":"Building Trustfall, a query engine able to query any dataset. ([GitHub](https://github.com/obi1kenobi/trustfall), [conf talk](https://www.hytradboi.com/2022/how-to-query-almost-everything), [web demo](https://play.predr.ag/hackernews))\r\n\r\nCreator of `cargo-semver-checks`, a linter for semantic versioning of Rust crates: [crates.io](https://crates.io/crates/cargo-semver-checks), [GitHub](https://github.com/obi1kenobi/cargo-semver-checks)\r\n\r\nBlog: https://predr.ag/blog/\r\n\r\nMastodon: `@predrag@hachyderm.io`\r\n\r\nTwitter: https://twitter.com/PredragGruevski\r\n\r\nTalks: https://predr.ag/talks/","is_moderator":false,"karma":201,"avatar_url":"/avatars/predrag-100.png","invited_by_user":"hwayne","github_username":"obi1kenobi"},"tags":["rust"]},{"short_id":"pt03dq","short_id_url":"https://lobste.rs/s/pt03dq","created_at":"2023-04-05T08:09:38.000-05:00","title":"pageview-worker: Page View backend based on Cloudflare Workers and KV","url":"https://github.com/jiacai2050/pageview-worker","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pt03dq/pageview_worker_page_view_backend_based","submitter_user":{"username":"jiacai2050","created_at":"2020-06-02T07:10:57.000-05:00","is_admin":false,"about":"Rust developer at day and Zig at night.\r\n","is_moderator":false,"karma":117,"avatar_url":"/avatars/jiacai2050-100.png","invited_by_user":"gerikson","github_username":"jiacai2050","twitter_username":"liujiacai"},"tags":["api","web"]},{"short_id":"hwbmr7","short_id_url":"https://lobste.rs/s/hwbmr7","created_at":"2023-04-05T07:05:00.000-05:00","title":"datapane: Build full-stack data apps in 100% Python","url":"https://github.com/datapane/datapane","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hwbmr7/datapane_build_full_stack_data_apps_100","submitter_user":{"username":"spookylukey","created_at":"2020-05-20T06:43:28.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":260,"avatar_url":"/avatars/spookylukey-100.png","invited_by_user":"ubernostrum","github_username":"spookylukey","twitter_username":"spookylukey"},"tags":["python"]},{"short_id":"tvahev","short_id_url":"https://lobste.rs/s/tvahev","created_at":"2023-04-05T06:45:50.000-05:00","title":"Can We Learn the Language of Proteins? (2019)","url":"https://bair.berkeley.edu/blog/2019/11/04/proteins/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tvahev/can_we_learn_language_proteins_2019","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5535,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["ai"]},{"short_id":"z3eqwh","short_id_url":"https://lobste.rs/s/z3eqwh","created_at":"2023-04-05T06:28:27.000-05:00","title":"From hell to HTML: releasing a Python package to easily work with Wikimedia HTML dumps","url":"https://techblog.wikimedia.org/2023/02/24/from-hell-to-html/","score":9,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/z3eqwh/from_hell_html_releasing_python_package","submitter_user":{"username":"theresnotime","created_at":"2022-12-15T00:50:38.000-06:00","is_admin":false,"about":"A 20-something, quintessentially queer software engineer at the Wikimedia Foundation. ","is_moderator":false,"karma":28,"avatar_url":"/avatars/theresnotime-100.png","invited_by_user":"soatok","github_username":"theresnotime"},"tags":["python"]},{"short_id":"fmnkyd","short_id_url":"https://lobste.rs/s/fmnkyd","created_at":"2023-04-05T05:07:23.000-05:00","title":"The Capability-Tractability Tradeoff","url":"https://buttondown.email/hillelwayne/archive/the-capability-tractability-tradeoff/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fmnkyd/capability_tractability_tradeoff","submitter_user":{"username":"spookylukey","created_at":"2020-05-20T06:43:28.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":260,"avatar_url":"/avatars/spookylukey-100.png","invited_by_user":"ubernostrum","github_username":"spookylukey","twitter_username":"spookylukey"},"tags":["plt"]},{"short_id":"gvxarn","short_id_url":"https://lobste.rs/s/gvxarn","created_at":"2023-04-05T04:28:23.000-05:00","title":"monocypher 4.0.1","url":"https://monocypher.org/news","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gvxarn/monocypher_4_0_1","submitter_user":{"username":"tankf33der","created_at":"2017-06-07T13:06:59.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":465,"avatar_url":"/avatars/tankf33der-100.png","invited_by_user":"james"},"tags":["cryptography","release","security"]},{"short_id":"nar1bn","short_id_url":"https://lobste.rs/s/nar1bn","created_at":"2023-04-05T00:09:32.000-05:00","title":"Crypto Ancienne 2.2: now supported on AmigaOS and classic MacOS/MPW","url":"https://oldvcr.blogspot.com/2023/04/crypto-ancienne-22-now-supported-on.html","score":8,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nar1bn/crypto_ancienne_2_2_now_supported_on","submitter_user":{"username":"classichasclass","created_at":"2018-11-05T18:45:47.000-06:00","is_admin":false,"about":"no you're off topic","is_moderator":false,"karma":2988,"avatar_url":"/avatars/classichasclass-100.png","invited_by_user":"sevan"},"tags":["cryptography","release"]},{"short_id":"mqvznv","short_id_url":"https://lobste.rs/s/mqvznv","created_at":"2023-04-04T19:24:36.000-05:00","title":"Type Specialization in Go","url":"https://commaok.xyz/post/type_specialization/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mqvznv/type_specialization_go","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":9235,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["go","performance"]},{"short_id":"57se6u","short_id_url":"https://lobste.rs/s/57se6u","created_at":"2023-04-04T18:12:28.000-05:00","title":"Dumb bugs: the PCI device that wasn't","url":"https://sthbrx.github.io/blog/2023/04/04/dumb-bugs-the-pci-device-that-wasnt/","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/57se6u/dumb_bugs_pci_device_wasn_t","submitter_user":{"username":"jmillikin","created_at":"2021-07-22T09:39:26.000-05:00","is_admin":false,"about":"Currently semi-retired; formerly at Google (2011-2017) and Stripe (2017-2022)","is_moderator":false,"karma":1216,"avatar_url":"/avatars/jmillikin-100.png","invited_by_user":"pushcx"},"tags":["c","linux"]},{"short_id":"rkekof","short_id_url":"https://lobste.rs/s/rkekof","created_at":"2023-04-04T16:16:10.000-05:00","title":"clex is now thread-safe and instance-based! A simple lexer generator for C","url":"https://github.com/jafarlihi/clex","score":5,"flags":0,"comment_count":2,"description":"\u003cp\u003eI very recently updated clex to be instance-based (instead of being a single global instance) and thread-safe based on previous feedback.\u003c/p\u003e\n\u003cp\u003eclex lets you programatically generate lexers in your C program without going through extra intermediary generation/compilation step, and now you can have more than one in your application!\u003c/p\u003e\n\u003cp\u003eThere’s also cparse: \u003ca href=\"https://github.com/jafarlihi/cparse\" rel=\"ugc\"\u003ehttps://github.com/jafarlihi/cparse\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIt lets you generate LR(1) and LALR(1) parsers in much the same way, and it uses clex under the hood.\nIt’s currently not updated to the latest version of instance-based clex but it is in my plans to do so soon.\u003c/p\u003e\n\u003cp\u003eFeedback and contributions are appreciated!\u003c/p\u003e\n","description_plain":"I very recently updated clex to be instance-based (instead of being a single global instance) and thread-safe based on previous feedback.\r\n\r\nclex lets you programatically generate lexers in your C program without going through extra intermediary generation/compilation step, and now you can have more than one in your application!\r\n\r\nThere's also cparse: https://github.com/jafarlihi/cparse\r\n\r\nIt lets you generate LR(1) and LALR(1) parsers in much the same way, and it uses clex under the hood.\r\nIt's currently not updated to the latest version of instance-based clex but it is in my plans to do so soon.\r\n\r\nFeedback and contributions are appreciated!","comments_url":"https://lobste.rs/s/rkekof/clex_is_now_thread_safe_instance_based","submitter_user":{"username":"jafarlihi","created_at":"2022-10-07T13:08:08.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":78,"avatar_url":"/avatars/jafarlihi-100.png","invited_by_user":"jj5"},"tags":["c","compilers","release","show"]},{"short_id":"2ls8pg","short_id_url":"https://lobste.rs/s/2ls8pg","created_at":"2023-04-04T15:59:21.000-05:00","title":"The microcode and hardware in the 8086 processor that perform string operations","url":"http://www.righto.com/2023/04/8086-microcode-string-operations.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2ls8pg/microcode_hardware_8086_processor","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96519,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","historical","reversing"]},{"short_id":"qnw4sn","short_id_url":"https://lobste.rs/s/qnw4sn","created_at":"2023-04-04T15:52:00.000-05:00","title":"A leaner \u003ciostream\u003e in libstdc++ for GCC 13","url":"https://developers.redhat.com/articles/2023/04/03/leaner-libstdc-gcc-13","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qnw4sn/leaner_iostream_libstdc_for_gcc_13","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":20123,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"rvvnrz","short_id_url":"https://lobste.rs/s/rvvnrz","created_at":"2023-04-04T15:25:48.000-05:00","title":"Semi-automating a Substack newsletter with an Observable notebook","url":"https://simonwillison.net/2023/Apr/4/substack-observable/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rvvnrz/semi_automating_substack_newsletter","submitter_user":{"username":"simonw","created_at":"2021-07-29T15:43:15.000-05:00","is_admin":false,"about":"Creator of https://datasette.io","is_moderator":false,"karma":1054,"avatar_url":"/avatars/simonw-100.png","invited_by_user":"scoates","github_username":"simonw"},"tags":["api","email","javascript"]},{"short_id":"zz2xln","short_id_url":"https://lobste.rs/s/zz2xln","created_at":"2023-04-04T15:25:36.000-05:00","title":"Debian Installer Bookworm RC 1 release","url":"https://lists.debian.org/debian-devel-announce/2023/04/msg00000.html","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zz2xln/debian_installer_bookworm_rc_1_release","submitter_user":{"username":"ema","created_at":"2017-02-03T03:16:02.000-06:00","is_admin":false,"about":"https://github.com/ema\r\nhttps://twitter.com/realEmaRocca","is_moderator":false,"karma":558,"avatar_url":"/avatars/ema-100.png","invited_by_user":"nkhumphreys"},"tags":["linux","release"]},{"short_id":"0qpyvc","short_id_url":"https://lobste.rs/s/0qpyvc","created_at":"2023-04-04T15:13:10.000-05:00","title":"Nushell 0.78 supports pattern matching","url":"https://www.nushell.sh/blog/2023-04-04-nushell_0_78.html#pattern-matching-jt","score":12,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0qpyvc/nushell_0_78_supports_pattern_matching","submitter_user":{"username":"eterps","created_at":"2018-06-22T06:22:21.000-05:00","is_admin":false,"about":"https://keybase.io/eterps","is_moderator":false,"karma":491,"avatar_url":"/avatars/eterps-100.png","invited_by_user":"gerikson"},"tags":["programming"]},{"short_id":"cnuq5w","short_id_url":"https://lobste.rs/s/cnuq5w","created_at":"2023-04-04T14:56:28.000-05:00","title":"A Look At Austral","url":"https://wiki.alopex.li/ALookAtAustral2023","score":22,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cnuq5w/look_at_austral","submitter_user":{"username":"icefox","created_at":"2018-08-26T20:59:16.000-05:00","is_admin":false,"about":"Lobsters rules:\r\n\r\n * Always upvote langdev, osdev or gamedev\r\n * Strongly avoid medium or twitter links\r\n * Strongly avoid any thread where the number of comments exceeds the number of upvotes","is_moderator":false,"karma":8375,"avatar_url":"/avatars/icefox-100.png","invited_by_user":"shanemhansen"},"tags":["plt"]},{"short_id":"uqvzri","short_id_url":"https://lobste.rs/s/uqvzri","created_at":"2023-04-04T14:25:13.000-05:00","title":"How do you name your Go variables","url":"","score":9,"flags":0,"comment_count":26,"description":"\u003cp\u003eI’m asking this specifically here because I’m looking for an answer from experienced devs (especially, experience in languages that are not Go).\u003c/p\u003e\n\u003cp\u003eEvery single book I’ve read about programming best practices has the advice “use concise but descriptive variable names, avoid abbreviations”. Across every job I’ve had, I’ve never seen this contested (maybe poorly applied, but everyone seemed pretty OK with the idea). IMO a very basic interpretation of this is “if a variable contains a car, name it \u003ccode\u003ecar\u003c/code\u003e unless you have a good reason not to”.\u003c/p\u003e\n\u003cp\u003eEnter Go, where I can’t name my variable \u003ccode\u003ecar\u003c/code\u003e because that’s the name of the package defining the \u003ccode\u003eCar\u003c/code\u003e type.\nWhat’s your solution to this? I can see a bunch, but none of them are satisfactory:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eName the variable \u003ccode\u003ecar_\u003c/code\u003e (IMO the least bad, but I’ve just never seen it)\u003c/li\u003e\n\u003cli\u003eName the package \u003ccode\u003ecarPkg\u003c/code\u003e (cumbersome, given how often we repeat package names shorter is better)\u003c/li\u003e\n\u003cli\u003eName the variable \u003ccode\u003ec\u003c/code\u003e. (then you directly contradict the above rule)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI’m very aware that the third solution is the most popular one, but I find functions littered with one-letter variable names so hard to read. Is that really the way? Am I simply in denial and will eventually get used to it?\u003c/p\u003e\n\u003cp\u003eNote that this is not a rant but a genuine question, I actually quite like that fact that you have to prefix every external name with a package name; I just wish package names did not conflict with variable names.\u003c/p\u003e\n","description_plain":"I'm asking this specifically here because I'm looking for an answer from experienced devs (especially, experience in languages that are not Go).\r\n\r\nEvery single book I've read about programming best practices has the advice \"use concise but descriptive variable names, avoid abbreviations\". Across every job I've had, I've never seen this contested (maybe poorly applied, but everyone seemed pretty OK with the idea). IMO a very basic interpretation of this is \"if a variable contains a car, name it `car` unless you have a good reason not to\".\r\n\r\nEnter Go, where I can't name my variable `car` because that's the name of the package defining the `Car` type. \r\nWhat's your solution to this? I can see a bunch, but none of them are satisfactory:\r\n\r\n- Name the variable `car_` (IMO the least bad, but I've just never seen it)\r\n- Name the package `carPkg` (cumbersome, given how often we repeat package names shorter is better)\r\n- Name the variable `c`. (then you directly contradict the above rule)\r\n\r\nI'm very aware that the third solution is the most popular one, but I find functions littered with one-letter variable names so hard to read. Is that really the way? Am I simply in denial and will eventually get used to it?\r\n\r\nNote that this is not a rant but a genuine question, I actually quite like that fact that you have to prefix every external name with a package name; I just wish package names did not conflict with variable names.","comments_url":"https://lobste.rs/s/uqvzri/how_do_you_name_your_go_variables","submitter_user":{"username":"antoinewdg","created_at":"2022-11-30T09:18:11.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":46,"avatar_url":"/avatars/antoinewdg-100.png","invited_by_user":"spookylukey"},"tags":["ask","go","practices"]},{"short_id":"wy87va","short_id_url":"https://lobste.rs/s/wy87va","created_at":"2023-04-04T12:56:44.000-05:00","title":"Zonemaster : release of a new version of the domain name checking tool","url":"https://www.afnic.fr/en/observatory-and-resources/news/zonemaster-release-of-a-new-version-of-the-domain-name-checking-tool/","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wy87va/zonemaster_release_new_version_domain","submitter_user":{"username":"kngl","created_at":"2017-06-15T14:58:55.000-05:00","is_admin":false,"about":"Odoo Developer\r\n\r\n🦘/🦞","is_moderator":false,"karma":1065,"avatar_url":"/avatars/kngl-100.png","invited_by_user":"ngoldbaum","github_username":"KangOl"},"tags":["release"]},{"short_id":"fofvn6","short_id_url":"https://lobste.rs/s/fofvn6","created_at":"2023-04-04T12:35:09.000-05:00","title":"Safari releases are development hell","url":"https://www.construct.net/en/blogs/ashleys-blog-2/safari-releases-development-1616","score":13,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fofvn6/safari_releases_are_development_hell","submitter_user":{"username":"bdesham","created_at":"2018-11-16T17:30:49.000-06:00","is_admin":false,"about":"Professional and hobbyist software developer.\r\n\r\n[Mastodon](https://functional.cafe/@bde)\r\n\r\nHe/him","is_moderator":false,"karma":1034,"avatar_url":"/avatars/bdesham-100.png","invited_by_user":"Hail_Spacecake"},"tags":["ios","mac","web"]},{"short_id":"sxk4lw","short_id_url":"https://lobste.rs/s/sxk4lw","created_at":"2023-04-04T12:33:11.000-05:00","title":"Pentimento: Data Remanence in Cloud FPGAs","url":"https://arxiv.org/pdf/2303.17881","score":5,"flags":0,"comment_count":0,"description":"\u003cp\u003eCloud FPGAs strike an alluring balance between computational efficiency, energy efficiency, and cost. It is the flexibility of the FPGA architecture that enables these benefits, but that very same flexibility that exposes new security vulnerabilities. We show that a remote attacker can recover “FPGA pentimenti” - long-removed secret data belonging to a prior user of a cloud FPGA. The sensitive data constituting an FPGA pentimento is an analog imprint from bias temperature instability (BTI) effects on the underlying transistors. We demonstrate how this slight degradation can be measured using a time-to-digital (TDC) converter when an adversary programs one into the target cloud FPGA.\nThis technique allows an attacker to ascertain previously safe information on cloud FPGAs, even after it is no longer explicitly present. Notably, it can allow an attacker who knows a non-secret “skeleton” (the physical structure, but not the contents) of the victim’s design to (1) extract proprietary details from an encrypted FPGA design image available on the AWS marketplace and (2) recover data loaded at runtime by a previous user of a cloud FPGA using a known design. Our experiments show that BTI degradation (burn-in) and recovery are measurable and constitute a security threat to commercial cloud FPGAs.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.17881\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Cloud FPGAs strike an alluring balance between computational efficiency, energy efficiency, and cost. It is the flexibility of the FPGA architecture that enables these benefits, but that very same flexibility that exposes new security vulnerabilities. We show that a remote attacker can recover \"FPGA pentimenti\" - long-removed secret data belonging to a prior user of a cloud FPGA. The sensitive data constituting an FPGA pentimento is an analog imprint from bias temperature instability (BTI) effects on the underlying transistors. We demonstrate how this slight degradation can be measured using a time-to-digital (TDC) converter when an adversary programs one into the target cloud FPGA.\r\nThis technique allows an attacker to ascertain previously safe information on cloud FPGAs, even after it is no longer explicitly present. Notably, it can allow an attacker who knows a non-secret \"skeleton\" (the physical structure, but not the contents) of the victim's design to (1) extract proprietary details from an encrypted FPGA design image available on the AWS marketplace and (2) recover data loaded at runtime by a previous user of a cloud FPGA using a known design. Our experiments show that BTI degradation (burn-in) and recovery are measurable and constitute a security threat to commercial cloud FPGAs. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.17881)","comments_url":"https://lobste.rs/s/sxk4lw/pentimento_data_remanence_cloud_fpgas","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96519,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","pdf","security"]}]