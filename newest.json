[{"short_id":"21ebky","short_id_url":"https://lobste.rs/s/21ebky","created_at":"2022-08-08T12:06:24.000-05:00","title":"Developer Experience Funnel","url":"https://sluongng.hashnode.dev/bazel-in-ci-part-0-the-developer-experience-funnel","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/21ebky/developer_experience_funnel","submitter_user":{"username":"sluongng","created_at":"2019-08-11T12:16:27.000-05:00","is_admin":false,"about":"- **Title**: SRE @ Booking.com, Technology enthusiast.\r\n\r\n- **Interest**: Rust, Golang, Java.\r\n\r\n- **Location**: Amsterdam, Netherlands.","is_moderator":false,"karma":225,"avatar_url":"/avatars/sluongng-100.png","invited_by_user":"aleph","github_username":"sluongng","twitter_username":"sluongng"},"tags":["devops","practices"]},{"short_id":"0xyfsf","short_id_url":"https://lobste.rs/s/0xyfsf","created_at":"2022-08-08T11:30:47.000-05:00","title":"scopes: The Scopes Programming Language \u0026 Compiler Infrastructure","url":"https://sr.ht/~duangle/scopes/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0xyfsf/scopes_scopes_programming_language","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":6313,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"tags":["lisp","plt"]},{"short_id":"o2kd2x","short_id_url":"https://lobste.rs/s/o2kd2x","created_at":"2022-08-08T10:49:32.000-05:00","title":"Multy allows writing cloud-agnostic config deployed across multiple clouds avoiding vendor lockin","url":"https://github.com/multycloud/multy","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o2kd2x/multy_allows_writing_cloud_agnostic","submitter_user":{"username":"Yogthos","created_at":"2017-05-26T15:31:12.000-05:00","is_admin":false,"about":"A sentience trapped in a prison of meat.\r\nhttp://yogthos.net/","is_moderator":false,"karma":8207,"avatar_url":"/avatars/Yogthos-100.png","invited_by_user":"gered"},"tags":["devops"]},{"short_id":"cuert6","short_id_url":"https://lobste.rs/s/cuert6","created_at":"2022-08-08T10:34:47.000-05:00","title":"Achieving A Completely Open Source Implementation of Apple Code Signing and Notarization","url":"https://gregoryszorc.com/blog/2022/08/08/achieving-a-completely-open-source-implementation-of-apple-code-signing-and-notarization/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cuert6/achieving_completely_open_source","submitter_user":{"username":"indygreg","created_at":"2018-11-05T11:45:36.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":701,"avatar_url":"/avatars/indygreg-100.png","invited_by_user":"ngoldbaum","github_username":"indygreg"},"tags":["ios","mac","rust"]},{"short_id":"aorfbp","short_id_url":"https://lobste.rs/s/aorfbp","created_at":"2022-08-08T10:33:44.000-05:00","title":"On the 19th of October, a storage limit will be enforced on all non-paid Gitlab accounts","url":"https://docs.gitlab.com/ee/user/usage_quotas.html#namespace-storage-limit-enforcement-schedule","score":3,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aorfbp/on_19th_october_storage_limit_will_be","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":17199,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["vcs"]},{"short_id":"uajxme","short_id_url":"https://lobste.rs/s/uajxme","created_at":"2022-08-08T10:19:00.000-05:00","title":"Post-Apocalyptic Programming","url":"https://zserge.com/posts/post-apocalyptic-programming/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uajxme/post_apocalyptic_programming","submitter_user":{"username":"rmathew","created_at":"2012-09-02T05:41:32.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":0,"avatar_url":"/avatars/rmathew-100.png","invited_by_user":"jcs"},"tags":["assembly","programming"]},{"short_id":"2k6cfq","short_id_url":"https://lobste.rs/s/2k6cfq","created_at":"2022-08-08T09:46:52.000-05:00","title":"The ‚Äòfat service‚Äô pattern for web applications","url":"https://www.alexedwards.net/blog/the-fat-service-pattern","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2k6cfq/fat_service_pattern_for_web_applications","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":4639,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["go"]},{"short_id":"60lj66","short_id_url":"https://lobste.rs/s/60lj66","created_at":"2022-08-08T08:45:37.000-05:00","title":"Using unwrap() in Rust is Okay","url":"https://blog.burntsushi.net/unwrap/","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/60lj66/using_unwrap_rust_is_okay","submitter_user":{"username":"jparise","created_at":"2020-10-16T10:33:21.000-05:00","is_admin":false,"about":"Trying to leave things better than I find them.","is_moderator":false,"karma":162,"avatar_url":"/avatars/jparise-100.png","invited_by_user":"chrislloyd","github_username":"jparise"},"tags":["rust"]},{"short_id":"8ocalx","short_id_url":"https://lobste.rs/s/8ocalx","created_at":"2022-08-08T08:02:51.000-05:00","title":"NIST‚Äôs Post-Quantum Cryptography Standards","url":"https://www.schneier.com/blog/archives/2022/08/nists-post-quantum-cryptography-standards.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8ocalx/nist_s_post_quantum_cryptography","submitter_user":{"username":"reezer","created_at":"2016-09-22T09:14:15.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1421,"avatar_url":"/avatars/reezer-100.png","invited_by_user":"groovemonkey"},"tags":["cryptography"]},{"short_id":"wlxvck","short_id_url":"https://lobste.rs/s/wlxvck","created_at":"2022-08-08T07:37:22.000-05:00","title":"Announcing: MiniRust","url":"https://www.ralfj.de/blog/2022/08/08/minirust.html","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wlxvck/announcing_minirust","submitter_user":{"username":"sanxiyn","created_at":"2015-01-21T09:51:34.000-06:00","is_admin":false,"about":"I made the initial port of Rust to ARM and Android.","is_moderator":false,"karma":9888,"avatar_url":"/avatars/sanxiyn-100.png","invited_by_user":"steveklabnik","github_username":"sanxiyn","twitter_username":"sanxiyn"},"tags":["rust"]},{"short_id":"dxszwl","short_id_url":"https://lobste.rs/s/dxszwl","created_at":"2022-08-08T06:43:51.000-05:00","title":"Cost of Data Center Outages","url":"https://www.vertiv.com/globalassets/documents/reports/2016-cost-of-data-center-outages-11-11_51190_1.pdf","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dxszwl/cost_data_center_outages","submitter_user":{"username":"teymour","created_at":"2021-06-01T03:07:56.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":393,"avatar_url":"/avatars/teymour-100.png","invited_by_user":"bkolobara","github_username":"teymour-aldridge"},"tags":["finance","pdf"]},{"short_id":"xruava","short_id_url":"https://lobste.rs/s/xruava","created_at":"2022-08-08T06:40:11.000-05:00","title":"Async Composable Architecture","url":"https://www.pointfree.co/blog/posts/79-async-composable-architecture","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xruava/async_composable_architecture","submitter_user":{"username":"jparise","created_at":"2020-10-16T10:33:21.000-05:00","is_admin":false,"about":"Trying to leave things better than I find them.","is_moderator":false,"karma":162,"avatar_url":"/avatars/jparise-100.png","invited_by_user":"chrislloyd","github_username":"jparise"},"tags":["swift"]},{"short_id":"vcqezn","short_id_url":"https://lobste.rs/s/vcqezn","created_at":"2022-08-08T06:29:46.000-05:00","title":"What are you doing this week?","url":"","score":8,"flags":0,"comment_count":19,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it‚Äôs OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it‚Äôs OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/vcqezn/what_are_you_doing_this_week","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":7893,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius","twitter_username":"Caius"},"tags":["ask","programming"]},{"short_id":"fukymq","short_id_url":"https://lobste.rs/s/fukymq","created_at":"2022-08-08T05:41:52.000-05:00","title":"Space probe software bug","url":"https://generalist.academy/2021/10/07/space-probe-software-bug/","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fukymq/space_probe_software_bug","submitter_user":{"username":"jummo","created_at":"2020-11-02T05:12:41.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":193,"avatar_url":"/avatars/jummo-100.png","invited_by_user":"icy"},"tags":["programming"]},{"short_id":"j43774","short_id_url":"https://lobste.rs/s/j43774","created_at":"2022-08-08T05:35:43.000-05:00","title":"structuredClone() in JavaScript","url":"https://developer.mozilla.org/en-US/docs/Web/API/structuredClone","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j43774/structuredclone_javascript","submitter_user":{"username":"viebel","created_at":"2021-03-01T11:02:52.000-06:00","is_admin":false,"about":"Developer, speaker, coach. Author of [Data-Oriented programming](https://www.manning.com/books/data-oriented-programming?utm_source=viebel\u0026utm_medium=affiliate\u0026utm_campaign=book_sharvit2_data_1_29_21\u0026a_aid=viebel\u0026a_bid=d5b546b7).","is_moderator":false,"karma":192,"avatar_url":"/avatars/viebel-100.png","invited_by_user":"nbardiuk","github_username":"viebel","twitter_username":"viebel"},"tags":["javascript"]},{"short_id":"t4ktez","short_id_url":"https://lobste.rs/s/t4ktez","created_at":"2022-08-08T03:20:25.000-05:00","title":"unblob: accurate and fast extraction suite for 30+ formats","url":"https://github.com/onekey-sec/unblob","score":26,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/t4ktez/unblob_accurate_fast_extraction_suite","submitter_user":{"username":"kissgyorgy","created_at":"2022-07-03T10:08:25.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":92,"avatar_url":"/avatars/kissgyorgy-100.png","invited_by_user":"jart","github_username":"kissgyorgy"},"tags":["python"]},{"short_id":"a07wiu","short_id_url":"https://lobste.rs/s/a07wiu","created_at":"2022-08-08T03:17:28.000-05:00","title":"Why does gRPC insist on trailers?","url":"https://carlmastrangelo.com/blog/why-does-grpc-insist-on-trailers","score":20,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/a07wiu/why_does_grpc_insist_on_trailers","submitter_user":{"username":"matklad","created_at":"2019-07-02T07:23:10.000-05:00","is_admin":false,"about":"Working on IDE support for the Rust language.\r\n\r\nhttps://github.com/matklad","is_moderator":false,"karma":3316,"avatar_url":"/avatars/matklad-100.png","invited_by_user":"skade","github_username":"matklad"},"tags":["api","distributed","networking"]},{"short_id":"zheuya","short_id_url":"https://lobste.rs/s/zheuya","created_at":"2022-08-08T00:34:05.000-05:00","title":"10x-ing a TI-84 emulator‚Äôs speed by replacing a switch-case","url":"https://artemis.sh/2022/08/07/emulating-calculators-fast-in-js.html","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zheuya/10x_ing_ti_84_emulator_s_speed_by_replacing","submitter_user":{"username":"jmillikin","created_at":"2021-07-22T09:39:26.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":178,"avatar_url":"/avatars/jmillikin-100.png","invited_by_user":"pushcx"},"tags":["javascript","performance"]},{"short_id":"jxm5dv","short_id_url":"https://lobste.rs/s/jxm5dv","created_at":"2022-08-07T23:41:33.000-05:00","title":"Trealla Prolog embedded in Go using WASM","url":"https://github.com/guregu/trealla-go","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jxm5dv/trealla_prolog_embedded_go_using_wasm","submitter_user":{"username":"ericdykstra","created_at":"2015-12-14T00:21:44.000-06:00","is_admin":false,"about":"Hi, I'm Eric. I live and work in Japan and program for a living. Hobbies include judo, guitar, and leathercraft. Interests include Japanese comedy, music, and RTS games.","is_moderator":false,"karma":626,"avatar_url":"/avatars/ericdykstra-100.png","invited_by_user":"pushcx"},"tags":["go","plt"]},{"short_id":"fq7ge1","short_id_url":"https://lobste.rs/s/fq7ge1","created_at":"2022-08-07T19:50:02.000-05:00","title":"Best practices for inclusive textual websites","url":"https://seirdy.one/posts/2020/11/23/website-best-practices/","score":25,"flags":0,"comment_count":9,"description":"\u003cp\u003ePage says 2020 but it‚Äôs constantly updated\u003c/p\u003e\n","description_plain":"Page says 2020 but it's constantly updated","comments_url":"https://lobste.rs/s/fq7ge1/best_practices_for_inclusive_textual","submitter_user":{"username":"Seirdy","created_at":"2020-01-28T20:13:49.000-06:00","is_admin":false,"about":"He/Him, It/Its. Full bio, contact info, etc. on my site's [about page](https://seirdy.one/about/).\r\n\r\nI also have a Gemini capsule at gemini://seirdy.one\r\n\r\nTech interests: accessibility, the IndieWeb, software freedom.","is_moderator":false,"karma":810,"avatar_url":"/avatars/Seirdy-100.png","invited_by_user":"Hail_Spacecake","github_username":"Seirdy"},"tags":["a11y","performance","practices","web"]},{"short_id":"ugscl4","short_id_url":"https://lobste.rs/s/ugscl4","created_at":"2022-08-07T16:59:21.000-05:00","title":"From roots to polynomials","url":"http://blog.pkh.me/p/31-from-roots-to-polynomials.html","score":9,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ugscl4/from_roots_polynomials","submitter_user":{"username":"ubitux","created_at":"2021-06-10T06:08:35.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":105,"avatar_url":"/avatars/ubitux-100.png","invited_by_user":"gerikson"},"tags":["math"]},{"short_id":"osg9sc","short_id_url":"https://lobste.rs/s/osg9sc","created_at":"2022-08-07T15:57:42.000-05:00","title":"./concord.sh :: UEFI Secure Boot the Right Way","url":"https://concord.sh/posts/2022/08/uefi-secure-boot-the-right-way/","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/osg9sc/concord_sh_uefi_secure_boot_right_way","submitter_user":{"username":"Seirdy","created_at":"2020-01-28T20:13:49.000-06:00","is_admin":false,"about":"He/Him, It/Its. Full bio, contact info, etc. on my site's [about page](https://seirdy.one/about/).\r\n\r\nI also have a Gemini capsule at gemini://seirdy.one\r\n\r\nTech interests: accessibility, the IndieWeb, software freedom.","is_moderator":false,"karma":810,"avatar_url":"/avatars/Seirdy-100.png","invited_by_user":"Hail_Spacecake","github_username":"Seirdy"},"tags":["linux","osdev","security","systemd"]},{"short_id":"o1gge9","short_id_url":"https://lobste.rs/s/o1gge9","created_at":"2022-08-07T15:27:36.000-05:00","title":"SSVG: Scalable Scalable Vector Graphics","url":"https://ssvg.io/","score":10,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o1gge9/ssvg_scalable_scalable_vector_graphics","submitter_user":{"username":"jeffhuang","created_at":"2014-04-14T11:23:50.000-05:00","is_admin":false,"about":"I'm a computer scientist in Providence, Rhode Island","is_moderator":false,"karma":227,"avatar_url":"/avatars/jeffhuang-100.png","invited_by_user":"ericsampson"},"tags":["art","javascript","performance","web"]},{"short_id":"cekies","short_id_url":"https://lobste.rs/s/cekies","created_at":"2022-08-07T15:11:48.000-05:00","title":"Approaches for interleaving several stderr logging streams","url":"","score":5,"flags":0,"comment_count":6,"description":"\u003cp\u003eI am writing a test for a toy distributed system. In the test, I spin two components locally and make them talk to each other. I use printf for debugging, so I want a simple and unambiguous way to \u003cem\u003eget\u003c/em\u003e the node‚Äôs stderr.\u003c/p\u003e\n\u003cp\u003eThe problem is that there are two stderr streams, but my driver program only have one. I need to come of with some way to multiplex several streams into one, and so I am wondering what‚Äôs the prior art here. I am looking for simplicity and convenience, rather than robustness and production readiness. The options I can think about, none of which are particularly appealing:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003estream logs to files, split my terminal and \u003ccode\u003etail -f\u003c/code\u003e ‚Äì probably what I want in terms of final result, but requires a lot of manual steps after I run the binary. Also makes it annoying to \u003ccode\u003e^C\u003c/code\u003e the whole thing.\u003c/li\u003e\n\u003cli\u003ejust inherit stderr ‚Äì simple, but it‚Äôs hard to say which output comes from which node\u003c/li\u003e\n\u003cli\u003epipe stderrs and append node ids to each line/record, or layout output as n columns ‚Äì my current favorite, but needs a fair amount of programming and I am unsure about details\u003c/li\u003e\n\u003cli\u003ebuffer stderr and print continous chunks at the end of the test ‚Äì I want live output\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIs there perhaps some secret ANSI \u003cdel\u003echeat\u003c/del\u003e escape code to unlock bonus file descriptors for stderr2 and such? Or perhaps there‚Äôs some existing library which implements something like mini-tmux? Really, interested in any prior art here, as I feel like I‚Äôve seen this problem several times, but I can‚Äôt recall any nifty real-world solutions.\u003c/p\u003e\n","description_plain":"I am writing a test for a toy distributed system. In the test, I spin two components locally and make them talk to each other. I use printf for debugging, so I want a simple and unambiguous way to *get* the node's stderr. \r\n\r\nThe problem is that there are two stderr streams, but my driver program only have one. I need to come of with some way to multiplex several streams into one, and so I am wondering what's the prior art here. I am looking for simplicity and convenience, rather than robustness and production readiness. The options I can think about, none of which are particularly appealing: \r\n\r\n* stream logs to files, split my terminal and `tail -f` -- probably what I want in terms of final result, but requires a lot of manual steps after I run the binary. Also makes it annoying to `^C` the whole thing. \r\n* just inherit stderr -- simple, but it's hard to say which output comes from which node\r\n* pipe stderrs and append node ids to each line/record, or layout output as n columns -- my current favorite, but needs a fair amount of programming and I am unsure about details\r\n* buffer stderr and print continous chunks at the end of the test -- I want live output\r\n\r\nIs there perhaps some secret ANSI ~cheat~ escape code to unlock bonus file descriptors for stderr2 and such? Or perhaps there's some existing library which implements something like mini-tmux? Really, interested in any prior art here, as I feel like I've seen this problem several times, but I can't recall any nifty real-world solutions.","comments_url":"https://lobste.rs/s/cekies/approaches_for_interleaving_several","submitter_user":{"username":"matklad","created_at":"2019-07-02T07:23:10.000-05:00","is_admin":false,"about":"Working on IDE support for the Rust language.\r\n\r\nhttps://github.com/matklad","is_moderator":false,"karma":3316,"avatar_url":"/avatars/matklad-100.png","invited_by_user":"skade","github_username":"matklad"},"tags":["ask","debugging"]},{"short_id":"vjkcnh","short_id_url":"https://lobste.rs/s/vjkcnh","created_at":"2022-08-07T12:51:30.000-05:00","title":"Shaving 40% off Google's B-Tree Implementation with Go Generics","url":"https://thenewstack.io/shaving-40-off-googles-b-tree-implementation-with-go-generics/","score":8,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vjkcnh/shaving_40_off_google_s_b_tree","submitter_user":{"username":"sanxiyn","created_at":"2015-01-21T09:51:34.000-06:00","is_admin":false,"about":"I made the initial port of Rust to ARM and Android.","is_moderator":false,"karma":9888,"avatar_url":"/avatars/sanxiyn-100.png","invited_by_user":"steveklabnik","github_username":"sanxiyn","twitter_username":"sanxiyn"},"tags":["go","performance"]}]