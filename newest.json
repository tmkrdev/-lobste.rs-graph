[{"short_id":"xeubho","short_id_url":"https://lobste.rs/s/xeubho","created_at":"2023-07-11T02:38:20.000-05:00","title":"Why are Prometheus queries hard?","url":"https://fiberplane.com/blog/why-are-prometheus-queries-hard","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xeubho/why_are_prometheus_queries_hard","submitter_user":{"username":"emschwartz","created_at":"2022-03-15T14:21:17.000-05:00","is_admin":false,"about":"Rust / Typescript engineer. Created + currently working on autometrics (https://github.com/autometrics-dev) at Fiberplane. Previously co-created the Interledger Protocol (interledger.org) at Ripple. ","is_moderator":false,"karma":91,"avatar_url":"/avatars/emschwartz-100.png","invited_by_user":"danderson","github_username":"emschwartz","twitter_username":"_emschwartz"},"tags":["debugging","devops"]},{"short_id":"wm6o0o","short_id_url":"https://lobste.rs/s/wm6o0o","created_at":"2023-07-11T00:14:22.000-05:00","title":"FloatZone: Accelerating Memory Error Detection using the Floating Point Unit","url":"https://download.vusec.net/papers/floatzone_sec23.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wm6o0o/floatzone_accelerating_memory_error","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":97473,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","pdf"]},{"short_id":"bsnbgk","short_id_url":"https://lobste.rs/s/bsnbgk","created_at":"2023-07-11T00:11:11.000-05:00","title":"Shortening the Let’s Encrypt Chain of Trust","url":"https://letsencrypt.org/2023/07/10/cross-sign-expiration.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bsnbgk/shortening_let_s_encrypt_chain_trust","submitter_user":{"username":"toastal","created_at":"2021-07-12T04:15:50.000-05:00","is_admin":false,"about":"a disciple of functional programming\r\n\r\nStop using Microsoft products; say _NO_ to neo-EEE including Windows, WSL, GitHub, Sponsors, Copilot, VS Code, Codespaces, Azure, npm, Teams","is_moderator":false,"karma":2302,"avatar_url":"/avatars/toastal-100.png","invited_by_user":"gerikson","github_username":"toastal","twitter_username":"toastal","keybase_signatures":[{"kb_username":"toastal","sig_hash":"be4ea8b4b314c4342e5dd97f1d845cc8586de0b0ec40ab4cd872f31071eab6030f"}]},"tags":["security","web"]},{"short_id":"o9bgcz","short_id_url":"https://lobste.rs/s/o9bgcz","created_at":"2023-07-10T20:56:17.000-05:00","title":"Back-end parallelism in the Rust compiler","url":"https://nnethercote.github.io/2023/07/11/back-end-parallelism-in-the-rust-compiler.html","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o9bgcz/back_end_parallelism_rust_compiler","submitter_user":{"username":"msfjarvis","created_at":"2020-04-24T11:41:56.000-05:00","is_admin":false,"about":"Android and Kotlin developer, currently working for [Dyte](https://dyte.io/)","is_moderator":false,"karma":1111,"avatar_url":"/avatars/msfjarvis-100.png","invited_by_user":"Amolith","github_username":"msfjarvis","twitter_username":"msfjarvis"},"tags":["rust"]},{"short_id":"iakokj","short_id_url":"https://lobste.rs/s/iakokj","created_at":"2023-07-10T19:04:55.000-05:00","title":"The many faces of LLVM PGO and FDO","url":"https://aaupov.github.io/blog/2023/07/09/pgo","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iakokj/many_faces_llvm_pgo_fdo","submitter_user":{"username":"sanxiyn","created_at":"2015-01-21T09:51:34.000-06:00","is_admin":false,"about":"I made the initial port of Rust to ARM and Android.","is_moderator":false,"karma":11259,"avatar_url":"/avatars/sanxiyn-100.png","invited_by_user":"steveklabnik","github_username":"sanxiyn","twitter_username":"sanxiyn"},"tags":["compilers"]},{"short_id":"r3kq9h","short_id_url":"https://lobste.rs/s/r3kq9h","created_at":"2023-07-10T16:55:19.000-05:00","title":"Microsoft's userspace keylogger tutorial","url":"https://cohost.org/blep/post/1982850-i-think-microsoft-wi","score":3,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r3kq9h/microsoft_s_userspace_keylogger","submitter_user":{"username":"cat","created_at":"2021-10-26T01:03:41.000-05:00","is_admin":false,"about":"- Enjoys petting rats\r\n- SRE at Google\r\n- Computational Linguistics MS student\r\n- Queer","is_moderator":false,"karma":11,"avatar_url":"/avatars/cat-100.png","invited_by_user":"Irene"},"tags":["security","windows"]},{"short_id":"vxnsod","short_id_url":"https://lobste.rs/s/vxnsod","created_at":"2023-07-10T16:43:57.000-05:00","title":"Float Compression","url":"https://aras-p.info/blog/2023/01/29/Float-Compression-0-Intro/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vxnsod/float_compression","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":6839,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["performance","programming"]},{"short_id":"9rdmxl","short_id_url":"https://lobste.rs/s/9rdmxl","created_at":"2023-07-10T15:06:51.000-05:00","title":"plotgen: Parse data and generate plotting scripts based on plotly","url":"https://github.com/bgottschall/plotgen#plotgen-easy-data-parsing-and-plot-script-generator","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9rdmxl/plotgen_parse_data_generate_plotting","submitter_user":{"username":"pbsds","created_at":"2019-07-10T16:28:57.000-05:00","is_admin":false,"about":"All you need to read is the headline.","is_moderator":false,"karma":384,"avatar_url":"/avatars/pbsds-100.png","invited_by_user":"jornane"},"tags":["python","visualization"]},{"short_id":"lsesfs","short_id_url":"https://lobste.rs/s/lsesfs","created_at":"2023-07-10T14:27:13.000-05:00","title":"Understanding zero-knowledge proofs","url":"https://avestura.dev/blog/zero-knowledge-proofs","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lsesfs/understanding_zero_knowledge_proofs","submitter_user":{"username":"avestura","created_at":"2023-06-21T15:24:27.000-05:00","is_admin":false,"about":"We must know. We will know.","is_moderator":false,"karma":64,"avatar_url":"/avatars/avestura-100.png","invited_by_user":"river","github_username":"avestura"},"tags":["compsci","cryptography","math"]},{"short_id":"7lmn0y","short_id_url":"https://lobste.rs/s/7lmn0y","created_at":"2023-07-10T14:20:33.000-05:00","title":"Usability of modern solutions for logs' analysis and debugging is totally screwed","url":"","score":5,"flags":0,"comment_count":13,"description":"\u003cp\u003eWhy we generate and collect logs? Mostly for further analysis and debugging. For example:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTo find all the error logs with a particular substring in them, and then to inspect them visually.\u003c/li\u003e\n\u003cli\u003eTo find logs for the particular request_id, user_id or trace_id and then to inspect them visually.\u003c/li\u003e\n\u003cli\u003eTo calculate the number of successful/unsuccessful hacker attempts to SSH into your host.\u003c/li\u003e\n\u003cli\u003eTo calculate stats over web logs for a particular ip, domain, etc.\u003c/li\u003e\n\u003cli\u003eTo calculate the frequency of logs with particular substrings.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAll these tasks are easy to perform from command-line when logs are stored in plain files. Just start with \u003ccode\u003ecat /path/to/log | grep some-substring\u003c/code\u003e. Then iteratively apply the needed commands to the selected logs - \u003ccode\u003ewc\u003c/code\u003e, \u003ccode\u003eawk\u003c/code\u003e, more \u003ccode\u003egrep\u003c/code\u003e, \u003ccode\u003eless\u003c/code\u003e, \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003esort\u003c/code\u003e, \u003ccode\u003euniq\u003c/code\u003e, \u003ccode\u003ecut\u003c/code\u003e, etc. - until the desired result is obtained. This approach serves great for analyzing locally stored logs on a few hosts. It doesn’t scale well for cases when logs should be analyzed across hundreds of hosts and/or  application instances. Of course, there are command-line tools for parallel execution of unix commands across hundreds of hosts, which can help with this case. But we wanted better solution.\u003c/p\u003e\n\u003cp\u003eSo we’ve got ElasticSearch and Grafana Loki. Both solutions allow collecting logs from hundreds of hosts/applications. But they totally screw up analysis of these logs. They provide awkward to use query languages with silly limitations (such as the number of returned log lines per query) and very limited integration with existing command-line tools for logs’ analysis mentioned above. For example, you cannot easily perform the equivalent of \u003ccode\u003ecat /log/file | grep some-string | my-custom-script-for-analysis\u003c/code\u003e when logs stored in ElasticSearch and Grafana Loki contain millions or billions of lines with \u003ccode\u003esome-string\u003c/code\u003e substring.\u003c/p\u003e\n\u003cp\u003eElasticSearch and Loki also need non-trivial configuration, index creation, performance tuning and maintenance. Do we really want paying this price in exchange to get an awkward ability to analyze logs collected from hundreds of hosts/applications?\u003c/p\u003e\n\u003cp\u003eProbably, it is time to use better solution, which allows collecting logs from hundreds of sources and then analyzing them with good old command-line tools in the usual ergonomic way? This question was raised many times when I had to analyze logs with modern solutions for logs. I couldn’t find the proper solution, so decided creating it on my own based on my experience with creating VictoriaMetrics. So I created open-source user-friendly database for logs - \u003ca href=\"https://docs.victoriametrics.com/VictoriaLogs/\" rel=\"ugc\"\u003eVictoriaLogs\u003c/a\u003e. It accepts structured and unstructured logs from popular log shippers such as Filebeat, Fluentbit, Logstash, Vector, etc., it supports fast full-text search without any configuration / tuning, and it has perfect integration with good old command-line tools. Read more about the integration \u003ca href=\"https://docs.victoriametrics.com/VictoriaLogs/querying/#command-line\" rel=\"ugc\"\u003ehere\u003c/a\u003e. Give it a try and share your experience!\u003c/p\u003e\n","description_plain":"Why we generate and collect logs? Mostly for further analysis and debugging. For example:\r\n\r\n- To find all the error logs with a particular substring in them, and then to inspect them visually.\r\n- To find logs for the particular request_id, user_id or trace_id and then to inspect them visually.\r\n- To calculate the number of successful/unsuccessful hacker attempts to SSH into your host.\r\n- To calculate stats over web logs for a particular ip, domain, etc.\r\n- To calculate the frequency of logs with particular substrings.\r\n\r\nAll these tasks are easy to perform from command-line when logs are stored in plain files. Just start with `cat /path/to/log | grep some-substring`. Then iteratively apply the needed commands to the selected logs - `wc`, `awk`, more `grep`, `less`, `head`, `sort`, `uniq`, `cut`, etc. - until the desired result is obtained. This approach serves great for analyzing locally stored logs on a few hosts. It doesn't scale well for cases when logs should be analyzed across hundreds of hosts and/or  application instances. Of course, there are command-line tools for parallel execution of unix commands across hundreds of hosts, which can help with this case. But we wanted better solution.\r\n\r\nSo we've got ElasticSearch and Grafana Loki. Both solutions allow collecting logs from hundreds of hosts/applications. But they totally screw up analysis of these logs. They provide awkward to use query languages with silly limitations (such as the number of returned log lines per query) and very limited integration with existing command-line tools for logs' analysis mentioned above. For example, you cannot easily perform the equivalent of `cat /log/file | grep some-string | my-custom-script-for-analysis` when logs stored in ElasticSearch and Grafana Loki contain millions or billions of lines with `some-string` substring.\r\n\r\nElasticSearch and Loki also need non-trivial configuration, index creation, performance tuning and maintenance. Do we really want paying this price in exchange to get an awkward ability to analyze logs collected from hundreds of hosts/applications?\r\n\r\nProbably, it is time to use better solution, which allows collecting logs from hundreds of sources and then analyzing them with good old command-line tools in the usual ergonomic way? This question was raised many times when I had to analyze logs with modern solutions for logs. I couldn't find the proper solution, so decided creating it on my own based on my experience with creating VictoriaMetrics. So I created open-source user-friendly database for logs - [VictoriaLogs](https://docs.victoriametrics.com/VictoriaLogs/). It accepts structured and unstructured logs from popular log shippers such as Filebeat, Fluentbit, Logstash, Vector, etc., it supports fast full-text search without any configuration / tuning, and it has perfect integration with good old command-line tools. Read more about the integration [here](https://docs.victoriametrics.com/VictoriaLogs/querying/#command-line). Give it a try and share your experience!","comments_url":"https://lobste.rs/s/7lmn0y/usability_modern_solutions_for_logs","submitter_user":{"username":"valyala","created_at":"2020-01-26T16:58:51.000-06:00","is_admin":false,"about":"CTO at VictoriaMetrics, creator of VictoriaLogs","is_moderator":false,"karma":12,"avatar_url":"/avatars/valyala-100.png","invited_by_user":"bilinguliar","github_username":"valyala"},"tags":["devops"]},{"short_id":"yrn2et","short_id_url":"https://lobste.rs/s/yrn2et","created_at":"2023-07-10T13:50:52.000-05:00","title":"Assembly as a first programming language?","url":"","score":13,"flags":0,"comment_count":21,"description":"\u003cp\u003eI came across this book[1] and was intrigued by the premise. Has anyone learned assembly as a first programming language or known anyone who has?\u003c/p\u003e\n\u003cp\u003eI can imagine it working out well for certain students, but I don’t fully agree that it would make higher level languages easier as the author claims, or at least I have trouble imagining how it would. That said, I’m always grateful for my own experience with C as one of my first languages and exposure to explicit type declarations and pointers and memory management. But assembly is a different beast, involving a different paradigm altogether\u003c/p\u003e\n\u003cp\u003eInterested in hearing peoples experiences and/or thoughts on the pedagogical merits/anti-merits\u003c/p\u003e\n\u003cp\u003e[1] \u003ca href=\"https://link.springer.com/book/10.1007/978-1-4842-7437-8\" rel=\"ugc\"\u003ehttps://link.springer.com/book/10.1007/978-1-4842-7437-8\u003c/a\u003e\u003c/p\u003e\n","description_plain":"I came across this book[1] and was intrigued by the premise. Has anyone learned assembly as a first programming language or known anyone who has?\r\n\r\nI can imagine it working out well for certain students, but I don't fully agree that it would make higher level languages easier as the author claims, or at least I have trouble imagining how it would. That said, I'm always grateful for my own experience with C as one of my first languages and exposure to explicit type declarations and pointers and memory management. But assembly is a different beast, involving a different paradigm altogether \r\n\r\nInterested in hearing peoples experiences and/or thoughts on the pedagogical merits/anti-merits \r\n\r\n[1] https://link.springer.com/book/10.1007/978-1-4842-7437-8","comments_url":"https://lobste.rs/s/yrn2et/assembly_as_first_programming_language","submitter_user":{"username":"vector_spaces","created_at":"2020-01-28T00:07:17.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":231,"avatar_url":"/avatars/vector_spaces-100.png","invited_by_user":"bandali"},"tags":["ask","assembly"]},{"short_id":"3iezqb","short_id_url":"https://lobste.rs/s/3iezqb","created_at":"2023-07-10T13:36:47.000-05:00","title":"Google Chrome ad features checklist","url":"https://blog.zgp.org/google-chrome-checklist/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3iezqb/google_chrome_ad_features_checklist","submitter_user":{"username":"freddyb","created_at":"2017-02-02T09:12:16.000-06:00","is_admin":false,"about":"I like browser security and web security. Both at work (for Mozilla from Berlin, Germany) and for fun.","is_moderator":false,"karma":10476,"avatar_url":"/avatars/freddyb-100.png","invited_by_user":"stas","keybase_signatures":[{"kb_username":"freddyb","sig_hash":"550e2f5b27d4b5d558c02dfb2b23a628e90635183c93f993eeea4e16b20c51150f"}]},"tags":["browsers"]},{"short_id":"gaz50h","short_id_url":"https://lobste.rs/s/gaz50h","created_at":"2023-07-10T12:38:07.000-05:00","title":"How Ahrefs Saved US$400M in 3 Years by NOT Going to the Cloud","url":"https://tech.ahrefs.com/how-ahrefs-saved-us-400m-in-3-years-by-not-going-to-the-cloud-8939dd930af8","score":16,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gaz50h/how_ahrefs_saved_us_400m_3_years_by_not","submitter_user":{"username":"athaller","created_at":"2021-01-13T05:40:18.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":34,"avatar_url":"/avatars/athaller-100.png","invited_by_user":"mre"},"tags":["performance"]},{"short_id":"ycel14","short_id_url":"https://lobste.rs/s/ycel14","created_at":"2023-07-10T12:36:10.000-05:00","title":"The easiest way to speed up Python with Rust","url":"https://pythonspeed.com/articles/easiest-rust-python/","score":25,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ycel14/easiest_way_speed_up_python_with_rust","submitter_user":{"username":"itamarst","created_at":"2016-04-28T10:05:47.000-05:00","is_admin":false,"about":"Writing about Python performance and faster development at https://pythonspeed.com, as well as offering consulting services. Writing about work/life balance and other software engineering skills at https://codewithoutrules.com.\r\n","is_moderator":false,"karma":5426,"avatar_url":"/avatars/itamarst-100.png","invited_by_user":"0x2ba22e11"},"tags":["python","rust"]},{"short_id":"3pbigc","short_id_url":"https://lobste.rs/s/3pbigc","created_at":"2023-07-10T12:21:28.000-05:00","title":"Bridging fuzzing and property testing","url":"https://blog.yoshuawuyts.com/bridging-fuzzing-and-property-testing/","score":6,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3pbigc/bridging_fuzzing_property_testing","submitter_user":{"username":"matklad","created_at":"2019-07-02T07:23:10.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":6627,"avatar_url":"/avatars/matklad-100.png","invited_by_user":"skade","github_username":"matklad"},"tags":["rust","testing"]},{"short_id":"m1g36o","short_id_url":"https://lobste.rs/s/m1g36o","created_at":"2023-07-10T12:02:01.000-05:00","title":"The Slimbook Executive is here, and it's majestic","url":"https://www.dedoimedo.com/computers/slimbook-executive-here.html","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/m1g36o/slimbook_executive_is_here_it_s_majestic","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":21603,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["hardware","linux"]},{"short_id":"0vjays","short_id_url":"https://lobste.rs/s/0vjays","created_at":"2023-07-10T11:35:25.000-05:00","title":"A Rust User's Guide to Generics","url":"https://www.worldofbs.com/rust-generics/","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0vjays/rust_user_s_guide_generics","submitter_user":{"username":"cgenschwap","created_at":"2020-07-01T16:54:12.000-05:00","is_admin":false,"about":"$SELF: Building robust, scalable, and fault-tolerant systems is my passion.\r\n\r\n$BLOG: https://www.worldofbs.com/\r\n\r\n$JOB: Distributed and low-latency systems in Rust at AWS.\r\n\r\n$TECH: Framework + NixOS + Vim + Rust, what else could you ask for?\r\n","is_moderator":false,"karma":688,"avatar_url":"/avatars/cgenschwap-100.png","invited_by_user":"pushcx"},"tags":["rust"]},{"short_id":"k47y9w","short_id_url":"https://lobste.rs/s/k47y9w","created_at":"2023-07-10T11:31:26.000-05:00","title":"Exploring JS: JavaScript books for programmers","url":"https://exploringjs.com/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eAccording to \u003ca href=\"https://fosstodon.org/@rauschma/110689933086175455\" rel=\"ugc\"\u003ehttps://fosstodon.org/@rauschma/110689933086175455\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e“My books on #JavaScript and #TypeScript are free to read online”\u003c/p\u003e\n","description_plain":"According to https://fosstodon.org/@rauschma/110689933086175455:\r\n\r\n\"My books on #JavaScript and #TypeScript are free to read online\"","comments_url":"https://lobste.rs/s/k47y9w/exploring_js_javascript_books_for","submitter_user":{"username":"deejayy","created_at":"2021-07-12T16:23:45.000-05:00","is_admin":false,"about":"Mainly in frontend development (Angular), but went thru the last 25 years in IT.","is_moderator":false,"karma":623,"avatar_url":"/avatars/deejayy-100.png","invited_by_user":"indigo","github_username":"deejayy"},"tags":["book","javascript","programming"]},{"short_id":"up99tf","short_id_url":"https://lobste.rs/s/up99tf","created_at":"2023-07-10T11:13:52.000-05:00","title":"UniHiker review - A Linux-based STEM education platform with IoT and AI support","url":"https://www.cnx-software.com/2023/07/10/unihiker-review-a-linux-based-stem-education-platform-with-iot-and-ai-support-microbit-edge-connector/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/up99tf/unihiker_review_linux_based_stem","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":9111,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"tags":["hardware","linux"]},{"short_id":"gd5f7c","short_id_url":"https://lobste.rs/s/gd5f7c","created_at":"2023-07-10T11:05:55.000-05:00","title":"Keep Linux Open and Free—We Can’t Afford Not To","url":"https://www.oracle.com/news/announcement/blog/keep-linux-open-and-free-2023-07-10/","score":7,"flags":1,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gd5f7c/keep_linux_open_free_we_can_t_afford_not","submitter_user":{"username":"rjzak","created_at":"2022-01-07T12:41:11.000-06:00","is_admin":false,"about":"Greetings, y'all!","is_moderator":false,"karma":189,"avatar_url":"/avatars/rjzak-100.png","invited_by_user":"waddlesplash","github_username":"rjzak","twitter_username":"rjzak","keybase_signatures":[{"kb_username":"rjzak","sig_hash":"efa767ee332339e8b027d58eb6d45d5489fc6af25f22802866192dcc5ba32eb30f"}]},"tags":["linux"]},{"short_id":"6uo0rs","short_id_url":"https://lobste.rs/s/6uo0rs","created_at":"2023-07-10T10:43:38.000-05:00","title":"The controller pattern is awful (and other OO heresy) (2013)","url":"https://eev.ee/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6uo0rs/controller_pattern_is_awful_other_oo","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":6839,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["python"]},{"short_id":"swyfel","short_id_url":"https://lobste.rs/s/swyfel","created_at":"2023-07-10T10:28:05.000-05:00","title":"Attacking Microcontroller Readout Protections with Fault Attacks – Emproof","url":"https://www.emproof.com/attacking-microcontroller-readout-protections-with-fault-attacks/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/swyfel/attacking_microcontroller_readout","submitter_user":{"username":"serhack","created_at":"2020-07-21T09:01:02.000-05:00","is_admin":false,"about":"Security Researcher","is_moderator":false,"karma":228,"avatar_url":"/avatars/serhack-100.png","invited_by_user":"asymptotically"},"tags":["hardware","security"]},{"short_id":"b8gubk","short_id_url":"https://lobste.rs/s/b8gubk","created_at":"2023-07-10T10:07:31.000-05:00","title":"Feature Flags: Theory vs Reality","url":"https://bpapillon.com/post/feature-flags-theory-vs-reality/","score":13,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/b8gubk/feature_flags_theory_vs_reality","submitter_user":{"username":"bpapillon","created_at":"2021-09-22T08:32:35.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":13,"avatar_url":"/avatars/bpapillon-100.png","invited_by_user":"mrjoes"},"tags":["devops","practices","rant"]},{"short_id":"xshle9","short_id_url":"https://lobste.rs/s/xshle9","created_at":"2023-07-10T10:01:00.000-05:00","title":"Why We Replaced Firecracker with QEMU","url":"https://hocus.dev/blog/qemu-vs-firecracker/","score":7,"flags":2,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xshle9/why_we_replaced_firecracker_with_qemu","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":40280,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["virtualization"]},{"short_id":"gyi4iy","short_id_url":"https://lobste.rs/s/gyi4iy","created_at":"2023-07-10T08:43:43.000-05:00","title":"malwaredb-rs: MalwareDB: bookkeeping for malware, goodware, and unknown files with relationship discovery","url":"https://github.com/malwaredb/malwaredb-rs","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gyi4iy/malwaredb_rs_malwaredb_bookkeeping_for","submitter_user":{"username":"rjzak","created_at":"2022-01-07T12:41:11.000-06:00","is_admin":false,"about":"Greetings, y'all!","is_moderator":false,"karma":189,"avatar_url":"/avatars/rjzak-100.png","invited_by_user":"waddlesplash","github_username":"rjzak","twitter_username":"rjzak","keybase_signatures":[{"kb_username":"rjzak","sig_hash":"efa767ee332339e8b027d58eb6d45d5489fc6af25f22802866192dcc5ba32eb30f"}]},"tags":["databases","release","rust","security"]}]