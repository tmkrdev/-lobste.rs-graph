[{"short_id":"11jyv6","short_id_url":"https://lobste.rs/s/11jyv6","created_at":"2022-07-08T00:42:32.000-05:00","title":"Deep dive into Caddy web server","url":"https://sourcegraph.com/notebooks/Tm90ZWJvb2s6MTM2Nw==","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/11jyv6/deep_dive_into_caddy_web_server","submitter_user":{"username":"animesh","created_at":"2013-06-06T23:47:59.000-05:00","is_admin":false,"about":"~","is_moderator":false,"karma":205,"avatar_url":"/avatars/animesh-100.png","invited_by_user":"conroy","twitter_username":"AnimeshBulusu"},"tags":["go","networking"]},{"short_id":"s0w4ov","short_id_url":"https://lobste.rs/s/s0w4ov","created_at":"2022-07-08T00:11:49.000-05:00","title":"Practically Correct, Just-in-Time Shell Script Parallelization","url":"https://angelhof.github.io/files/papers/pashjit-2022-osdi.pdf","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eAbstract:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eRecent shell-script parallelization systems enjoy mostly automated speedups by parallelizing scripts ahead-of-time. Unfortunately, such static parallelization is hampered by dynamic behavior pervasive in shell scripts—e.g., variable expansion and command substitution—which often requires reasoning about the current state of the shell and filesystem.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe present a just-in-time (JIT) shell-script compiler, PaSh-JIT, that intermixes evaluation and parallelization during a script’s run-time execution. JIT parallelization collects runtime information about the system’s state, but must not alter the behavior of the original script and must maintain minimal overhead. PaSh-JIT addresses these challenges by (1) using a dynamic interposition framework, guided by a static preprocessing pass, (2) developing runtime support for transparently pausing and resuming shell execution; and (3) operating as a stateful server, communicating with the current shell by passing messages—all without requiring modifications to the system’s underlying shell interpreter.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen run on a wide variety of benchmarks, including the POSIX shell test suite, PaSh-JIT (1) does not break scripts, even in cases that are likely to break shells in widespread use; and (2) offers significant speedups, whenever parallelization is possible. These results show that PaSh-JIT can be used as a drop-in replacement for any non-interactive shell use, providing significant speedups without any risk of breakage.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"Abstract:\r\n\r\n\u003e Recent shell-script parallelization systems enjoy mostly automated speedups by parallelizing scripts ahead-of-time. Unfortunately, such static parallelization is hampered by dynamic behavior pervasive in shell scripts—e.g., variable expansion and command substitution—which often requires reasoning about the current state of the shell and filesystem.\r\n\r\n\u003e We present a just-in-time (JIT) shell-script compiler, PaSh-JIT, that intermixes evaluation and parallelization during a script’s run-time execution. JIT parallelization collects runtime information about the system’s state, but must not alter the behavior of the original script and must maintain minimal overhead. PaSh-JIT addresses these challenges by (1) using a dynamic interposition framework, guided by a static preprocessing pass, (2) developing runtime support for transparently pausing and resuming shell execution; and (3) operating as a stateful server, communicating with the current shell by passing messages—all without requiring modifications to the system’s underlying shell interpreter.\r\n\r\n\u003e When run on a wide variety of benchmarks, including the POSIX shell test suite, PaSh-JIT (1) does not break scripts, even in cases that are likely to break shells in widespread use; and (2) offers significant speedups, whenever parallelization is possible. These results show that PaSh-JIT can be used as a drop-in replacement for any non-interactive shell use, providing significant speedups without any risk of breakage.","comments_url":"https://lobste.rs/s/s0w4ov/practically_correct_just_time_shell","submitter_user":{"username":"mjn","created_at":"2015-02-11T16:45:32.000-06:00","is_admin":false,"about":"I'm an academic in artificial intelligence. My research has mostly been on AI \u0026 games, both games as a testbed for AI and AI for game design. I'm also interested in other kinds of human/machine co-creation, computationally modeling design spaces, and history of technology. Currently an academic in Washington, D.C. (previously: Cornwall, Copenhagen, Santa Cruz, Atlanta, ...).\r\n\r\nWebsite: [kmjn.org](http://www.kmjn.org/)","is_moderator":false,"karma":6550,"avatar_url":"/avatars/mjn-100.png","invited_by_user":"itistoday","twitter_username":"mm_jj_nn"},"tags":["pdf","performance","unix"]},{"short_id":"jhp7yb","short_id_url":"https://lobste.rs/s/jhp7yb","created_at":"2022-07-07T23:48:29.000-05:00","title":"Why DRY is the most over-rated programming principle","url":"https://gordonc.bearblog.dev/dry-most-over-rated-programming-principle/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jhp7yb/why_dry_is_most_over_rated_programming","submitter_user":{"username":"dailymorn","created_at":"2018-01-15T15:12:48.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":109,"avatar_url":"/avatars/dailymorn-100.png","invited_by_user":"grayson"},"tags":["practices","programming"]},{"short_id":"ocaaum","short_id_url":"https://lobste.rs/s/ocaaum","created_at":"2022-07-07T23:39:04.000-05:00","title":"Where Browsers Come From","url":"https://bkardell.com/blog/WhereBrowsersComeFrom.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ocaaum/where_browsers_come_from","submitter_user":{"username":"freddyb","created_at":"2017-02-02T09:12:16.000-06:00","is_admin":false,"about":"Security. Mostly in Browsers, but not exclusively.","is_moderator":false,"karma":8186,"avatar_url":"/avatars/freddyb-100.png","invited_by_user":"stas","keybase_signatures":[{"kb_username":"freddyb","sig_hash":"550e2f5b27d4b5d558c02dfb2b23a628e90635183c93f993eeea4e16b20c51150f"}]},"tags":["browsers"]},{"short_id":"mm0vml","short_id_url":"https://lobste.rs/s/mm0vml","created_at":"2022-07-07T23:30:30.000-05:00","title":"Conal Elliott: Efficient automatic differentiation made easy via category theory (2020)","url":"https://www.youtube.com/watch?v=17gfCTnw6uE","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mm0vml/conal_elliott_efficient_automatic","submitter_user":{"username":"Corbin","created_at":"2018-10-13T21:40:32.000-05:00","is_admin":false,"about":"Secure distributed computation should not be hard.\r\n\r\nmi pu'i tavla fo lo jbobau .i mi'e la korvo","is_moderator":false,"karma":3849,"avatar_url":"/avatars/Corbin-100.png","invited_by_user":"infinisil"},"tags":["compilers","math","video"]},{"short_id":"ivu5nd","short_id_url":"https://lobste.rs/s/ivu5nd","created_at":"2022-07-07T21:45:37.000-05:00","title":"Markov Chat Bot Disaster Story","url":"https://gist.github.com/aconbere/1982a5eb17b77817017a3da50914732f","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ivu5nd/markov_chat_bot_disaster_story","submitter_user":{"username":"ahobson","created_at":"2014-04-18T16:08:03.000-05:00","is_admin":false,"about":"Developer, Manager, Clojure enthusiast\r\n","is_moderator":false,"karma":14,"avatar_url":"/avatars/ahobson-100.png","invited_by_user":"rsanders"},"tags":["ai","devops"]},{"short_id":"d71m5m","short_id_url":"https://lobste.rs/s/d71m5m","created_at":"2022-07-07T20:27:13.000-05:00","title":"Microsoft To Ban Commercial Open Source from App Store","url":"https://sfconservancy.org/blog/2022/jul/07/microsoft-bans-commerical-open-source-in-app-store/","score":1,"flags":2,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/d71m5m/microsoft_ban_commercial_open_source","submitter_user":{"username":"Seirdy","created_at":"2020-01-28T20:13:49.000-06:00","is_admin":false,"about":"He/Him, It/Its. Full bio, contact info, etc. on my site's [about page](https://seirdy.one/about/).\r\n\r\nI also have a Gemini capsule at gemini://seirdy.one\r\n\r\nTech interests: accessibility, the IndieWeb, software freedom.","is_moderator":false,"karma":730,"avatar_url":"/avatars/Seirdy-100.png","invited_by_user":"Hail_Spacecake","github_username":"Seirdy"},"tags":["windows"]},{"short_id":"xl4efa","short_id_url":"https://lobste.rs/s/xl4efa","created_at":"2022-07-07T20:09:48.000-05:00","title":"Closing the B-tree vs. LSM-tree Write Amplification Gap on Modern Storage Hardware with Built-in Transparent Compression","url":"https://arxiv.org/pdf/2107.13987.pdf","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xl4efa/closing_b_tree_vs_lsm_tree_write","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Building open-source data tools at [multiprocess.io](https://multiprocess.io).","is_moderator":false,"karma":3599,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"phil_eaton"},"tags":["databases","pdf"]},{"short_id":"ivmzqb","short_id_url":"https://lobste.rs/s/ivmzqb","created_at":"2022-07-07T17:56:19.000-05:00","title":"PocketBase - Open Source backend in 1 file","url":"https://pocketbase.io/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ivmzqb/pocketbase_open_source_backend_1_file","submitter_user":{"username":"TeddyDD","created_at":"2019-03-05T16:08:51.000-06:00","is_admin":false,"about":"visual artist / programmer","is_moderator":false,"karma":178,"avatar_url":"/avatars/TeddyDD-100.png","invited_by_user":"nomto","github_username":"TeddyDD"},"tags":["go"]},{"short_id":"cvvfwm","short_id_url":"https://lobste.rs/s/cvvfwm","created_at":"2022-07-07T15:38:56.000-05:00","title":"Introducing the r600/NIR back-end","url":"https://www.collabora.com/news-and-blog/blog/2022/07/07/introducing-the-r600-nir-back-end/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cvvfwm/introducing_r600_nir_back_end","submitter_user":{"username":"mfilion","created_at":"2020-04-23T10:57:43.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":392,"avatar_url":"/avatars/mfilion-100.png","invited_by_user":"eloy"},"tags":["linux"]},{"short_id":"7ukyhq","short_id_url":"https://lobste.rs/s/7ukyhq","created_at":"2022-07-07T15:19:06.000-05:00","title":"TensorFlow Lite for Commodore 64","url":"https://github.com/nickbild/tflite_c64","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7ukyhq/tensorflow_lite_for_commodore_64","submitter_user":{"username":"sknebel","created_at":"2022-06-16T13:27:02.000-05:00","is_admin":false,"about":"software dev from Berlin, electronics DIY","is_moderator":false,"karma":78,"avatar_url":"/avatars/sknebel-100.png","invited_by_user":"aaronpk"},"tags":["ai"]},{"short_id":"myqupe","short_id_url":"https://lobste.rs/s/myqupe","created_at":"2022-07-07T14:54:48.000-05:00","title":"Pure CSS first person 3D website portfolio without any JavaScript","url":"https://garethheyes.co.uk","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/myqupe/pure_css_first_person_3d_website","submitter_user":{"username":"freddyb","created_at":"2017-02-02T09:12:16.000-06:00","is_admin":false,"about":"Security. Mostly in Browsers, but not exclusively.","is_moderator":false,"karma":8186,"avatar_url":"/avatars/freddyb-100.png","invited_by_user":"stas","keybase_signatures":[{"kb_username":"freddyb","sig_hash":"550e2f5b27d4b5d558c02dfb2b23a628e90635183c93f993eeea4e16b20c51150f"}]},"tags":["web"]},{"short_id":"btl4at","short_id_url":"https://lobste.rs/s/btl4at","created_at":"2022-07-07T14:07:56.000-05:00","title":"SOC2: The Screenshots Will Continue Until Security Improves","url":"https://fly.io/blog/soc2-the-screenshots-will-continue-until-security-improves/","score":13,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/btl4at/soc2_screenshots_will_continue_until","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":4332,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["security"]},{"short_id":"flxao4","short_id_url":"https://lobste.rs/s/flxao4","created_at":"2022-07-07T14:05:37.000-05:00","title":"PDFI: The New Ghostscript PDF Interpreter","url":"https://ghostscript.com/blog/pdfi.html","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/flxao4/pdfi_new_ghostscript_pdf_interpreter","submitter_user":{"username":"mjn","created_at":"2015-02-11T16:45:32.000-06:00","is_admin":false,"about":"I'm an academic in artificial intelligence. My research has mostly been on AI \u0026 games, both games as a testbed for AI and AI for game design. I'm also interested in other kinds of human/machine co-creation, computationally modeling design spaces, and history of technology. Currently an academic in Washington, D.C. (previously: Cornwall, Copenhagen, Santa Cruz, Atlanta, ...).\r\n\r\nWebsite: [kmjn.org](http://www.kmjn.org/)","is_moderator":false,"karma":6550,"avatar_url":"/avatars/mjn-100.png","invited_by_user":"itistoday","twitter_username":"mm_jj_nn"},"tags":["release"]},{"short_id":"a7woyg","short_id_url":"https://lobste.rs/s/a7woyg","created_at":"2022-07-07T13:56:16.000-05:00","title":"pagy - The Best Pagination Ruby Gem","url":"https://github.com/ddnexus/pagy","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/a7woyg/pagy_best_pagination_ruby_gem","submitter_user":{"username":"gregnavis","created_at":"2014-07-10T09:00:45.000-05:00","is_admin":false,"about":"I help to scale Heroku-hosted Rails apps.\r\n\r\nhttp://www.gregnavis.com/scaling-rails-on-heroku/\r\n\r\ncontact@gregnavis.com","is_moderator":false,"karma":606,"avatar_url":"/avatars/gregnavis-100.png","invited_by_user":"mempko"},"tags":["ruby"]},{"short_id":"rssbig","short_id_url":"https://lobste.rs/s/rssbig","created_at":"2022-07-07T13:19:04.000-05:00","title":"A curated list of papers for Software Engineers","url":"https://github.com/facundoolano/software-papers/","score":19,"flags":1,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rssbig/curated_list_papers_for_software","submitter_user":{"username":"facundoolano","created_at":"2016-03-20T16:03:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":174,"avatar_url":"/avatars/facundoolano-100.png","invited_by_user":"unbalancedparentheses"},"tags":["compsci","programming","science"]},{"short_id":"xo2zaq","short_id_url":"https://lobste.rs/s/xo2zaq","created_at":"2022-07-07T12:47:20.000-05:00","title":"I built a keyboard PCB and wrote firmware for it in Rust","url":"https://www.reddit.com/r/MechanicalKeyboards/comments/vtlujd/i_built_a_keyboard_pcb_and_wrote_firmware_for_it/","score":17,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xo2zaq/i_built_keyboard_pcb_wrote_firmware_for_it","submitter_user":{"username":"briankung","created_at":"2017-04-03T00:20:29.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1729,"avatar_url":"/avatars/briankung-100.png","invited_by_user":"gsylvie"},"tags":["hardware","rust"]},{"short_id":"mifvpa","short_id_url":"https://lobste.rs/s/mifvpa","created_at":"2022-07-07T12:28:00.000-05:00","title":"Painlessly developing Python on NixOS with pipenv (2018)","url":"https://sid-kap.github.io/posts/2018-03-08-nix-pipenv.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mifvpa/painlessly_developing_python_on_nixos","submitter_user":{"username":"rjpcasalino","created_at":"2017-01-06T17:15:39.000-06:00","is_admin":false,"about":"If problems occur, consult the internet.","is_moderator":false,"karma":1133,"avatar_url":"/avatars/rjpcasalino-100.png","invited_by_user":"bsima"},"tags":["nix","python"]},{"short_id":"xnhxzc","short_id_url":"https://lobste.rs/s/xnhxzc","created_at":"2022-07-07T09:57:54.000-05:00","title":"Analyzing and Mitigating XML External Entity Vulnerabilities in Apache NiFi","url":"https://exceptionfactory.com/posts/2022/05/31/analyzing-and-mitigating-xml-external-entity-vulnerabilities-in-apache-nifi/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xnhxzc/analyzing_mitigating_xml_external","submitter_user":{"username":"thesnarky1","created_at":"2020-06-09T14:41:58.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":310,"avatar_url":"/avatars/thesnarky1-100.png","invited_by_user":"pushcx"},"tags":["java","security"]},{"short_id":"rj6xyd","short_id_url":"https://lobste.rs/s/rj6xyd","created_at":"2022-07-07T09:19:36.000-05:00","title":"Systemd Creator Lands At Microsoft","url":"https://www.phoronix.com/scan.php?page=news_item\u0026px=Systemd-Creator-Microsoft","score":-4,"flags":6,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rj6xyd/systemd_creator_lands_at_microsoft","submitter_user":{"username":"bfiedler","created_at":"2020-08-07T17:49:16.000-05:00","is_admin":false,"about":"Computer Science PhD student at ETH Zurich.\r\n\r\nThere's no Mastodon link support so here you go: https://mastodon.3fx.ch/@bfiedler","is_moderator":false,"karma":714,"avatar_url":"/avatars/bfiedler-100.png","invited_by_user":"pushcx"},"tags":["linux","person"]},{"short_id":"cnncou","short_id_url":"https://lobste.rs/s/cnncou","created_at":"2022-07-07T09:16:18.000-05:00","title":"Apache Commons Configuration insecure interpolation defaults (CVE-2022-33980)","url":"https://lists.apache.org/thread/tdf5n7j80lfxdhs2764vn0xmpfodm87s","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cnncou/apache_commons_configuration_insecure","submitter_user":{"username":"freddyb","created_at":"2017-02-02T09:12:16.000-06:00","is_admin":false,"about":"Security. Mostly in Browsers, but not exclusively.","is_moderator":false,"karma":8186,"avatar_url":"/avatars/freddyb-100.png","invited_by_user":"stas","keybase_signatures":[{"kb_username":"freddyb","sig_hash":"550e2f5b27d4b5d558c02dfb2b23a628e90635183c93f993eeea4e16b20c51150f"}]},"tags":["security"]},{"short_id":"nygaps","short_id_url":"https://lobste.rs/s/nygaps","created_at":"2022-07-07T08:09:25.000-05:00","title":"How to Achieve Dynamic Dispatch Using Generic Protocols in Swift 5.7","url":"https://swiftsenpai.com/swift/dynamic-dispatch-with-generic-protocols/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nygaps/how_achieve_dynamic_dispatch_using","submitter_user":{"username":"napkindrawing","created_at":"2014-05-14T10:03:04.000-05:00","is_admin":false,"about":"Dad. Tinkerer. Software developer. he/they.","is_moderator":false,"karma":4180,"avatar_url":"/avatars/napkindrawing-100.png","invited_by_user":"howdoipython"},"tags":["swift"]},{"short_id":"ep8alk","short_id_url":"https://lobste.rs/s/ep8alk","created_at":"2022-07-07T07:20:41.000-05:00","title":"MLGO: A Machine Learning Framework for Compiler Optimization","url":"http://ai.googleblog.com/2022/07/mlgo-machine-learning-framework-for.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ep8alk/mlgo_machine_learning_framework_for","submitter_user":{"username":"sanxiyn","created_at":"2015-01-21T09:51:34.000-06:00","is_admin":false,"about":"I made the initial port of Rust to ARM and Android.","is_moderator":false,"karma":9788,"avatar_url":"/avatars/sanxiyn-100.png","invited_by_user":"steveklabnik","github_username":"sanxiyn","twitter_username":"sanxiyn"},"tags":["ai","compilers"]},{"short_id":"0d5j7b","short_id_url":"https://lobste.rs/s/0d5j7b","created_at":"2022-07-07T05:36:22.000-05:00","title":"A dependency injection library based on Go 1.18+ Generics","url":"https://github.com/samber/do","score":3,"flags":1,"comment_count":16,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0d5j7b/dependency_injection_library_based_on_go","submitter_user":{"username":"samber","created_at":"2022-03-04T05:06:56.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":42,"avatar_url":"/avatars/samber-100.png","invited_by_user":"cnivolle"},"tags":["go","programming"]},{"short_id":"pcmrfr","short_id_url":"https://lobste.rs/s/pcmrfr","created_at":"2022-07-07T03:27:00.000-05:00","title":"Scaling our Spreadsheet Engine from Thousands to Billions of Cells","url":"https://www.causal.app/blog/scaling","score":17,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pcmrfr/scaling_our_spreadsheet_engine_from","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":4977,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["performance"]}]