[{"short_id":"t2bi9l","short_id_url":"https://lobste.rs/s/t2bi9l","created_at":"2023-01-04T05:38:27.000-06:00","title":"LKRG - Linux Kernel Runtime Guard","url":"https://lkrg.org/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eLinux Kernel Runtime Guard (LKRG) is a kernel module that performs runtime integrity checking of the Linux kernel and detection of security vulnerability exploits against the kernel.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.openwall.com/lists/announce/2022/12/14/1\" rel=\"ugc\"\u003eLKRG 0.9.6\u003c/a\u003e (2022-12-14) - mailing list announcement of recent version\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/lkrg-org/lkrg\" rel=\"ugc\"\u003elkrg-org/lkrg\u003c/a\u003e - source code\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAdditional resources:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.openwall.com/presentations/OSTconf2020-LKRG-In-A-Nutshell/\" rel=\"ugc\"\u003eLinux Kernel Runtime Guard (LKRG) in a nutshell\u003c/a\u003e (2020-08-13) - presentation about version 0.8\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://openwall.info/wiki/p_lkrg/Main\" rel=\"ugc\"\u003eHistorical Linux Kernel Runtime Guard (LKRG) wiki\u003c/a\u003e (2020-12-17) - exploit detection examples from old versions, no longer updated\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAvailability (quoting lkrg.org as seen on 2023-01-04):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eLKRG packages exist in \u003ca href=\"https://packages.altlinux.org/en/sisyphus/srpms/kernel-source-lkrg\" rel=\"ugc\"\u003eALT Linux\u003c/a\u003e, \u003ca href=\"https://aur.archlinux.org/packages/lkrg-dkms/\" rel=\"ugc\"\u003eArch Linux\u003c/a\u003e, \u003ca href=\"https://dl.astralinux.ru/astra/stable/orel/repository/pool/main/l/lkrg/\" rel=\"ugc\"\u003eAstra Linux\u003c/a\u003e, \u003ca href=\"https://code.funtoo.org/bitbucket/projects/AUTO/repos/security-kit/browse/app-antivirus/lkrg?at=refs%2Fheads%2Fnext\" rel=\"ugc\"\u003eFuntoo\u003c/a\u003e, \u003ca href=\"https://packages.gentoo.org/packages/app-antivirus/lkrg\" rel=\"ugc\"\u003eGentoo\u003c/a\u003e, \u003ca href=\"https://packages.guix.gnu.org/packages/lkrg/\" rel=\"ugc\"\u003eGuix\u003c/a\u003e, \u003ca href=\"https://search.nixos.org/packages?channel=unstable\u0026amp;from=0\u0026amp;size=50\u0026amp;sort=relevance\u0026amp;type=packages\u0026amp;query=lkrg\" rel=\"ugc\"\u003eNixOS\u003c/a\u003e, \u003ca href=\"https://www.whonix.org/wiki/Linux_Kernel_Runtime_Guard_LKRG\" rel=\"ugc\"\u003eWhonix\u003c/a\u003e, and \u003ca href=\"https://git.yoctoproject.org/meta-security/tree/recipes-kernel/lkrg\" rel=\"ugc\"\u003eYocto\u003c/a\u003e (and thus also \u003ca href=\"https://gerrit.openbmc-project.xyz/plugins/gitiles/openbmc/openbmc/+/refs/heads/master/meta-security/recipes-kernel/lkrg/\" rel=\"ugc\"\u003eOpenBMC\u003c/a\u003e). Whonix‚Äôs packaging is also usable for Debian and its other derived distributions (including Ubuntu).\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"Linux Kernel Runtime Guard (LKRG) is a kernel module that performs runtime integrity checking of the Linux kernel and detection of security vulnerability exploits against the kernel.\r\n\r\n- [LKRG 0.9.6](https://www.openwall.com/lists/announce/2022/12/14/1) (2022-12-14) - mailing list announcement of recent version\r\n- [lkrg-org/lkrg](https://github.com/lkrg-org/lkrg) - source code\r\n\r\nAdditional resources:\r\n\r\n- [Linux Kernel Runtime Guard (LKRG) in a nutshell](https://www.openwall.com/presentations/OSTconf2020-LKRG-In-A-Nutshell/) (2020-08-13) - presentation about version 0.8\r\n- [Historical Linux Kernel Runtime Guard (LKRG) wiki](https://openwall.info/wiki/p_lkrg/Main) (2020-12-17) - exploit detection examples from old versions, no longer updated\r\n\r\nAvailability (quoting lkrg.org as seen on 2023-01-04):\r\n\r\n\u003e LKRG packages exist in [ALT Linux](https://packages.altlinux.org/en/sisyphus/srpms/kernel-source-lkrg), [Arch Linux](https://aur.archlinux.org/packages/lkrg-dkms/), [Astra Linux](https://dl.astralinux.ru/astra/stable/orel/repository/pool/main/l/lkrg/), [Funtoo](https://code.funtoo.org/bitbucket/projects/AUTO/repos/security-kit/browse/app-antivirus/lkrg?at=refs%2Fheads%2Fnext), [Gentoo](https://packages.gentoo.org/packages/app-antivirus/lkrg), [Guix](https://packages.guix.gnu.org/packages/lkrg/), [NixOS](https://search.nixos.org/packages?channel=unstable\u0026from=0\u0026size=50\u0026sort=relevance\u0026type=packages\u0026query=lkrg), [Whonix](https://www.whonix.org/wiki/Linux_Kernel_Runtime_Guard_LKRG), and [Yocto](https://git.yoctoproject.org/meta-security/tree/recipes-kernel/lkrg) (and thus also [OpenBMC](https://gerrit.openbmc-project.xyz/plugins/gitiles/openbmc/openbmc/+/refs/heads/master/meta-security/recipes-kernel/lkrg/)). Whonix's packaging is also usable for Debian and its other derived distributions (including Ubuntu).","comments_url":"https://lobste.rs/s/t2bi9l/lkrg_linux_kernel_runtime_guard","submitter_user":{"username":"przemoc","created_at":"2016-08-10T11:29:18.000-05:00","is_admin":false,"about":"Software Engineer / Linux Wizard\r\n\r\nRealist, pragmatist, strong-willed, strong-minded. Sometimes taciturn, sometimes loquacious. FLOSS enthusiast but still using Windows. Alpine Linux advocator.\r\n\r\nhttps://przemoc.net/","is_moderator":false,"karma":160,"avatar_url":"/avatars/przemoc-100.png","invited_by_user":"poptart"},"tags":["linux","security"]},{"short_id":"xl1nyb","short_id_url":"https://lobste.rs/s/xl1nyb","created_at":"2023-01-04T04:03:19.000-06:00","title":"Generalized LL (GLL) Parser","url":"https://rahul.gopinath.org/post/2022/07/02/generalized-ll-parser/","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis post provides a complete tour of Generalized LL (GLL) parsing along with GSS (graph structured stack) and extraction of parse trees from SPPF (shared packed parse forest). This is part of my ongoing effort to document various parsing algorithms.\u003c/p\u003e\n\u003cp\u003eI am looking for feedback on structure as well as content as before.\u003c/p\u003e\n\u003cp\u003eNote: Pyodide takes a little time to initialize, but it should be faster to initialize than spinning up the binder service from Jupyter (but slower to execute).\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://rahul.gopinath.org/post/2022/07/02/generalized-ll-parser/\" rel=\"ugc\"\u003eThis is the writeup.\u003c/a\u003e\u003c/p\u003e\n","description_plain":"This post provides a complete tour of Generalized LL (GLL) parsing along with GSS (graph structured stack) and extraction of parse trees from SPPF (shared packed parse forest). This is part of my ongoing effort to document various parsing algorithms.\r\n\r\nI am looking for feedback on structure as well as content as before.\r\n\r\nNote: Pyodide takes a little time to initialize, but it should be faster to initialize than spinning up the binder service from Jupyter (but slower to execute).\r\n\r\n[This is the writeup.](https://rahul.gopinath.org/post/2022/07/02/generalized-ll-parser/)","comments_url":"https://lobste.rs/s/xl1nyb/generalized_ll_gll_parser","submitter_user":{"username":"vrthra","created_at":"2016-05-03T17:32:26.000-05:00","is_admin":false,"about":"Lecturer (equivalent to an assistant prof. in the U.S.) at the University of Sydney\r\n\r\n(I usually only browse lobste.rs and other social media on weekends. Hence I may not respond immediately to replies.)","is_moderator":false,"karma":1480,"avatar_url":"/avatars/vrthra-100.png","invited_by_user":"derek-jones","twitter_username":"_rahulgopinath"},"tags":["compilers","education","programming","python"]},{"short_id":"qya5ak","short_id_url":"https://lobste.rs/s/qya5ak","created_at":"2023-01-04T02:25:09.000-06:00","title":"JVM Anatomy Quark #11: Moving GC and Locality","url":"https://shipilev.net/jvm/anatomy-quarks/11-moving-gc-locality/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qya5ak/jvm_anatomy_quark_11_moving_gc_locality","submitter_user":{"username":"jmiven","created_at":"2014-04-27T18:35:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1206,"avatar_url":"/avatars/jmiven-100.png","invited_by_user":"kev009","github_username":"jmiven"},"tags":["java","performance"]},{"short_id":"p3uwyt","short_id_url":"https://lobste.rs/s/p3uwyt","created_at":"2023-01-04T02:01:16.000-06:00","title":"Some notes on working with old C code","url":"https://boston.conman.org//2023/01/02.1","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p3uwyt/some_notes_on_working_with_old_c_code","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":19009,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c"]},{"short_id":"l2jxdx","short_id_url":"https://lobste.rs/s/l2jxdx","created_at":"2023-01-04T00:53:49.000-06:00","title":"Is a ZimaBoard the Right Choice for Me?","url":"https://www.martinrowan.co.uk/2023/01/is-a-zimaboard-the-right-choice-for-me/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/l2jxdx/is_zimaboard_right_choice_for_me","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":19009,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["hardware"]},{"short_id":"cqz8ye","short_id_url":"https://lobste.rs/s/cqz8ye","created_at":"2023-01-03T23:53:34.000-06:00","title":"Claude Shannon - Father of the Information Age","url":"https://www.youtube.com/watch?v=z2Whj_nL-x8","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cqz8ye/claude_shannon_father_information_age","submitter_user":{"username":"Zamicol","created_at":"2013-09-10T11:59:49.000-05:00","is_admin":false,"about":"https://zamicol.com","is_moderator":false,"karma":136,"avatar_url":"/avatars/Zamicol-100.png","invited_by_user":"qbit"},"tags":["compsci","person","video"]},{"short_id":"9bttgi","short_id_url":"https://lobste.rs/s/9bttgi","created_at":"2023-01-03T22:08:16.000-06:00","title":"The faker's guide to reading (x86) assembly language","url":"https://www.timdbg.com/posts/fakers-guide-to-assembly/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9bttgi/faker_s_guide_reading_x86_assembly","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":94801,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["assembly","reversing"]},{"short_id":"iuxuua","short_id_url":"https://lobste.rs/s/iuxuua","created_at":"2023-01-03T20:52:45.000-06:00","title":"Parallelizing C++ using Execution Policies","url":"https://azeemba.com/posts/cpp17-execution-policy.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/iuxuua/parallelizing_c_using_execution","submitter_user":{"username":"azeemba","created_at":"2022-10-16T09:43:05.000-05:00","is_admin":false,"about":"https://azeemba.com/","is_moderator":false,"karma":-3,"avatar_url":"/avatars/azeemba-100.png","invited_by_user":"dguo"},"tags":["c++","performance"]},{"short_id":"idu6ni","short_id_url":"https://lobste.rs/s/idu6ni","created_at":"2023-01-03T20:11:53.000-06:00","title":"The MOS 6502 is (mostly) Turing-complete without registers","url":"https://oldvcr.blogspot.com/2023/01/the-mos-6502-is-mostly-turing-complete.html","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eInspired by \u003ca href=\"https://lobste.rs/s/jpm5iw/x86_is_turing_complete_with_no_registers\" rel=\"ugc\"\u003ehttps://lobste.rs/s/jpm5iw/x86_is_turing_complete_with_no_registers\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Inspired by https://lobste.rs/s/jpm5iw/x86_is_turing_complete_with_no_registers","comments_url":"https://lobste.rs/s/idu6ni/mos_6502_is_mostly_turing_complete","submitter_user":{"username":"classichasclass","created_at":"2018-11-05T18:45:47.000-06:00","is_admin":false,"about":"no you're off topic","is_moderator":false,"karma":2728,"avatar_url":"/avatars/classichasclass-100.png","invited_by_user":"sevan"},"tags":["assembly","compilers"]},{"short_id":"dkfnfd","short_id_url":"https://lobste.rs/s/dkfnfd","created_at":"2023-01-03T15:36:22.000-06:00","title":"The Fallacies of Enterprise Computing (2016)","url":"http://blogs.newardassociates.com/blog/2016/enterprise-computing-fallacies.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dkfnfd/fallacies_enterprise_computing_2016","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":24919,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne","twitter_username":"Hillelogram"},"tags":["practices"]},{"short_id":"6qgmde","short_id_url":"https://lobste.rs/s/6qgmde","created_at":"2023-01-03T14:59:01.000-06:00","title":"Some people say 2048-bit RSA is vulnerable to a combo of conventional and current quantum computers","url":"https://www.schneier.com/blog/archives/2023/01/breaking-rsa-with-a-quantum-computer.html","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6qgmde/some_people_say_2048_bit_rsa_is_vulnerable","submitter_user":{"username":"hoistbypetard","created_at":"2019-12-22T23:11:15.000-06:00","is_admin":false,"about":"I enjoy turning coffee into code.","is_moderator":false,"karma":3029,"avatar_url":"/avatars/hoistbypetard-100.png","invited_by_user":"yumaikas"},"tags":["cryptography","security"]},{"short_id":"oyrydm","short_id_url":"https://lobste.rs/s/oyrydm","created_at":"2023-01-03T14:20:28.000-06:00","title":"It is not what you expect, but it is what you want: how Data#initialize is designed","url":"https://zverok.space/blog/2023-01-03-data-initialize.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oyrydm/it_is_not_what_you_expect_it_is_what_you_want","submitter_user":{"username":"zverok","created_at":"2021-01-07T04:42:39.000-06:00","is_admin":false,"about":"Ruby, writer, open data, open-source.\r\n\r\nhttps://zverok.space","is_moderator":false,"karma":500,"avatar_url":"/avatars/zverok-100.png","invited_by_user":"mt"},"tags":["plt","ruby"]},{"short_id":"njzbnf","short_id_url":"https://lobste.rs/s/njzbnf","created_at":"2023-01-03T14:15:18.000-06:00","title":"Satisfiability: Theory, Practice, and Beyond Boot Camp","url":"https://simons.berkeley.edu/workshops/satisfiability-theory-practice-beyond-boot-camp","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eAll videos are public under the ‚Äúvideos‚Äù tab.\u003c/p\u003e\n","description_plain":"All videos are public under the \"videos\" tab.","comments_url":"https://lobste.rs/s/njzbnf/satisfiability_theory_practice_beyond","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":24919,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne","twitter_username":"Hillelogram"},"tags":["compsci","video"]},{"short_id":"lkb4es","short_id_url":"https://lobste.rs/s/lkb4es","created_at":"2023-01-03T14:11:29.000-06:00","title":"What's in a Pod?","url":"https://solidlabresearch.github.io/WhatsInAPod/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lkb4es/what_s_pod","submitter_user":{"username":"quintus","created_at":"2014-10-24T09:28:57.000-05:00","is_admin":false,"about":"Dipl.-Jur. (Ruhr-Universit√§t Bochum). German jurist and assistant scientist at a Chair for Public Law, open-source programmer with Ruby, Go, C, C++. Debian user. [Blog](https://mg.guelker.eu/). Lead developer of a free software 2D jump-and-run game named [TSC](https://secretchronicles.org).","is_moderator":false,"karma":888,"avatar_url":"/avatars/quintus-100.png","invited_by_user":"skade"},"tags":["api","distributed"]},{"short_id":"munw4k","short_id_url":"https://lobste.rs/s/munw4k","created_at":"2023-01-03T13:26:12.000-06:00","title":"Install Ruby 3.2.0 + YJIT with ASDF","url":"https://dev.to/dpaluy/install-ruby-320-yjit-with-asdf-b82","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/munw4k/install_ruby_3_2_0_yjit_with_asdf","submitter_user":{"username":"soulcutter","created_at":"2014-02-18T10:29:29.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":3317,"avatar_url":"/avatars/soulcutter-100.png","invited_by_user":"gabriel","twitter_username":"soulcutter"},"tags":["ruby"]},{"short_id":"kurace","short_id_url":"https://lobste.rs/s/kurace","created_at":"2023-01-03T13:02:09.000-06:00","title":"How to improve Prometheus remote write performance at scale","url":"https://last9.io/blog/how-to-scale-prometheus-remote-write/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kurace/how_improve_prometheus_remote_write","submitter_user":{"username":"prathamesh","created_at":"2017-08-26T12:12:33.000-05:00","is_admin":false,"about":"Curious","is_moderator":false,"karma":113,"avatar_url":"/avatars/prathamesh-100.png","invited_by_user":"schneems"},"tags":["devops"]},{"short_id":"u8wnxe","short_id_url":"https://lobste.rs/s/u8wnxe","created_at":"2023-01-03T12:10:35.000-06:00","title":"Redis Data Types: The Basics","url":"https://thenewstack.io/redis-data-types-the-basics/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/u8wnxe/redis_data_types_basics","submitter_user":{"username":"asteroid","created_at":"2020-01-29T13:58:14.000-06:00","is_admin":false,"about":"Writer. Editor. Computer geek. Chocoholic. Baseball fan. Not always in that order.","is_moderator":false,"karma":534,"avatar_url":"/avatars/asteroid-100.png","invited_by_user":"petdance","github_username":"estherschindler","twitter_username":"estherschindler"},"tags":["databases"]},{"short_id":"ndabux","short_id_url":"https://lobste.rs/s/ndabux","created_at":"2023-01-03T12:03:25.000-06:00","title":"Don't do this: creating useless indexes","url":"https://mydbanotebook.org/post/too-many-indexes/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ndabux/don_t_do_this_creating_useless_indexes","submitter_user":{"username":"tbonesteaks","created_at":"2019-09-24T11:30:46.000-05:00","is_admin":false,"about":"Feel free to email at: tbonesteaks at protonmail.com","is_moderator":false,"karma":1410,"avatar_url":"/avatars/tbonesteaks-100.png","invited_by_user":"wink"},"tags":["databases","practices"]},{"short_id":"ztaskf","short_id_url":"https://lobste.rs/s/ztaskf","created_at":"2023-01-03T11:26:00.000-06:00","title":"Writing a Python SQL engine from scratch","url":"https://github.com/tobymao/sqlglot/blob/main/posts/python_sql_engine.md","score":6,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ztaskf/writing_python_sql_engine_from_scratch","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"eatonphil.com","is_moderator":false,"karma":4542,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"phil_eaton"},"tags":["databases","python"]},{"short_id":"jzukoz","short_id_url":"https://lobste.rs/s/jzukoz","created_at":"2023-01-03T11:06:41.000-06:00","title":"Explicit sequencing of C programs","url":"http://deavmi.assigned.network/research/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eMy research and development project that I worked on during my honours year of 2022 was on the topic of ‚ÄúExplicit sequencing of C programs‚Äù whereby I looked at ways to improve the current state of Software Verification in \u003ca href=\"http://www.southampton.ac.uk/~gp1y10/cseq/\" rel=\"ugc\"\u003eLazy-CSeq\u003c/a\u003e with regards to the underspecified evaluation ordering of function arguments and binary operators in the C programming language. The transformation module was written in Python2 (as is standard with CSeq).\u003c/p\u003e\n","description_plain":"My research and development project that I worked on during my honours year of 2022 was on the topic of ‚ÄúExplicit sequencing of C programs‚Äù whereby I looked at ways to improve the current state of Software Verification in [Lazy-CSeq](http://www.southampton.ac.uk/~gp1y10/cseq/) with regards to the underspecified evaluation ordering of function arguments and binary operators in the C programming language. The transformation module was written in Python2 (as is standard with CSeq).","comments_url":"https://lobste.rs/s/jzukoz/explicit_sequencing_c_programs","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I‚Äôm Tristan B. Kildaire (or deavmi on the Internet) and I‚Äôm a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I‚Äôm really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There‚Äôs so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I‚Äôve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I‚Äôm not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":40,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["c","programming","testing"]},{"short_id":"uslf4h","short_id_url":"https://lobste.rs/s/uslf4h","created_at":"2023-01-03T10:50:58.000-06:00","title":"A confusing lifetime error related to Rust's lifetime elision","url":"https://ntietz.com/blog/confusing-rust-lifetime-elision/","score":8,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uslf4h/confusing_lifetime_error_related_rust_s","submitter_user":{"username":"ntietz","created_at":"2020-08-29T08:20:52.000-05:00","is_admin":false,"about":"I'm a software engineer who focuses on scalable systems and product engineering for things that make the world a better place. Keenly interested in systems programming. Cherry Blues. Python. Rust.\r\n\r\nHomepage is [ntietz.com](https://ntietz.com).","is_moderator":false,"karma":210,"avatar_url":"/avatars/ntietz-100.png","invited_by_user":"kzisme"},"tags":["rust"]},{"short_id":"ow4xyi","short_id_url":"https://lobste.rs/s/ow4xyi","created_at":"2023-01-03T10:44:58.000-06:00","title":"The end of an era","url":"http://deavmi.assigned.network/blog/thanks_again/","score":-1,"flags":3,"comment_count":0,"description":"\u003cp\u003eHaving been locked out of my Lobste.rs account after forgetting my 2FA details I have gone through 4 years of studying, many side projects and a research and development project (of which I will soon be posting about), but along the way of my computer science journey I made some good friends and connections and I thought I would share my wholesome store with you all.\u003c/p\u003e\n","description_plain":"Having been locked out of my Lobste.rs account after forgetting my 2FA details I have gone through 4 years of studying, many side projects and a research and development project (of which I will soon be posting about), but along the way of my computer science journey I made some good friends and connections and I thought I would share my wholesome store with you all.","comments_url":"https://lobste.rs/s/ow4xyi/end_era","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I‚Äôm Tristan B. Kildaire (or deavmi on the Internet) and I‚Äôm a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I‚Äôm really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There‚Äôs so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I‚Äôve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I‚Äôm not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":40,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["compsci","culture","education","person"]},{"short_id":"fpouso","short_id_url":"https://lobste.rs/s/fpouso","created_at":"2023-01-03T10:27:34.000-06:00","title":"PocketBase wrapper with serializer/deserializer support for D","url":"https://github.com/Hax-io/libpb","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eI am an avid D developer and I needed PocketBase but a wrapper for it in D for use for a provate project of mine. At the same time I was very fond of the idea of being able to easily serialize and deserialize arbitrary data types (structs) to the PocketBase format of JSON and vice-versa. D‚Äôs meta programming facilities (of which I was completely new to) made this possible and I now have something I am rather proud of.\u003c/p\u003e\n\u003cp\u003eJust some minor error handling and possible flags I may want to add but so far it is working well (and integrating into the aforementioned project of mine well).\u003c/p\u003e\n\u003cp\u003eAPI docs here: \u003ca href=\"https://libpb.dpldocs.info/libpb.html\" rel=\"ugc\"\u003ehttps://libpb.dpldocs.info/libpb.html\u003c/a\u003e\u003c/p\u003e\n","description_plain":"I am an avid D developer and I needed PocketBase but a wrapper for it in D for use for a provate project of mine. At the same time I was very fond of the idea of being able to easily serialize and deserialize arbitrary data types (structs) to the PocketBase format of JSON and vice-versa. D's meta programming facilities (of which I was completely new to) made this possible and I now have something I am rather proud of.\r\n\r\nJust some minor error handling and possible flags I may want to add but so far it is working well (and integrating into the aforementioned project of mine well).\r\n\r\nAPI docs here: https://libpb.dpldocs.info/libpb.html","comments_url":"https://lobste.rs/s/fpouso/pocketbase_wrapper_with_serializer","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I‚Äôm Tristan B. Kildaire (or deavmi on the Internet) and I‚Äôm a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I‚Äôm really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There‚Äôs so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I‚Äôve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I‚Äôm not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":40,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["api","d","databases"]},{"short_id":"jpm5iw","short_id_url":"https://lobste.rs/s/jpm5iw","created_at":"2023-01-03T10:21:21.000-06:00","title":"x86 is Turing-complete with no registers","url":"https://mainisusuallyafunction.blogspot.com/2014/02/x86-is-turing-complete-with-no-registers.html","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jpm5iw/x86_is_turing_complete_with_no_registers","submitter_user":{"username":"unbalancedparentheses","created_at":"2014-06-21T15:40:39.000-05:00","is_admin":false,"about":"I am a developer that loves building distributed systems, especially with open source technologies. My blog is called [Not a Monad Tutorial](http://notamonadtutorial.com/). I am the tech lead of a small company I own called [LambdaClass](https://github.com/lambdaclass/).\r\n\r\nThe language I like the most for that task is Erlang since it has a lot of built-in tools and features that other languages don't have. In companion with Erlang, I usually use databases such as Cassandra, Riak, Elasticsearch, Redis, PostgreSQL and message queues such as Kafka or RabbitMQ. I work a lot with FreeBSD, OpenBSD, Linux and devops tools like Ansible, Chef, Terraform, Grafana and Prometheus. The last year I've started doing some work in the Deep Learning space with Python, Keras, PyTorch and TensorFlow.\r\n\r\nAt last I love playing with OCaml, Racket/Lisp, Rust and Elm. ","is_moderator":false,"karma":4658,"avatar_url":"/avatars/unbalancedparentheses-100.png","invited_by_user":"talboito","github_username":"unbalancedparentheses","twitter_username":"unbalancedparen"},"tags":["assembly","compilers"]},{"short_id":"p01m42","short_id_url":"https://lobste.rs/s/p01m42","created_at":"2023-01-03T09:57:40.000-06:00","title":"You Want Modules, Not Microservices","url":"https://blogs.newardassociates.com/blog/2023/you-want-modules-not-microservices.html","score":27,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p01m42/you_want_modules_not_microservices","submitter_user":{"username":"ptman","created_at":"2017-06-07T09:22:20.000-05:00","is_admin":false,"about":"https://paul.totterman.name/","is_moderator":false,"karma":989,"avatar_url":"/avatars/ptman-100.png","invited_by_user":"lau","github_username":"ptman","twitter_username":"ptotterm"},"tags":["programming"]}]