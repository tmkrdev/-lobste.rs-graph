[{"short_id":"qbpby9","short_id_url":"https://lobste.rs/s/qbpby9","created_at":"2023-03-21T10:00:26.000-05:00","title":"Implementing a Transformer From Scratch","url":"https://jorisbaan.nl/2022/03/25/implementing-a-transformer-from-scratch.html","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qbpby9/implementing_transformer_from_scratch","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5357,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["ai"]},{"short_id":"ulz9i7","short_id_url":"https://lobste.rs/s/ulz9i7","created_at":"2023-03-21T09:46:56.000-05:00","title":"GPT-4 and professional benchmarks: the wrong answer to the wrong question","url":"https://aisnakeoil.substack.com/p/gpt-4-and-professional-benchmarks","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ulz9i7/gpt_4_professional_benchmarks_wrong","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5357,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["ai"]},{"short_id":"uberay","short_id_url":"https://lobste.rs/s/uberay","created_at":"2023-03-21T09:37:43.000-05:00","title":"Real-World Logical Replication","url":"https://thebuild.com//presentations/logical-nordic-pgday-2023.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uberay/real_world_logical_replication","submitter_user":{"username":"sjamaan","created_at":"2018-08-30T05:08:17.000-05:00","is_admin":false,"about":"Scheme enthusiast from the Netherlands. Core maintainer of CHICKEN Scheme. Check out [my blog](https://www.more-magic.net/) for more information.","is_moderator":false,"karma":5089,"avatar_url":"/avatars/sjamaan-100.png","invited_by_user":"evhan"},"tags":["databases","pdf"]},{"short_id":"odoals","short_id_url":"https://lobste.rs/s/odoals","created_at":"2023-03-21T09:25:55.000-05:00","title":"Tutorial for extracting the GameBoy ROM from photographs of the die","url":"https://github.com/travisgoodspeed/gbrom-tutorial","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/odoals/tutorial_for_extracting_gameboy_rom_from","submitter_user":{"username":"wizardishungry","created_at":"2018-08-13T10:39:55.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1124,"avatar_url":"/avatars/wizardishungry-100.png","invited_by_user":"kusuriya","github_username":"WIZARDISHUNGRY","twitter_username":"WIZARDISHUNGRY","keybase_signatures":[{"kb_username":"wizardishungry","sig_hash":"c5e8c0f01d3e047b18f748ada5a8201b2cce3bf5bb2477ec7d404b1c99a5d94b0f"}]},"tags":["hardware","reversing"]},{"short_id":"lalx23","short_id_url":"https://lobste.rs/s/lalx23","created_at":"2023-03-21T08:17:53.000-05:00","title":"Zig Bits 0x2: Using defer to defeat memory leaks","url":"https://blog.orhun.dev/zig-bits-02/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lalx23/zig_bits_0x2_using_defer_defeat_memory","submitter_user":{"username":"orhun","created_at":"2022-04-16T17:58:30.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":113,"avatar_url":"/avatars/orhun-100.png","invited_by_user":"extrawurst"},"tags":["programming","zig"]},{"short_id":"mjppkn","short_id_url":"https://lobste.rs/s/mjppkn","created_at":"2023-03-21T07:53:02.000-05:00","title":"Navigating the Complexities of File Watching","url":"https://github.com/vercel/turbo/issues/986#issuecomment-1477360394","score":3,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mjppkn/navigating_complexities_file_watching","submitter_user":{"username":"gajus","created_at":"2019-04-09T12:10:10.000-05:00","is_admin":false,"about":"Co-Founder of Contra","is_moderator":false,"karma":72,"avatar_url":"/avatars/gajus-100.png","invited_by_user":"benharri","github_username":"gajus","twitter_username":"kuizinas"},"tags":["javascript","nodejs"]},{"short_id":"qew2si","short_id_url":"https://lobste.rs/s/qew2si","created_at":"2023-03-21T07:50:07.000-05:00","title":"It’s worth putting in the effort to regularly update dependencies","url":"https://felixcrux.com/blog/it-is-worth-regularly-updating-dependencies","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qew2si/it_s_worth_putting_effort_regularly","submitter_user":{"username":"felixc","created_at":"2016-05-28T16:16:07.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":171,"avatar_url":"/avatars/felixc-100.png","invited_by_user":"Screwtape","github_username":"felixc"},"tags":["practices"]},{"short_id":"xmqqj0","short_id_url":"https://lobste.rs/s/xmqqj0","created_at":"2023-03-21T07:34:27.000-05:00","title":"Web fingerprinting is worse than I thought","url":"https://www.bitestring.com/posts/2023-03-19-web-fingerprinting-is-worse-than-I-thought.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xmqqj0/web_fingerprinting_is_worse_than_i","submitter_user":{"username":"zaynetro","created_at":"2020-10-05T07:39:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":226,"avatar_url":"/avatars/zaynetro-100.png","invited_by_user":"arcatan"},"tags":["browsers","privacy","web"]},{"short_id":"evmmmi","short_id_url":"https://lobste.rs/s/evmmmi","created_at":"2023-03-21T07:31:03.000-05:00","title":"Comparing Node.js web frameworks: Which is most secure?","url":"https://snyk.io/blog/comparing-node-js-web-frameworks/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/evmmmi/comparing_node_js_web_frameworks_which_is","submitter_user":{"username":"clarkio","created_at":"2022-09-02T07:43:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1,"avatar_url":"/avatars/clarkio-100.png","invited_by_user":"rdegges"},"tags":["javascript","nodejs","security"]},{"short_id":"ubq5b7","short_id_url":"https://lobste.rs/s/ubq5b7","created_at":"2023-03-21T06:57:22.000-05:00","title":"Why I Will Never Use Alpine Linux Ever Again","url":"https://martinheinz.dev/blog/92","score":8,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ubq5b7/why_i_will_never_use_alpine_linux_ever","submitter_user":{"username":"usrme","created_at":"2021-10-05T04:34:58.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":467,"avatar_url":"/avatars/usrme-100.png","invited_by_user":"gerikson"},"tags":["linux","rant"]},{"short_id":"s0rnlq","short_id_url":"https://lobste.rs/s/s0rnlq","created_at":"2023-03-21T06:40:31.000-05:00","title":"Interactive exercises for builtin `re` and third-party `regex` modules","url":"https://github.com/learnbyexample/TUI-apps/tree/main/PyRegexExercises","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/s0rnlq/interactive_exercises_for_builtin_re","submitter_user":{"username":"learnbyexample","created_at":"2020-06-15T09:51:10.000-05:00","is_admin":false,"about":"Author of several [programming books](https://learnbyexample.github.io/books/). Addicted to reading fantasy books.","is_moderator":false,"karma":2337,"avatar_url":"/avatars/learnbyexample-100.png","invited_by_user":"ngoldbaum","twitter_username":"learn_byexample"},"tags":["python","show"]},{"short_id":"w6fxzo","short_id_url":"https://lobste.rs/s/w6fxzo","created_at":"2023-03-21T06:27:31.000-05:00","title":"Write Predictable software, not Ergonomic","url":"https://serce.me/posts/21-03-2023-write-predictable-software-not-ergonomic","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/w6fxzo/write_predictable_software_not","submitter_user":{"username":"serce","created_at":"2021-05-29T09:36:34.000-05:00","is_admin":false,"about":"https://twitter.com/SerCeMan","is_moderator":false,"karma":240,"avatar_url":"/avatars/serce-100.png","invited_by_user":"breandan","github_username":"SerCeMan","twitter_username":"SerCeMan"},"tags":["programming"]},{"short_id":"mbgpma","short_id_url":"https://lobste.rs/s/mbgpma","created_at":"2023-03-21T05:46:29.000-05:00","title":"I’ve been employed in tech for years, but I’ve almost never worked","url":"https://emaggiori.com/employed-in-tech-for-years-but-almost-never-worked/","score":27,"flags":3,"comment_count":21,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mbgpma/i_ve_been_employed_tech_for_years_i_ve","submitter_user":{"username":"idrougge","created_at":"2020-03-20T09:40:53.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2024,"avatar_url":"/avatars/idrougge-100.png","invited_by_user":"gerikson"},"tags":["practices"]},{"short_id":"92r5xk","short_id_url":"https://lobste.rs/s/92r5xk","created_at":"2023-03-21T05:27:16.000-05:00","title":"letloop.cloud: A cloud for the parenthetical leaning doers","url":"https://github.com/letloop/letloop.cloud","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/92r5xk/letloop_cloud_cloud_for_parenthetical","submitter_user":{"username":"amirouche","created_at":"2019-10-02T13:25:07.000-05:00","is_admin":false,"about":"```scheme\r\n(list (cons 'backend 'python)\r\n      (cons 'frontend 'javascript)\r\n      (cons 'nlp 'wip)\r\n      (cons 'devops 'wip))\r\n```","is_moderator":false,"karma":993,"avatar_url":"/avatars/amirouche-100.png","invited_by_user":"bandali"},"tags":["lisp"]},{"short_id":"rldctv","short_id_url":"https://lobste.rs/s/rldctv","created_at":"2023-03-21T04:06:37.000-05:00","title":"What caused Discord to switch from Go to Rust?","url":"","score":-2,"flags":3,"comment_count":0,"description":"\u003cp\u003eNOTE: This was one of the factors that led Discord to change from Go to Rust.\nRead States\u003c/p\u003e\n\u003cp\u003eRead States is the service that was moved from Go to Rust. Its primary function is to record the channels and messages we have read. Every time we sign in to Discord, send a message, and read a message, Read States is accessed.To put it simple, Read States is on a hot road. Therefore, Incredible speed and minimal latency are required for Read States service.\u003c/p\u003e\n\u003cp\u003eDiscord is a communication platform with billions of read states for users and channels. However, there is only one read state that holds various counters, such as the number of mentions in a channel. These counters must be updated atomically and often reset to 0. To achieve this, each read state service maintains a LRU (least recently used) cache of read states, allowing for fast atomic counter updates. Each cache has millions of users and tons of millions of read states, with cache modifications occurring hundreds of thousands of times each second. This caching strategy helps to efficiently manage and update the vast amount of read states on Discord.\u003c/p\u003e\n\u003cp\u003eBefore moving forward let’s now talk on how RUST and GO manage their memories.\nMemory management in Go\u003c/p\u003e\n\u003cp\u003eMemory is not instantly released in Go upon cache key eviction.Instead, every so often, the garbage collector runs to discover any memory that has no references and releases it. In other words, memory hangs out until the garbage collector can assess if it is genuinely out of use, rather than releasing immediately once it is no longer needed.The amount of effort Go must undertake to figure out what memory is free during garbage collection might cause the application to lag. Go will require garbage pickups to occur at least every two minutes.In other words, regardless of heap growth, go will still trigger a garbage collection if it has not run for 2 minutes.\nMemory management in Rust\u003c/p\u003e\n\u003cp\u003eWith no runtime or garbage collector, Rust is amazingly quick and memory-efficient. It can power performance-critical applications, run on embedded devices, and interface with other languages with ease. Rust implements memory “ownership” as part of a rather novel approach to memory management. Rust essentially keeps track of who is able to read from and write to memory. It is aware of when an application is utilizing memory and instantly releases it when no longer required. Runtime memory problems are practically hard to have since it enforces memory restrictions at build time.You don’t have to manually manage your memory.The compiler handles it for you. So, in the Rust version of the Read States service, a user’s Read State is instantly released from memory when it is removed from the LRU (least recently used) cache.\u003c/p\u003e\n\u003cp\u003eThe read state memory doesn’t wait for the garbage collector to pick it up. Rust promptly releases it because it is no longer needed.No runtime process checks if it needs to be released.\u003c/p\u003e\n\u003cp\u003eurl to original blog\n\u003ca href=\"https://thelegion.tech/posts/hugo-coder-wiki/\" rel=\"ugc\"\u003ehttps://thelegion.tech/posts/hugo-coder-wiki/\u003c/a\u003e\u003c/p\u003e\n","description_plain":"NOTE: This was one of the factors that led Discord to change from Go to Rust.\r\nRead States\r\n\r\nRead States is the service that was moved from Go to Rust. Its primary function is to record the channels and messages we have read. Every time we sign in to Discord, send a message, and read a message, Read States is accessed.To put it simple, Read States is on a hot road. Therefore, Incredible speed and minimal latency are required for Read States service.\r\n\r\nDiscord is a communication platform with billions of read states for users and channels. However, there is only one read state that holds various counters, such as the number of mentions in a channel. These counters must be updated atomically and often reset to 0. To achieve this, each read state service maintains a LRU (least recently used) cache of read states, allowing for fast atomic counter updates. Each cache has millions of users and tons of millions of read states, with cache modifications occurring hundreds of thousands of times each second. This caching strategy helps to efficiently manage and update the vast amount of read states on Discord.\r\n\r\nBefore moving forward let's now talk on how RUST and GO manage their memories.\r\nMemory management in Go\r\n\r\nMemory is not instantly released in Go upon cache key eviction.Instead, every so often, the garbage collector runs to discover any memory that has no references and releases it. In other words, memory hangs out until the garbage collector can assess if it is genuinely out of use, rather than releasing immediately once it is no longer needed.The amount of effort Go must undertake to figure out what memory is free during garbage collection might cause the application to lag. Go will require garbage pickups to occur at least every two minutes.In other words, regardless of heap growth, go will still trigger a garbage collection if it has not run for 2 minutes.\r\nMemory management in Rust\r\n\r\nWith no runtime or garbage collector, Rust is amazingly quick and memory-efficient. It can power performance-critical applications, run on embedded devices, and interface with other languages with ease. Rust implements memory \"ownership\" as part of a rather novel approach to memory management. Rust essentially keeps track of who is able to read from and write to memory. It is aware of when an application is utilizing memory and instantly releases it when no longer required. Runtime memory problems are practically hard to have since it enforces memory restrictions at build time.You don't have to manually manage your memory.The compiler handles it for you. So, in the Rust version of the Read States service, a user's Read State is instantly released from memory when it is removed from the LRU (least recently used) cache.\r\n\r\nThe read state memory doesn't wait for the garbage collector to pick it up. Rust promptly releases it because it is no longer needed.No runtime process checks if it needs to be released.\r\n\r\nurl to original blog\r\nhttps://thelegion.tech/posts/hugo-coder-wiki/","comments_url":"https://lobste.rs/s/rldctv/what_caused_discord_switch_from_go_rust","submitter_user":{"username":"sid1729","created_at":"2023-03-21T03:33:59.000-05:00","is_admin":false,"about":"Hi! am siddharth, i am a computer science enthusiast, I love solving interesting problems with computers and programming. Primarily interested in algorithms , data structures Design patterns, principles, databases, and large-scale systems Back-end technologies.","is_moderator":false,"karma":-5,"avatar_url":"/avatars/sid1729-100.png","invited_by_user":"shivekkhurana"},"tags":["go","rust"]},{"short_id":"9fbnlv","short_id_url":"https://lobste.rs/s/9fbnlv","created_at":"2023-03-21T03:25:02.000-05:00","title":"Github Actions and Go","url":"https://olegk.dev/github-actions-and-go","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9fbnlv/github_actions_go","submitter_user":{"username":"olegkovalov","created_at":"2016-11-29T10:10:37.000-06:00","is_admin":false,"about":"Software engineer. Mostly Go. Love open source. https://telegram.me/olegkovalov","is_moderator":false,"karma":215,"avatar_url":"/avatars/olegkovalov-100.png","invited_by_user":"outcoldman","github_username":"cristaloleg","twitter_username":"oleg_kovalov","keybase_signatures":[{"kb_username":"olegkovalov","sig_hash":"f5ff2640892cb70eb25120b6c23ec2d468eb62d4d665820e3b2da018235fdaac0f"}]},"tags":["go"]},{"short_id":"zcfnl0","short_id_url":"https://lobste.rs/s/zcfnl0","created_at":"2023-03-21T02:08:12.000-05:00","title":"Zero-1-to-3: Zero-shot One Image to 3D Object","url":"https://github.com/cvlab-columbia/zero123","score":4,"flags":0,"comment_count":0,"description":"\u003cp\u003ewebsite: \u003ca href=\"https://zero123.cs.columbia.edu/\" rel=\"ugc\"\u003ehttps://zero123.cs.columbia.edu/\u003c/a\u003e\u003c/p\u003e\n","description_plain":"website: https://zero123.cs.columbia.edu/","comments_url":"https://lobste.rs/s/zcfnl0/zero_1_3_zero_shot_one_image_3d_object","submitter_user":{"username":"BasicallyEternity","created_at":"2023-03-20T12:33:39.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":4,"avatar_url":"/avatars/BasicallyEternity-100.png","invited_by_user":"shapr"},"tags":["ai"]},{"short_id":"zx4xzz","short_id_url":"https://lobste.rs/s/zx4xzz","created_at":"2023-03-21T01:27:59.000-05:00","title":"Twenty-five years of curl","url":"https://daniel.haxx.se/blog/2023/03/20/twenty-five-years-of-curl/","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zx4xzz/twenty_five_years_curl","submitter_user":{"username":"ciprian_craciun","created_at":"2022-02-14T13:47:43.000-06:00","is_admin":false,"about":"IT enthusiast, from programming to operating systems, from networking to cryptography, from cloud to hardware, from Erlang to Java.","is_moderator":false,"karma":893,"avatar_url":"/avatars/ciprian_craciun-100.png","invited_by_user":"syn-ack"},"tags":["historical"]},{"short_id":"hbi9hx","short_id_url":"https://lobste.rs/s/hbi9hx","created_at":"2023-03-21T00:02:57.000-05:00","title":"Gitea 1.19.0 is released","url":"https://blog.gitea.io/2023/03/gitea-1.19.0-is-released/","score":14,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hbi9hx/gitea_1_19_0_is_released","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":20016,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["go","release","vcs"]},{"short_id":"k9ztwl","short_id_url":"https://lobste.rs/s/k9ztwl","created_at":"2023-03-20T23:17:18.000-05:00","title":"Using Metal and Rust to make FFT even faster","url":"https://www.notamonadtutorial.com/using-metal-and-rust-to-make-fft-even-faster/","score":-1,"flags":2,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/k9ztwl/using_metal_rust_make_fft_even_faster","submitter_user":{"username":"unbalancedparentheses","created_at":"2014-06-21T15:40:39.000-05:00","is_admin":false,"about":"I am a developer that loves building distributed systems, especially with open source technologies. My blog is called [Not a Monad Tutorial](http://notamonadtutorial.com/). I am the tech lead of a small company I own called [LambdaClass](https://github.com/lambdaclass/).\r\n\r\nThe language I like the most for that task is Erlang since it has a lot of built-in tools and features that other languages don't have. In companion with Erlang, I usually use databases such as Cassandra, Riak, Elasticsearch, Redis, PostgreSQL and message queues such as Kafka or RabbitMQ. I work a lot with FreeBSD, OpenBSD, Linux and devops tools like Ansible, Chef, Terraform, Grafana and Prometheus. The last year I've started doing some work in the Deep Learning space with Python, Keras, PyTorch and TensorFlow.\r\n\r\nAt last I love playing with OCaml, Racket/Lisp, Rust and Elm. ","is_moderator":false,"karma":4663,"avatar_url":"/avatars/unbalancedparentheses-100.png","invited_by_user":"talboito","github_username":"unbalancedparentheses","twitter_username":"unbalancedparen"},"tags":["math","performance","rust"]},{"short_id":"abjy9x","short_id_url":"https://lobste.rs/s/abjy9x","created_at":"2023-03-20T23:09:22.000-05:00","title":"An aperiodic monotile","url":"https://arxiv.org/pdf/2303.10798.pdf","score":13,"flags":0,"comment_count":3,"description":"\u003cp\u003eA longstanding open problem asks for an aperiodic monotile, also known as an “einstein”: a shape that admits tilings of the plane, but never periodic tilings. We answer this problem for topological disk tiles by exhibiting a continuum of combinatorially equivalent aperiodic polygons. We first show that a representative example, the “hat” polykite, can form clusters called “metatiles”, for which substitution rules can be defined. Because the metatiles admit tilings of the plane, so too does the hat. We then prove that generic members of our continuum of polygons are aperiodic, through a new kind of geometric incommensurability argument. Separately, we give a combinatorial, computer-assisted proof that the hat must form hierarchical – and hence aperiodic – tilings.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.10798\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"A longstanding open problem asks for an aperiodic monotile, also known as an \"einstein\": a shape that admits tilings of the plane, but never periodic tilings. We answer this problem for topological disk tiles by exhibiting a continuum of combinatorially equivalent aperiodic polygons. We first show that a representative example, the \"hat\" polykite, can form clusters called \"metatiles\", for which substitution rules can be defined. Because the metatiles admit tilings of the plane, so too does the hat. We then prove that generic members of our continuum of polygons are aperiodic, through a new kind of geometric incommensurability argument. Separately, we give a combinatorial, computer-assisted proof that the hat must form hierarchical -- and hence aperiodic -- tilings. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.10798)","comments_url":"https://lobste.rs/s/abjy9x/aperiodic_monotile","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96191,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["math","pdf"]},{"short_id":"etebxo","short_id_url":"https://lobste.rs/s/etebxo","created_at":"2023-03-20T22:38:48.000-05:00","title":"Current problems in the alerting space","url":"https://medium.com/keepalerting/current-problems-in-the-alerting-space-8805f8a2419d","score":-2,"flags":3,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/etebxo/current_problems_alerting_space","submitter_user":{"username":"shahargl","created_at":"2023-03-19T22:00:04.000-05:00","is_admin":false,"about":"CTO of Keep keephq.dev","is_moderator":false,"karma":-3,"avatar_url":"/avatars/shahargl-100.png","invited_by_user":"colman"},"tags":["devops"]},{"short_id":"ozsdjz","short_id_url":"https://lobste.rs/s/ozsdjz","created_at":"2023-03-20T19:08:45.000-05:00","title":"Launch OpenBSD vmd Guests on Demand from SSH","url":"https://jonwillia.ms/2023/03/20/vmctl-ssh","score":4,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ozsdjz/launch_openbsd_vmd_guests_on_demand_from","submitter_user":{"username":"wizardishungry","created_at":"2018-08-13T10:39:55.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1124,"avatar_url":"/avatars/wizardishungry-100.png","invited_by_user":"kusuriya","github_username":"WIZARDISHUNGRY","twitter_username":"WIZARDISHUNGRY","keybase_signatures":[{"kb_username":"wizardishungry","sig_hash":"c5e8c0f01d3e047b18f748ada5a8201b2cce3bf5bb2477ec7d404b1c99a5d94b0f"}]},"tags":["openbsd","virtualization"]},{"short_id":"dgnbim","short_id_url":"https://lobste.rs/s/dgnbim","created_at":"2023-03-20T16:06:19.000-05:00","title":"Notes on FFTs: for users","url":"https://fgiesen.wordpress.com/2023/03/19/notes-on-ffts-for-users/","score":11,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dgnbim/notes_on_ffts_for_users","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":96191,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["programming"]},{"short_id":"ll7j3i","short_id_url":"https://lobste.rs/s/ll7j3i","created_at":"2023-03-20T14:07:19.000-05:00","title":"Update on ARC's recent eval efforts","url":"https://evals.alignment.org/blog/2023-03-18-update-on-recent-evals/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ll7j3i/update_on_arc_s_recent_eval_efforts","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5357,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["ai"]}]